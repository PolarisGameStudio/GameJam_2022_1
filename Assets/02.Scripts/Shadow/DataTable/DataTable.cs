using System;
using System.Collections.Generic;
using BansheeGz.BGDatabase;
using Alias_rifegrt_TBL_STAGE = TBL_STAGE;
using Alias_rifegrt_TBL_BATTLEPASS_REWARD = TBL_BATTLEPASS_REWARD;

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

#pragma warning disable 414

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_PLAYER : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_PLAYER(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_PLAYER(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5687599138968587972,5934615542796559276));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public Enum_StatType StatType
	{
		get
		{
			return (Enum_StatType) _StatType[Index];
		}
		set
		{
			_StatType[Index] = value;
		}
	}
	public System.Double Value
	{
		get
		{
			return _Value[Index];
		}
		set
		{
			_Value[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5371492806534021437,3361034538867852967));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_StatType;
	public static BansheeGz.BGDatabase.BGFieldEnum _StatType
	{
		get
		{
			if(_ufle12jhs77_StatType==null || _ufle12jhs77_StatType.IsDeleted) _ufle12jhs77_StatType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4810492547727373503,4935171528609877947));
			return _ufle12jhs77_StatType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_Value;
	public static BansheeGz.BGDatabase.BGFieldDouble _Value
	{
		get
		{
			if(_ufle12jhs77_Value==null || _ufle12jhs77_Value.IsDeleted) _ufle12jhs77_Value=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5746211030539002987,8938136439251550881));
			return _ufle12jhs77_Value;
		}
	}
	private static readonly TBL_PLAYER.Factory _factory0_PFS = new TBL_PLAYER.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_UPGRADE_GOLD.Factory _factory3_PFS = new TBL_UPGRADE_GOLD.Factory();
	private static readonly TBL_QUEST.Factory _factory4_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory5_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory6_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory7_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory8_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON_SMITH.Factory _factory9_PFS = new TBL_DUNGEON_SMITH.Factory();
	private static readonly TBL_SHOP.Factory _factory10_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory11_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON_TREASURE.Factory _factory12_PFS = new TBL_DUNGEON_TREASURE.Factory();
	private static readonly TBL_DUNGEON_BOSS.Factory _factory13_PFS = new TBL_DUNGEON_BOSS.Factory();
	private static readonly TBL_PACKAGE.Factory _factory14_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_GACHA_EQUIPMENT.Factory _factory15_PFS = new TBL_GACHA_EQUIPMENT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory16_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory17_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_UPGRADE_STAT.Factory _factory18_PFS = new TBL_UPGRADE_STAT.Factory();
	private static readonly TBL_STAGE.Factory _factory19_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_EQUIPMENT.Factory _factory20_PFS = new TBL_EQUIPMENT.Factory();
	private static readonly TBL_PROMOTION.Factory _factory21_PFS = new TBL_PROMOTION.Factory();
	private static readonly TBL_ADVENTURE_STORY.Factory _factory22_PFS = new TBL_ADVENTURE_STORY.Factory();
	private static readonly TBL_ADVENTURE_DUNGEON.Factory _factory23_PFS = new TBL_ADVENTURE_DUNGEON.Factory();
	private static readonly TBL_UPGRADE_DICE.Factory _factory24_PFS = new TBL_UPGRADE_DICE.Factory();
	private static readonly TBL_GACHA_DICE.Factory _factory25_PFS = new TBL_GACHA_DICE.Factory();
	private static readonly TBL_FOLLOWER.Factory _factory26_PFS = new TBL_FOLLOWER.Factory();
	private TBL_PLAYER() : base(MetaDefault)
	{
	}
	private TBL_PLAYER(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_PLAYER(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_PLAYER(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_PLAYER FindEntity(Predicate<TBL_PLAYER> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_PLAYER) entity)) as TBL_PLAYER;
	}
	public static List<TBL_PLAYER> FindEntities(Predicate<TBL_PLAYER> filter, List<TBL_PLAYER> result=null, Comparison<TBL_PLAYER> sort=null)
	{
		result = result ?? new List<TBL_PLAYER>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_PLAYER) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_PLAYER) e1, (TBL_PLAYER) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_PLAYER) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_PLAYER> action, Predicate<TBL_PLAYER> filter=null, Comparison<TBL_PLAYER> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_PLAYER) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_PLAYER) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_PLAYER)e1,(TBL_PLAYER)e2));
	}
	public static TBL_PLAYER GetEntity(BGId entityId)
	{
		return (TBL_PLAYER) MetaDefault.GetEntity(entityId);
	}
	public static TBL_PLAYER GetEntity(int index)
	{
		return (TBL_PLAYER) MetaDefault[index];
	}
	public static TBL_PLAYER GetEntity(string entityName)
	{
		return (TBL_PLAYER) MetaDefault.GetEntity(entityName);
	}
	public static TBL_PLAYER NewEntity()
	{
		return (TBL_PLAYER) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_MONSTER : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_MONSTER(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_MONSTER(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5421531314203514036,6388724777876390810));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Int32 Damage
	{
		get
		{
			return _Damage[Index];
		}
		set
		{
			_Damage[Index] = value;
		}
	}
	public System.Int32 Health
	{
		get
		{
			return _Health[Index];
		}
		set
		{
			_Health[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5418135666132609525,6368504847489294503));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Damage;
	public static BansheeGz.BGDatabase.BGFieldInt _Damage
	{
		get
		{
			if(_ufle12jhs77_Damage==null || _ufle12jhs77_Damage.IsDeleted) _ufle12jhs77_Damage=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5389467934627165617,17068544836651537078));
			return _ufle12jhs77_Damage;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Health;
	public static BansheeGz.BGDatabase.BGFieldInt _Health
	{
		get
		{
			if(_ufle12jhs77_Health==null || _ufle12jhs77_Health.IsDeleted) _ufle12jhs77_Health=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4835013640429364850,7398375618925701525));
			return _ufle12jhs77_Health;
		}
	}
	private static readonly TBL_PLAYER.Factory _factory0_PFS = new TBL_PLAYER.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_UPGRADE_GOLD.Factory _factory3_PFS = new TBL_UPGRADE_GOLD.Factory();
	private static readonly TBL_QUEST.Factory _factory4_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory5_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory6_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory7_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory8_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON_SMITH.Factory _factory9_PFS = new TBL_DUNGEON_SMITH.Factory();
	private static readonly TBL_SHOP.Factory _factory10_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory11_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON_TREASURE.Factory _factory12_PFS = new TBL_DUNGEON_TREASURE.Factory();
	private static readonly TBL_DUNGEON_BOSS.Factory _factory13_PFS = new TBL_DUNGEON_BOSS.Factory();
	private static readonly TBL_PACKAGE.Factory _factory14_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_GACHA_EQUIPMENT.Factory _factory15_PFS = new TBL_GACHA_EQUIPMENT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory16_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory17_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_UPGRADE_STAT.Factory _factory18_PFS = new TBL_UPGRADE_STAT.Factory();
	private static readonly TBL_STAGE.Factory _factory19_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_EQUIPMENT.Factory _factory20_PFS = new TBL_EQUIPMENT.Factory();
	private static readonly TBL_PROMOTION.Factory _factory21_PFS = new TBL_PROMOTION.Factory();
	private static readonly TBL_ADVENTURE_STORY.Factory _factory22_PFS = new TBL_ADVENTURE_STORY.Factory();
	private static readonly TBL_ADVENTURE_DUNGEON.Factory _factory23_PFS = new TBL_ADVENTURE_DUNGEON.Factory();
	private static readonly TBL_UPGRADE_DICE.Factory _factory24_PFS = new TBL_UPGRADE_DICE.Factory();
	private static readonly TBL_GACHA_DICE.Factory _factory25_PFS = new TBL_GACHA_DICE.Factory();
	private static readonly TBL_FOLLOWER.Factory _factory26_PFS = new TBL_FOLLOWER.Factory();
	private TBL_MONSTER() : base(MetaDefault)
	{
	}
	private TBL_MONSTER(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_MONSTER(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_MONSTER(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_MONSTER FindEntity(Predicate<TBL_MONSTER> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_MONSTER) entity)) as TBL_MONSTER;
	}
	public static List<TBL_MONSTER> FindEntities(Predicate<TBL_MONSTER> filter, List<TBL_MONSTER> result=null, Comparison<TBL_MONSTER> sort=null)
	{
		result = result ?? new List<TBL_MONSTER>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_MONSTER) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_MONSTER) e1, (TBL_MONSTER) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_MONSTER) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_MONSTER> action, Predicate<TBL_MONSTER> filter=null, Comparison<TBL_MONSTER> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_MONSTER) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_MONSTER) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_MONSTER)e1,(TBL_MONSTER)e2));
	}
	public static TBL_MONSTER GetEntity(BGId entityId)
	{
		return (TBL_MONSTER) MetaDefault.GetEntity(entityId);
	}
	public static TBL_MONSTER GetEntity(int index)
	{
		return (TBL_MONSTER) MetaDefault[index];
	}
	public static TBL_MONSTER GetEntity(string entityName)
	{
		return (TBL_MONSTER) MetaDefault.GetEntity(entityName);
	}
	public static TBL_MONSTER NewEntity()
	{
		return (TBL_MONSTER) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_SKILL : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_SKILL(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_SKILL(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4694800490803654166,980251405016328624));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public SkillType SkillType
	{
		get
		{
			return (SkillType) _SkillType[Index];
		}
		set
		{
			_SkillType[Index] = value;
		}
	}
	public Enum_ItemGrade Grade
	{
		get
		{
			return (Enum_ItemGrade) _Grade[Index];
		}
		set
		{
			_Grade[Index] = value;
		}
	}
	public System.Single Value
	{
		get
		{
			return _Value[Index];
		}
		set
		{
			_Value[Index] = value;
		}
	}
	public System.Single IncreaseValue
	{
		get
		{
			return _IncreaseValue[Index];
		}
		set
		{
			_IncreaseValue[Index] = value;
		}
	}
	public System.Single CoolTime
	{
		get
		{
			return _CoolTime[Index];
		}
		set
		{
			_CoolTime[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5450511217045133028,1534831260943557524));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_SkillType;
	public static BansheeGz.BGDatabase.BGFieldEnum _SkillType
	{
		get
		{
			if(_ufle12jhs77_SkillType==null || _ufle12jhs77_SkillType.IsDeleted) _ufle12jhs77_SkillType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4906265187218299320,8256477299138777984));
			return _ufle12jhs77_SkillType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_Grade;
	public static BansheeGz.BGDatabase.BGFieldEnum _Grade
	{
		get
		{
			if(_ufle12jhs77_Grade==null || _ufle12jhs77_Grade.IsDeleted) _ufle12jhs77_Grade=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5131888396718360431,11746754230977427384));
			return _ufle12jhs77_Grade;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Value;
	public static BansheeGz.BGDatabase.BGFieldFloat _Value
	{
		get
		{
			if(_ufle12jhs77_Value==null || _ufle12jhs77_Value.IsDeleted) _ufle12jhs77_Value=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4799154805528818524,1830960030846217874));
			return _ufle12jhs77_Value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_IncreaseValue;
	public static BansheeGz.BGDatabase.BGFieldFloat _IncreaseValue
	{
		get
		{
			if(_ufle12jhs77_IncreaseValue==null || _ufle12jhs77_IncreaseValue.IsDeleted) _ufle12jhs77_IncreaseValue=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5484682534203116903,454047794088685753));
			return _ufle12jhs77_IncreaseValue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_CoolTime;
	public static BansheeGz.BGDatabase.BGFieldFloat _CoolTime
	{
		get
		{
			if(_ufle12jhs77_CoolTime==null || _ufle12jhs77_CoolTime.IsDeleted) _ufle12jhs77_CoolTime=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5232186021110550383,8926376847671037837));
			return _ufle12jhs77_CoolTime;
		}
	}
	private static readonly TBL_PLAYER.Factory _factory0_PFS = new TBL_PLAYER.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_UPGRADE_GOLD.Factory _factory3_PFS = new TBL_UPGRADE_GOLD.Factory();
	private static readonly TBL_QUEST.Factory _factory4_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory5_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory6_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory7_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory8_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON_SMITH.Factory _factory9_PFS = new TBL_DUNGEON_SMITH.Factory();
	private static readonly TBL_SHOP.Factory _factory10_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory11_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON_TREASURE.Factory _factory12_PFS = new TBL_DUNGEON_TREASURE.Factory();
	private static readonly TBL_DUNGEON_BOSS.Factory _factory13_PFS = new TBL_DUNGEON_BOSS.Factory();
	private static readonly TBL_PACKAGE.Factory _factory14_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_GACHA_EQUIPMENT.Factory _factory15_PFS = new TBL_GACHA_EQUIPMENT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory16_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory17_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_UPGRADE_STAT.Factory _factory18_PFS = new TBL_UPGRADE_STAT.Factory();
	private static readonly TBL_STAGE.Factory _factory19_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_EQUIPMENT.Factory _factory20_PFS = new TBL_EQUIPMENT.Factory();
	private static readonly TBL_PROMOTION.Factory _factory21_PFS = new TBL_PROMOTION.Factory();
	private static readonly TBL_ADVENTURE_STORY.Factory _factory22_PFS = new TBL_ADVENTURE_STORY.Factory();
	private static readonly TBL_ADVENTURE_DUNGEON.Factory _factory23_PFS = new TBL_ADVENTURE_DUNGEON.Factory();
	private static readonly TBL_UPGRADE_DICE.Factory _factory24_PFS = new TBL_UPGRADE_DICE.Factory();
	private static readonly TBL_GACHA_DICE.Factory _factory25_PFS = new TBL_GACHA_DICE.Factory();
	private static readonly TBL_FOLLOWER.Factory _factory26_PFS = new TBL_FOLLOWER.Factory();
	private TBL_SKILL() : base(MetaDefault)
	{
	}
	private TBL_SKILL(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_SKILL(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_SKILL(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_SKILL FindEntity(Predicate<TBL_SKILL> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_SKILL) entity)) as TBL_SKILL;
	}
	public static List<TBL_SKILL> FindEntities(Predicate<TBL_SKILL> filter, List<TBL_SKILL> result=null, Comparison<TBL_SKILL> sort=null)
	{
		result = result ?? new List<TBL_SKILL>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_SKILL) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_SKILL) e1, (TBL_SKILL) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_SKILL) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_SKILL> action, Predicate<TBL_SKILL> filter=null, Comparison<TBL_SKILL> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_SKILL) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_SKILL) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_SKILL)e1,(TBL_SKILL)e2));
	}
	public static TBL_SKILL GetEntity(BGId entityId)
	{
		return (TBL_SKILL) MetaDefault.GetEntity(entityId);
	}
	public static TBL_SKILL GetEntity(int index)
	{
		return (TBL_SKILL) MetaDefault[index];
	}
	public static TBL_SKILL GetEntity(string entityName)
	{
		return (TBL_SKILL) MetaDefault.GetEntity(entityName);
	}
	public static TBL_SKILL NewEntity()
	{
		return (TBL_SKILL) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_UPGRADE_GOLD : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_UPGRADE_GOLD(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_UPGRADE_GOLD(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5601299785320660505,17523078557307415477));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public Enum_StatType StatType
	{
		get
		{
			return (Enum_StatType) _StatType[Index];
		}
		set
		{
			_StatType[Index] = value;
		}
	}
	public System.Single IncreaseValue
	{
		get
		{
			return _IncreaseValue[Index];
		}
		set
		{
			_IncreaseValue[Index] = value;
		}
	}
	public System.Int32 GoldCost
	{
		get
		{
			return _GoldCost[Index];
		}
		set
		{
			_GoldCost[Index] = value;
		}
	}
	public System.Int32 IncreaseGoldCost
	{
		get
		{
			return _IncreaseGoldCost[Index];
		}
		set
		{
			_IncreaseGoldCost[Index] = value;
		}
	}
	public System.Int32 MaxLevel
	{
		get
		{
			return _MaxLevel[Index];
		}
		set
		{
			_MaxLevel[Index] = value;
		}
	}
	public System.Boolean IsLock
	{
		get
		{
			return _IsLock[Index];
		}
		set
		{
			_IsLock[Index] = value;
		}
	}
	public Enum_StatType Condition
	{
		get
		{
			return (Enum_StatType) _Condition[Index];
		}
		set
		{
			_Condition[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5648051528464325904,10469811450426889872));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_StatType;
	public static BansheeGz.BGDatabase.BGFieldEnum _StatType
	{
		get
		{
			if(_ufle12jhs77_StatType==null || _ufle12jhs77_StatType.IsDeleted) _ufle12jhs77_StatType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5305558587697189434,5235676377004260278));
			return _ufle12jhs77_StatType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_IncreaseValue;
	public static BansheeGz.BGDatabase.BGFieldFloat _IncreaseValue
	{
		get
		{
			if(_ufle12jhs77_IncreaseValue==null || _ufle12jhs77_IncreaseValue.IsDeleted) _ufle12jhs77_IncreaseValue=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4919427555162654292,6601637984274890414));
			return _ufle12jhs77_IncreaseValue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_GoldCost;
	public static BansheeGz.BGDatabase.BGFieldInt _GoldCost
	{
		get
		{
			if(_ufle12jhs77_GoldCost==null || _ufle12jhs77_GoldCost.IsDeleted) _ufle12jhs77_GoldCost=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4945340846008844857,7584340830752107150));
			return _ufle12jhs77_GoldCost;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_IncreaseGoldCost;
	public static BansheeGz.BGDatabase.BGFieldInt _IncreaseGoldCost
	{
		get
		{
			if(_ufle12jhs77_IncreaseGoldCost==null || _ufle12jhs77_IncreaseGoldCost.IsDeleted) _ufle12jhs77_IncreaseGoldCost=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5676774758861250415,2818324055938919554));
			return _ufle12jhs77_IncreaseGoldCost;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_MaxLevel;
	public static BansheeGz.BGDatabase.BGFieldInt _MaxLevel
	{
		get
		{
			if(_ufle12jhs77_MaxLevel==null || _ufle12jhs77_MaxLevel.IsDeleted) _ufle12jhs77_MaxLevel=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5459640547434070240,15658810182849293203));
			return _ufle12jhs77_MaxLevel;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldBool _ufle12jhs77_IsLock;
	public static BansheeGz.BGDatabase.BGFieldBool _IsLock
	{
		get
		{
			if(_ufle12jhs77_IsLock==null || _ufle12jhs77_IsLock.IsDeleted) _ufle12jhs77_IsLock=(BansheeGz.BGDatabase.BGFieldBool) MetaDefault.GetField(new BGId(4799935098982552113,11553652848821894586));
			return _ufle12jhs77_IsLock;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_Condition;
	public static BansheeGz.BGDatabase.BGFieldEnum _Condition
	{
		get
		{
			if(_ufle12jhs77_Condition==null || _ufle12jhs77_Condition.IsDeleted) _ufle12jhs77_Condition=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5042512801611395887,3797600495223484822));
			return _ufle12jhs77_Condition;
		}
	}
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_WithStatType;
	public static BansheeGz.BGDatabase.BGKey _WithStatType
	{
		get
		{
			if(_edeht3sdad33_WithStatType==null || _edeht3sdad33_WithStatType.IsDeleted) _edeht3sdad33_WithStatType= MetaDefault.GetKey(new BGId(5360324774481109337,16601996368048132228));
			return _edeht3sdad33_WithStatType;
		}
	}
	private static readonly TBL_PLAYER.Factory _factory0_PFS = new TBL_PLAYER.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_UPGRADE_GOLD.Factory _factory3_PFS = new TBL_UPGRADE_GOLD.Factory();
	private static readonly TBL_QUEST.Factory _factory4_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory5_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory6_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory7_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory8_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON_SMITH.Factory _factory9_PFS = new TBL_DUNGEON_SMITH.Factory();
	private static readonly TBL_SHOP.Factory _factory10_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory11_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON_TREASURE.Factory _factory12_PFS = new TBL_DUNGEON_TREASURE.Factory();
	private static readonly TBL_DUNGEON_BOSS.Factory _factory13_PFS = new TBL_DUNGEON_BOSS.Factory();
	private static readonly TBL_PACKAGE.Factory _factory14_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_GACHA_EQUIPMENT.Factory _factory15_PFS = new TBL_GACHA_EQUIPMENT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory16_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory17_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_UPGRADE_STAT.Factory _factory18_PFS = new TBL_UPGRADE_STAT.Factory();
	private static readonly TBL_STAGE.Factory _factory19_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_EQUIPMENT.Factory _factory20_PFS = new TBL_EQUIPMENT.Factory();
	private static readonly TBL_PROMOTION.Factory _factory21_PFS = new TBL_PROMOTION.Factory();
	private static readonly TBL_ADVENTURE_STORY.Factory _factory22_PFS = new TBL_ADVENTURE_STORY.Factory();
	private static readonly TBL_ADVENTURE_DUNGEON.Factory _factory23_PFS = new TBL_ADVENTURE_DUNGEON.Factory();
	private static readonly TBL_UPGRADE_DICE.Factory _factory24_PFS = new TBL_UPGRADE_DICE.Factory();
	private static readonly TBL_GACHA_DICE.Factory _factory25_PFS = new TBL_GACHA_DICE.Factory();
	private static readonly TBL_FOLLOWER.Factory _factory26_PFS = new TBL_FOLLOWER.Factory();
	private TBL_UPGRADE_GOLD() : base(MetaDefault)
	{
	}
	private TBL_UPGRADE_GOLD(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_UPGRADE_GOLD(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_UPGRADE_GOLD(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_UPGRADE_GOLD FindEntity(Predicate<TBL_UPGRADE_GOLD> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_UPGRADE_GOLD) entity)) as TBL_UPGRADE_GOLD;
	}
	public static List<TBL_UPGRADE_GOLD> FindEntities(Predicate<TBL_UPGRADE_GOLD> filter, List<TBL_UPGRADE_GOLD> result=null, Comparison<TBL_UPGRADE_GOLD> sort=null)
	{
		result = result ?? new List<TBL_UPGRADE_GOLD>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_UPGRADE_GOLD) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_UPGRADE_GOLD) e1, (TBL_UPGRADE_GOLD) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_UPGRADE_GOLD) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_UPGRADE_GOLD> action, Predicate<TBL_UPGRADE_GOLD> filter=null, Comparison<TBL_UPGRADE_GOLD> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_UPGRADE_GOLD) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_UPGRADE_GOLD) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_UPGRADE_GOLD)e1,(TBL_UPGRADE_GOLD)e2));
	}
	public static TBL_UPGRADE_GOLD GetEntity(BGId entityId)
	{
		return (TBL_UPGRADE_GOLD) MetaDefault.GetEntity(entityId);
	}
	public static TBL_UPGRADE_GOLD GetEntity(int index)
	{
		return (TBL_UPGRADE_GOLD) MetaDefault[index];
	}
	public static TBL_UPGRADE_GOLD GetEntity(string entityName)
	{
		return (TBL_UPGRADE_GOLD) MetaDefault.GetEntity(entityName);
	}
	public static TBL_UPGRADE_GOLD NewEntity()
	{
		return (TBL_UPGRADE_GOLD) MetaDefault.NewEntity();
	}
	public static TBL_UPGRADE_GOLD GetEntityByKeyWithStatType(Enum_StatType StatType)
	{
		return (TBL_UPGRADE_GOLD) _WithStatType.GetEntityByKey(StatType);
	}
	public static List<TBL_UPGRADE_GOLD> GetEntitiesByKeyWithStatType(Enum_StatType StatType)
	{
		var result = _WithStatType.GetEntitiesByKey(StatType);
		if(result==null || result.Count==0) return null;
		var list = new List<TBL_UPGRADE_GOLD>(result.Count);
		for(var i = 0 ; i < result.Count ; i++) list.Add((TBL_UPGRADE_GOLD) result[i]);
		return list;
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_QUEST : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_QUEST(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_QUEST(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4737641918431865773,10349296186385438391));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public QuestType QuestType
	{
		get
		{
			return (QuestType) _QuestType[Index];
		}
		set
		{
			_QuestType[Index] = value;
		}
	}
	public System.Int32 CompleteCount
	{
		get
		{
			return _CompleteCount[Index];
		}
		set
		{
			_CompleteCount[Index] = value;
		}
	}
	public System.Int32 RewardCount
	{
		get
		{
			return _RewardCount[Index];
		}
		set
		{
			_RewardCount[Index] = value;
		}
	}
	public System.Boolean Loop
	{
		get
		{
			return _Loop[Index];
		}
		set
		{
			_Loop[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5242044307787969527,17121037268218249909));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_QuestType;
	public static BansheeGz.BGDatabase.BGFieldEnum _QuestType
	{
		get
		{
			if(_ufle12jhs77_QuestType==null || _ufle12jhs77_QuestType.IsDeleted) _ufle12jhs77_QuestType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5381300206191287634,4274782657743871377));
			return _ufle12jhs77_QuestType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_CompleteCount;
	public static BansheeGz.BGDatabase.BGFieldInt _CompleteCount
	{
		get
		{
			if(_ufle12jhs77_CompleteCount==null || _ufle12jhs77_CompleteCount.IsDeleted) _ufle12jhs77_CompleteCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5171258453771690651,9473974429354179968));
			return _ufle12jhs77_CompleteCount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardCount;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardCount
	{
		get
		{
			if(_ufle12jhs77_RewardCount==null || _ufle12jhs77_RewardCount.IsDeleted) _ufle12jhs77_RewardCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5363417728403555008,16444959942312130947));
			return _ufle12jhs77_RewardCount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldBool _ufle12jhs77_Loop;
	public static BansheeGz.BGDatabase.BGFieldBool _Loop
	{
		get
		{
			if(_ufle12jhs77_Loop==null || _ufle12jhs77_Loop.IsDeleted) _ufle12jhs77_Loop=(BansheeGz.BGDatabase.BGFieldBool) MetaDefault.GetField(new BGId(5055133272924195571,3649291919773869728));
			return _ufle12jhs77_Loop;
		}
	}
	private static readonly TBL_PLAYER.Factory _factory0_PFS = new TBL_PLAYER.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_UPGRADE_GOLD.Factory _factory3_PFS = new TBL_UPGRADE_GOLD.Factory();
	private static readonly TBL_QUEST.Factory _factory4_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory5_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory6_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory7_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory8_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON_SMITH.Factory _factory9_PFS = new TBL_DUNGEON_SMITH.Factory();
	private static readonly TBL_SHOP.Factory _factory10_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory11_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON_TREASURE.Factory _factory12_PFS = new TBL_DUNGEON_TREASURE.Factory();
	private static readonly TBL_DUNGEON_BOSS.Factory _factory13_PFS = new TBL_DUNGEON_BOSS.Factory();
	private static readonly TBL_PACKAGE.Factory _factory14_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_GACHA_EQUIPMENT.Factory _factory15_PFS = new TBL_GACHA_EQUIPMENT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory16_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory17_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_UPGRADE_STAT.Factory _factory18_PFS = new TBL_UPGRADE_STAT.Factory();
	private static readonly TBL_STAGE.Factory _factory19_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_EQUIPMENT.Factory _factory20_PFS = new TBL_EQUIPMENT.Factory();
	private static readonly TBL_PROMOTION.Factory _factory21_PFS = new TBL_PROMOTION.Factory();
	private static readonly TBL_ADVENTURE_STORY.Factory _factory22_PFS = new TBL_ADVENTURE_STORY.Factory();
	private static readonly TBL_ADVENTURE_DUNGEON.Factory _factory23_PFS = new TBL_ADVENTURE_DUNGEON.Factory();
	private static readonly TBL_UPGRADE_DICE.Factory _factory24_PFS = new TBL_UPGRADE_DICE.Factory();
	private static readonly TBL_GACHA_DICE.Factory _factory25_PFS = new TBL_GACHA_DICE.Factory();
	private static readonly TBL_FOLLOWER.Factory _factory26_PFS = new TBL_FOLLOWER.Factory();
	private TBL_QUEST() : base(MetaDefault)
	{
	}
	private TBL_QUEST(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_QUEST(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_QUEST(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_QUEST FindEntity(Predicate<TBL_QUEST> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_QUEST) entity)) as TBL_QUEST;
	}
	public static List<TBL_QUEST> FindEntities(Predicate<TBL_QUEST> filter, List<TBL_QUEST> result=null, Comparison<TBL_QUEST> sort=null)
	{
		result = result ?? new List<TBL_QUEST>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_QUEST) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_QUEST) e1, (TBL_QUEST) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_QUEST) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_QUEST> action, Predicate<TBL_QUEST> filter=null, Comparison<TBL_QUEST> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_QUEST) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_QUEST) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_QUEST)e1,(TBL_QUEST)e2));
	}
	public static TBL_QUEST GetEntity(BGId entityId)
	{
		return (TBL_QUEST) MetaDefault.GetEntity(entityId);
	}
	public static TBL_QUEST GetEntity(int index)
	{
		return (TBL_QUEST) MetaDefault[index];
	}
	public static TBL_QUEST GetEntity(string entityName)
	{
		return (TBL_QUEST) MetaDefault.GetEntity(entityName);
	}
	public static TBL_QUEST NewEntity()
	{
		return (TBL_QUEST) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_ACHIEVEMENT : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_ACHIEVEMENT(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_ACHIEVEMENT(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5570082819208947132,1549598080158959258));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public AchievementKind AchievementKind
	{
		get
		{
			return (AchievementKind) _AchievementKind[Index];
		}
		set
		{
			_AchievementKind[Index] = value;
		}
	}
	public System.Int32 Order
	{
		get
		{
			return _Order[Index];
		}
		set
		{
			_Order[Index] = value;
		}
	}
	public AchievementType AchievementType
	{
		get
		{
			return (AchievementType) _AchievementType[Index];
		}
		set
		{
			_AchievementType[Index] = value;
		}
	}
	public System.Double CompleteCount
	{
		get
		{
			return _CompleteCount[Index];
		}
		set
		{
			_CompleteCount[Index] = value;
		}
	}
	public System.Int32 RewardCount
	{
		get
		{
			return _RewardCount[Index];
		}
		set
		{
			_RewardCount[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5094898722444273120,13953906469606858886));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_AchievementKind;
	public static BansheeGz.BGDatabase.BGFieldEnum _AchievementKind
	{
		get
		{
			if(_ufle12jhs77_AchievementKind==null || _ufle12jhs77_AchievementKind.IsDeleted) _ufle12jhs77_AchievementKind=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4733953057463769264,14408357974958245531));
			return _ufle12jhs77_AchievementKind;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Order;
	public static BansheeGz.BGDatabase.BGFieldInt _Order
	{
		get
		{
			if(_ufle12jhs77_Order==null || _ufle12jhs77_Order.IsDeleted) _ufle12jhs77_Order=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4629272143882213731,16698501600695322299));
			return _ufle12jhs77_Order;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_AchievementType;
	public static BansheeGz.BGDatabase.BGFieldEnum _AchievementType
	{
		get
		{
			if(_ufle12jhs77_AchievementType==null || _ufle12jhs77_AchievementType.IsDeleted) _ufle12jhs77_AchievementType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4929253528140667737,8282060114930064776));
			return _ufle12jhs77_AchievementType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_CompleteCount;
	public static BansheeGz.BGDatabase.BGFieldDouble _CompleteCount
	{
		get
		{
			if(_ufle12jhs77_CompleteCount==null || _ufle12jhs77_CompleteCount.IsDeleted) _ufle12jhs77_CompleteCount=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5220672282114016254,8833762879931125680));
			return _ufle12jhs77_CompleteCount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardCount;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardCount
	{
		get
		{
			if(_ufle12jhs77_RewardCount==null || _ufle12jhs77_RewardCount.IsDeleted) _ufle12jhs77_RewardCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5647614378556127850,12424824126235993218));
			return _ufle12jhs77_RewardCount;
		}
	}
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_WithAchievementType;
	public static BansheeGz.BGDatabase.BGKey _WithAchievementType
	{
		get
		{
			if(_edeht3sdad33_WithAchievementType==null || _edeht3sdad33_WithAchievementType.IsDeleted) _edeht3sdad33_WithAchievementType= MetaDefault.GetKey(new BGId(5266385704596959266,12708790514198179226));
			return _edeht3sdad33_WithAchievementType;
		}
	}
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_WithAchievementKind;
	public static BansheeGz.BGDatabase.BGKey _WithAchievementKind
	{
		get
		{
			if(_edeht3sdad33_WithAchievementKind==null || _edeht3sdad33_WithAchievementKind.IsDeleted) _edeht3sdad33_WithAchievementKind= MetaDefault.GetKey(new BGId(5533217581247026311,5037882815249944455));
			return _edeht3sdad33_WithAchievementKind;
		}
	}
	private static readonly TBL_PLAYER.Factory _factory0_PFS = new TBL_PLAYER.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_UPGRADE_GOLD.Factory _factory3_PFS = new TBL_UPGRADE_GOLD.Factory();
	private static readonly TBL_QUEST.Factory _factory4_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory5_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory6_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory7_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory8_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON_SMITH.Factory _factory9_PFS = new TBL_DUNGEON_SMITH.Factory();
	private static readonly TBL_SHOP.Factory _factory10_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory11_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON_TREASURE.Factory _factory12_PFS = new TBL_DUNGEON_TREASURE.Factory();
	private static readonly TBL_DUNGEON_BOSS.Factory _factory13_PFS = new TBL_DUNGEON_BOSS.Factory();
	private static readonly TBL_PACKAGE.Factory _factory14_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_GACHA_EQUIPMENT.Factory _factory15_PFS = new TBL_GACHA_EQUIPMENT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory16_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory17_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_UPGRADE_STAT.Factory _factory18_PFS = new TBL_UPGRADE_STAT.Factory();
	private static readonly TBL_STAGE.Factory _factory19_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_EQUIPMENT.Factory _factory20_PFS = new TBL_EQUIPMENT.Factory();
	private static readonly TBL_PROMOTION.Factory _factory21_PFS = new TBL_PROMOTION.Factory();
	private static readonly TBL_ADVENTURE_STORY.Factory _factory22_PFS = new TBL_ADVENTURE_STORY.Factory();
	private static readonly TBL_ADVENTURE_DUNGEON.Factory _factory23_PFS = new TBL_ADVENTURE_DUNGEON.Factory();
	private static readonly TBL_UPGRADE_DICE.Factory _factory24_PFS = new TBL_UPGRADE_DICE.Factory();
	private static readonly TBL_GACHA_DICE.Factory _factory25_PFS = new TBL_GACHA_DICE.Factory();
	private static readonly TBL_FOLLOWER.Factory _factory26_PFS = new TBL_FOLLOWER.Factory();
	private TBL_ACHIEVEMENT() : base(MetaDefault)
	{
	}
	private TBL_ACHIEVEMENT(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_ACHIEVEMENT(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_ACHIEVEMENT(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_ACHIEVEMENT FindEntity(Predicate<TBL_ACHIEVEMENT> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_ACHIEVEMENT) entity)) as TBL_ACHIEVEMENT;
	}
	public static List<TBL_ACHIEVEMENT> FindEntities(Predicate<TBL_ACHIEVEMENT> filter, List<TBL_ACHIEVEMENT> result=null, Comparison<TBL_ACHIEVEMENT> sort=null)
	{
		result = result ?? new List<TBL_ACHIEVEMENT>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_ACHIEVEMENT) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_ACHIEVEMENT) e1, (TBL_ACHIEVEMENT) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_ACHIEVEMENT) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_ACHIEVEMENT> action, Predicate<TBL_ACHIEVEMENT> filter=null, Comparison<TBL_ACHIEVEMENT> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_ACHIEVEMENT) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_ACHIEVEMENT) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_ACHIEVEMENT)e1,(TBL_ACHIEVEMENT)e2));
	}
	public static TBL_ACHIEVEMENT GetEntity(BGId entityId)
	{
		return (TBL_ACHIEVEMENT) MetaDefault.GetEntity(entityId);
	}
	public static TBL_ACHIEVEMENT GetEntity(int index)
	{
		return (TBL_ACHIEVEMENT) MetaDefault[index];
	}
	public static TBL_ACHIEVEMENT GetEntity(string entityName)
	{
		return (TBL_ACHIEVEMENT) MetaDefault.GetEntity(entityName);
	}
	public static TBL_ACHIEVEMENT NewEntity()
	{
		return (TBL_ACHIEVEMENT) MetaDefault.NewEntity();
	}
	public static TBL_ACHIEVEMENT GetEntityByKeyWithAchievementType(AchievementType AchievementType)
	{
		return (TBL_ACHIEVEMENT) _WithAchievementType.GetEntityByKey(AchievementType);
	}
	public static List<TBL_ACHIEVEMENT> GetEntitiesByKeyWithAchievementType(AchievementType AchievementType)
	{
		var result = _WithAchievementType.GetEntitiesByKey(AchievementType);
		if(result==null || result.Count==0) return null;
		var list = new List<TBL_ACHIEVEMENT>(result.Count);
		for(var i = 0 ; i < result.Count ; i++) list.Add((TBL_ACHIEVEMENT) result[i]);
		return list;
	}
	public static TBL_ACHIEVEMENT GetEntityByKeyWithAchievementKind(AchievementKind AchievementKind)
	{
		return (TBL_ACHIEVEMENT) _WithAchievementKind.GetEntityByKey(AchievementKind);
	}
	public static List<TBL_ACHIEVEMENT> GetEntitiesByKeyWithAchievementKind(AchievementKind AchievementKind)
	{
		var result = _WithAchievementKind.GetEntitiesByKey(AchievementKind);
		if(result==null || result.Count==0) return null;
		var list = new List<TBL_ACHIEVEMENT>(result.Count);
		for(var i = 0 ; i < result.Count ; i++) list.Add((TBL_ACHIEVEMENT) result[i]);
		return list;
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_PLAYER_LEVEL : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_PLAYER_LEVEL(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_PLAYER_LEVEL(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5711595766574668661,10580375940355850162));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Int32 NextLevelExperience
	{
		get
		{
			return _NextLevelExperience[Index];
		}
		set
		{
			_NextLevelExperience[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5034399491879620143,5369051100259268511));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_NextLevelExperience;
	public static BansheeGz.BGDatabase.BGFieldInt _NextLevelExperience
	{
		get
		{
			if(_ufle12jhs77_NextLevelExperience==null || _ufle12jhs77_NextLevelExperience.IsDeleted) _ufle12jhs77_NextLevelExperience=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4874231127070153800,15760061189898679442));
			return _ufle12jhs77_NextLevelExperience;
		}
	}
	private static readonly TBL_PLAYER.Factory _factory0_PFS = new TBL_PLAYER.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_UPGRADE_GOLD.Factory _factory3_PFS = new TBL_UPGRADE_GOLD.Factory();
	private static readonly TBL_QUEST.Factory _factory4_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory5_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory6_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory7_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory8_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON_SMITH.Factory _factory9_PFS = new TBL_DUNGEON_SMITH.Factory();
	private static readonly TBL_SHOP.Factory _factory10_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory11_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON_TREASURE.Factory _factory12_PFS = new TBL_DUNGEON_TREASURE.Factory();
	private static readonly TBL_DUNGEON_BOSS.Factory _factory13_PFS = new TBL_DUNGEON_BOSS.Factory();
	private static readonly TBL_PACKAGE.Factory _factory14_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_GACHA_EQUIPMENT.Factory _factory15_PFS = new TBL_GACHA_EQUIPMENT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory16_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory17_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_UPGRADE_STAT.Factory _factory18_PFS = new TBL_UPGRADE_STAT.Factory();
	private static readonly TBL_STAGE.Factory _factory19_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_EQUIPMENT.Factory _factory20_PFS = new TBL_EQUIPMENT.Factory();
	private static readonly TBL_PROMOTION.Factory _factory21_PFS = new TBL_PROMOTION.Factory();
	private static readonly TBL_ADVENTURE_STORY.Factory _factory22_PFS = new TBL_ADVENTURE_STORY.Factory();
	private static readonly TBL_ADVENTURE_DUNGEON.Factory _factory23_PFS = new TBL_ADVENTURE_DUNGEON.Factory();
	private static readonly TBL_UPGRADE_DICE.Factory _factory24_PFS = new TBL_UPGRADE_DICE.Factory();
	private static readonly TBL_GACHA_DICE.Factory _factory25_PFS = new TBL_GACHA_DICE.Factory();
	private static readonly TBL_FOLLOWER.Factory _factory26_PFS = new TBL_FOLLOWER.Factory();
	private TBL_PLAYER_LEVEL() : base(MetaDefault)
	{
	}
	private TBL_PLAYER_LEVEL(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_PLAYER_LEVEL(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_PLAYER_LEVEL(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_PLAYER_LEVEL FindEntity(Predicate<TBL_PLAYER_LEVEL> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_PLAYER_LEVEL) entity)) as TBL_PLAYER_LEVEL;
	}
	public static List<TBL_PLAYER_LEVEL> FindEntities(Predicate<TBL_PLAYER_LEVEL> filter, List<TBL_PLAYER_LEVEL> result=null, Comparison<TBL_PLAYER_LEVEL> sort=null)
	{
		result = result ?? new List<TBL_PLAYER_LEVEL>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_PLAYER_LEVEL) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_PLAYER_LEVEL) e1, (TBL_PLAYER_LEVEL) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_PLAYER_LEVEL) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_PLAYER_LEVEL> action, Predicate<TBL_PLAYER_LEVEL> filter=null, Comparison<TBL_PLAYER_LEVEL> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_PLAYER_LEVEL) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_PLAYER_LEVEL) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_PLAYER_LEVEL)e1,(TBL_PLAYER_LEVEL)e2));
	}
	public static TBL_PLAYER_LEVEL GetEntity(BGId entityId)
	{
		return (TBL_PLAYER_LEVEL) MetaDefault.GetEntity(entityId);
	}
	public static TBL_PLAYER_LEVEL GetEntity(int index)
	{
		return (TBL_PLAYER_LEVEL) MetaDefault[index];
	}
	public static TBL_PLAYER_LEVEL GetEntity(string entityName)
	{
		return (TBL_PLAYER_LEVEL) MetaDefault.GetEntity(entityName);
	}
	public static TBL_PLAYER_LEVEL NewEntity()
	{
		return (TBL_PLAYER_LEVEL) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_GACHA_SKILL : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_GACHA_SKILL(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_GACHA_SKILL(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5673564986734287595,12614868378497427860));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Int32 RequireCount
	{
		get
		{
			return _RequireCount[Index];
		}
		set
		{
			_RequireCount[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Single> Percents
	{
		get
		{
			return _Percents[Index];
		}
		set
		{
			_Percents[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4966823784821469143,14501400591860155320));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RequireCount;
	public static BansheeGz.BGDatabase.BGFieldInt _RequireCount
	{
		get
		{
			if(_ufle12jhs77_RequireCount==null || _ufle12jhs77_RequireCount.IsDeleted) _ufle12jhs77_RequireCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5337216806674160557,7903332434961767814));
			return _ufle12jhs77_RequireCount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListFloat _ufle12jhs77_Percents;
	public static BansheeGz.BGDatabase.BGFieldListFloat _Percents
	{
		get
		{
			if(_ufle12jhs77_Percents==null || _ufle12jhs77_Percents.IsDeleted) _ufle12jhs77_Percents=(BansheeGz.BGDatabase.BGFieldListFloat) MetaDefault.GetField(new BGId(4740424394979344077,15668941769102263225));
			return _ufle12jhs77_Percents;
		}
	}
	private static readonly TBL_PLAYER.Factory _factory0_PFS = new TBL_PLAYER.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_UPGRADE_GOLD.Factory _factory3_PFS = new TBL_UPGRADE_GOLD.Factory();
	private static readonly TBL_QUEST.Factory _factory4_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory5_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory6_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory7_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory8_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON_SMITH.Factory _factory9_PFS = new TBL_DUNGEON_SMITH.Factory();
	private static readonly TBL_SHOP.Factory _factory10_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory11_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON_TREASURE.Factory _factory12_PFS = new TBL_DUNGEON_TREASURE.Factory();
	private static readonly TBL_DUNGEON_BOSS.Factory _factory13_PFS = new TBL_DUNGEON_BOSS.Factory();
	private static readonly TBL_PACKAGE.Factory _factory14_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_GACHA_EQUIPMENT.Factory _factory15_PFS = new TBL_GACHA_EQUIPMENT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory16_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory17_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_UPGRADE_STAT.Factory _factory18_PFS = new TBL_UPGRADE_STAT.Factory();
	private static readonly TBL_STAGE.Factory _factory19_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_EQUIPMENT.Factory _factory20_PFS = new TBL_EQUIPMENT.Factory();
	private static readonly TBL_PROMOTION.Factory _factory21_PFS = new TBL_PROMOTION.Factory();
	private static readonly TBL_ADVENTURE_STORY.Factory _factory22_PFS = new TBL_ADVENTURE_STORY.Factory();
	private static readonly TBL_ADVENTURE_DUNGEON.Factory _factory23_PFS = new TBL_ADVENTURE_DUNGEON.Factory();
	private static readonly TBL_UPGRADE_DICE.Factory _factory24_PFS = new TBL_UPGRADE_DICE.Factory();
	private static readonly TBL_GACHA_DICE.Factory _factory25_PFS = new TBL_GACHA_DICE.Factory();
	private static readonly TBL_FOLLOWER.Factory _factory26_PFS = new TBL_FOLLOWER.Factory();
	private TBL_GACHA_SKILL() : base(MetaDefault)
	{
	}
	private TBL_GACHA_SKILL(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_GACHA_SKILL(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_GACHA_SKILL(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_GACHA_SKILL FindEntity(Predicate<TBL_GACHA_SKILL> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_GACHA_SKILL) entity)) as TBL_GACHA_SKILL;
	}
	public static List<TBL_GACHA_SKILL> FindEntities(Predicate<TBL_GACHA_SKILL> filter, List<TBL_GACHA_SKILL> result=null, Comparison<TBL_GACHA_SKILL> sort=null)
	{
		result = result ?? new List<TBL_GACHA_SKILL>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_GACHA_SKILL) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_GACHA_SKILL) e1, (TBL_GACHA_SKILL) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_GACHA_SKILL) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_GACHA_SKILL> action, Predicate<TBL_GACHA_SKILL> filter=null, Comparison<TBL_GACHA_SKILL> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_GACHA_SKILL) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_GACHA_SKILL) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_GACHA_SKILL)e1,(TBL_GACHA_SKILL)e2));
	}
	public static TBL_GACHA_SKILL GetEntity(BGId entityId)
	{
		return (TBL_GACHA_SKILL) MetaDefault.GetEntity(entityId);
	}
	public static TBL_GACHA_SKILL GetEntity(int index)
	{
		return (TBL_GACHA_SKILL) MetaDefault[index];
	}
	public static TBL_GACHA_SKILL GetEntity(string entityName)
	{
		return (TBL_GACHA_SKILL) MetaDefault.GetEntity(entityName);
	}
	public static TBL_GACHA_SKILL NewEntity()
	{
		return (TBL_GACHA_SKILL) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class SYSTEM_VALUE : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new SYSTEM_VALUE(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new SYSTEM_VALUE(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5297420937762523849,7693237527399371171));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Single Value
	{
		get
		{
			return _Value[Index];
		}
		set
		{
			_Value[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4652473282154805339,13568585937771526296));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Value;
	public static BansheeGz.BGDatabase.BGFieldFloat _Value
	{
		get
		{
			if(_ufle12jhs77_Value==null || _ufle12jhs77_Value.IsDeleted) _ufle12jhs77_Value=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5339808213594297786,18119556056744813994));
			return _ufle12jhs77_Value;
		}
	}
	private static readonly TBL_PLAYER.Factory _factory0_PFS = new TBL_PLAYER.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_UPGRADE_GOLD.Factory _factory3_PFS = new TBL_UPGRADE_GOLD.Factory();
	private static readonly TBL_QUEST.Factory _factory4_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory5_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory6_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory7_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory8_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON_SMITH.Factory _factory9_PFS = new TBL_DUNGEON_SMITH.Factory();
	private static readonly TBL_SHOP.Factory _factory10_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory11_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON_TREASURE.Factory _factory12_PFS = new TBL_DUNGEON_TREASURE.Factory();
	private static readonly TBL_DUNGEON_BOSS.Factory _factory13_PFS = new TBL_DUNGEON_BOSS.Factory();
	private static readonly TBL_PACKAGE.Factory _factory14_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_GACHA_EQUIPMENT.Factory _factory15_PFS = new TBL_GACHA_EQUIPMENT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory16_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory17_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_UPGRADE_STAT.Factory _factory18_PFS = new TBL_UPGRADE_STAT.Factory();
	private static readonly TBL_STAGE.Factory _factory19_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_EQUIPMENT.Factory _factory20_PFS = new TBL_EQUIPMENT.Factory();
	private static readonly TBL_PROMOTION.Factory _factory21_PFS = new TBL_PROMOTION.Factory();
	private static readonly TBL_ADVENTURE_STORY.Factory _factory22_PFS = new TBL_ADVENTURE_STORY.Factory();
	private static readonly TBL_ADVENTURE_DUNGEON.Factory _factory23_PFS = new TBL_ADVENTURE_DUNGEON.Factory();
	private static readonly TBL_UPGRADE_DICE.Factory _factory24_PFS = new TBL_UPGRADE_DICE.Factory();
	private static readonly TBL_GACHA_DICE.Factory _factory25_PFS = new TBL_GACHA_DICE.Factory();
	private static readonly TBL_FOLLOWER.Factory _factory26_PFS = new TBL_FOLLOWER.Factory();
	private SYSTEM_VALUE() : base(MetaDefault)
	{
	}
	private SYSTEM_VALUE(BGId id) : base(MetaDefault, id)
	{
	}
	private SYSTEM_VALUE(BGMetaEntity meta) : base(meta)
	{
	}
	private SYSTEM_VALUE(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static SYSTEM_VALUE FindEntity(Predicate<SYSTEM_VALUE> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((SYSTEM_VALUE) entity)) as SYSTEM_VALUE;
	}
	public static List<SYSTEM_VALUE> FindEntities(Predicate<SYSTEM_VALUE> filter, List<SYSTEM_VALUE> result=null, Comparison<SYSTEM_VALUE> sort=null)
	{
		result = result ?? new List<SYSTEM_VALUE>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((SYSTEM_VALUE) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((SYSTEM_VALUE) e1, (SYSTEM_VALUE) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((SYSTEM_VALUE) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<SYSTEM_VALUE> action, Predicate<SYSTEM_VALUE> filter=null, Comparison<SYSTEM_VALUE> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((SYSTEM_VALUE) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((SYSTEM_VALUE) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((SYSTEM_VALUE)e1,(SYSTEM_VALUE)e2));
	}
	public static SYSTEM_VALUE GetEntity(BGId entityId)
	{
		return (SYSTEM_VALUE) MetaDefault.GetEntity(entityId);
	}
	public static SYSTEM_VALUE GetEntity(int index)
	{
		return (SYSTEM_VALUE) MetaDefault[index];
	}
	public static SYSTEM_VALUE GetEntity(string entityName)
	{
		return (SYSTEM_VALUE) MetaDefault.GetEntity(entityName);
	}
	public static SYSTEM_VALUE NewEntity()
	{
		return (SYSTEM_VALUE) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_DUNGEON_SMITH : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_DUNGEON_SMITH(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_DUNGEON_SMITH(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5337089662072089933,11370460493514870953));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Double DamageFactor
	{
		get
		{
			return _DamageFactor[Index];
		}
		set
		{
			_DamageFactor[Index] = value;
		}
	}
	public System.Double HealthFactor
	{
		get
		{
			return _HealthFactor[Index];
		}
		set
		{
			_HealthFactor[Index] = value;
		}
	}
	public System.Int32 WaveCount
	{
		get
		{
			return _WaveCount[Index];
		}
		set
		{
			_WaveCount[Index] = value;
		}
	}
	public System.Int32 WaveMonsterCount
	{
		get
		{
			return _WaveMonsterCount[Index];
		}
		set
		{
			_WaveMonsterCount[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Int32> SpawnMonsterList
	{
		get
		{
			return _SpawnMonsterList[Index];
		}
		set
		{
			_SpawnMonsterList[Index] = value;
		}
	}
	public RewardType RewardType1
	{
		get
		{
			return (RewardType) _RewardType1[Index];
		}
		set
		{
			_RewardType1[Index] = value;
		}
	}
	public System.Int32 RewardValue1
	{
		get
		{
			return _RewardValue1[Index];
		}
		set
		{
			_RewardValue1[Index] = value;
		}
	}
	public System.Int32 RewardCount1
	{
		get
		{
			return _RewardCount1[Index];
		}
		set
		{
			_RewardCount1[Index] = value;
		}
	}
	public RewardType RewardType2
	{
		get
		{
			return (RewardType) _RewardType2[Index];
		}
		set
		{
			_RewardType2[Index] = value;
		}
	}
	public System.Int32 RewardValue2
	{
		get
		{
			return _RewardValue2[Index];
		}
		set
		{
			_RewardValue2[Index] = value;
		}
	}
	public System.Int32 RewardCount2
	{
		get
		{
			return _RewardCount2[Index];
		}
		set
		{
			_RewardCount2[Index] = value;
		}
	}
	public RewardType RewardType3
	{
		get
		{
			return (RewardType) _RewardType3[Index];
		}
		set
		{
			_RewardType3[Index] = value;
		}
	}
	public System.Int32 RewardValue3
	{
		get
		{
			return _RewardValue3[Index];
		}
		set
		{
			_RewardValue3[Index] = value;
		}
	}
	public System.Int32 RewardCount3
	{
		get
		{
			return _RewardCount3[Index];
		}
		set
		{
			_RewardCount3[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5721221940879028537,10702027952630598826));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_DamageFactor;
	public static BansheeGz.BGDatabase.BGFieldDouble _DamageFactor
	{
		get
		{
			if(_ufle12jhs77_DamageFactor==null || _ufle12jhs77_DamageFactor.IsDeleted) _ufle12jhs77_DamageFactor=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5520716901797263698,7335696348459596196));
			return _ufle12jhs77_DamageFactor;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_HealthFactor;
	public static BansheeGz.BGDatabase.BGFieldDouble _HealthFactor
	{
		get
		{
			if(_ufle12jhs77_HealthFactor==null || _ufle12jhs77_HealthFactor.IsDeleted) _ufle12jhs77_HealthFactor=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5490233892788364966,10778048376551878298));
			return _ufle12jhs77_HealthFactor;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_WaveCount;
	public static BansheeGz.BGDatabase.BGFieldInt _WaveCount
	{
		get
		{
			if(_ufle12jhs77_WaveCount==null || _ufle12jhs77_WaveCount.IsDeleted) _ufle12jhs77_WaveCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4814569014434136832,14983216085539622036));
			return _ufle12jhs77_WaveCount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_WaveMonsterCount;
	public static BansheeGz.BGDatabase.BGFieldInt _WaveMonsterCount
	{
		get
		{
			if(_ufle12jhs77_WaveMonsterCount==null || _ufle12jhs77_WaveMonsterCount.IsDeleted) _ufle12jhs77_WaveMonsterCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5409023324193887559,9146759237815853209));
			return _ufle12jhs77_WaveMonsterCount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListInt _ufle12jhs77_SpawnMonsterList;
	public static BansheeGz.BGDatabase.BGFieldListInt _SpawnMonsterList
	{
		get
		{
			if(_ufle12jhs77_SpawnMonsterList==null || _ufle12jhs77_SpawnMonsterList.IsDeleted) _ufle12jhs77_SpawnMonsterList=(BansheeGz.BGDatabase.BGFieldListInt) MetaDefault.GetField(new BGId(5641927696521657572,2326086774187394458));
			return _ufle12jhs77_SpawnMonsterList;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_RewardType1;
	public static BansheeGz.BGDatabase.BGFieldEnum _RewardType1
	{
		get
		{
			if(_ufle12jhs77_RewardType1==null || _ufle12jhs77_RewardType1.IsDeleted) _ufle12jhs77_RewardType1=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4881246462456801585,583567233064479153));
			return _ufle12jhs77_RewardType1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardValue1;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardValue1
	{
		get
		{
			if(_ufle12jhs77_RewardValue1==null || _ufle12jhs77_RewardValue1.IsDeleted) _ufle12jhs77_RewardValue1=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5654360020189625332,7938425482056000186));
			return _ufle12jhs77_RewardValue1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardCount1;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardCount1
	{
		get
		{
			if(_ufle12jhs77_RewardCount1==null || _ufle12jhs77_RewardCount1.IsDeleted) _ufle12jhs77_RewardCount1=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5302646650517658393,12886959592162150035));
			return _ufle12jhs77_RewardCount1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_RewardType2;
	public static BansheeGz.BGDatabase.BGFieldEnum _RewardType2
	{
		get
		{
			if(_ufle12jhs77_RewardType2==null || _ufle12jhs77_RewardType2.IsDeleted) _ufle12jhs77_RewardType2=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4990925159826686484,7007344521368193420));
			return _ufle12jhs77_RewardType2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardValue2;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardValue2
	{
		get
		{
			if(_ufle12jhs77_RewardValue2==null || _ufle12jhs77_RewardValue2.IsDeleted) _ufle12jhs77_RewardValue2=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5761031958498060688,8795651300765017525));
			return _ufle12jhs77_RewardValue2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardCount2;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardCount2
	{
		get
		{
			if(_ufle12jhs77_RewardCount2==null || _ufle12jhs77_RewardCount2.IsDeleted) _ufle12jhs77_RewardCount2=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4980964314662225057,5914093812312404402));
			return _ufle12jhs77_RewardCount2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_RewardType3;
	public static BansheeGz.BGDatabase.BGFieldEnum _RewardType3
	{
		get
		{
			if(_ufle12jhs77_RewardType3==null || _ufle12jhs77_RewardType3.IsDeleted) _ufle12jhs77_RewardType3=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5029948474078744911,763345216210468287));
			return _ufle12jhs77_RewardType3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardValue3;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardValue3
	{
		get
		{
			if(_ufle12jhs77_RewardValue3==null || _ufle12jhs77_RewardValue3.IsDeleted) _ufle12jhs77_RewardValue3=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4817955213349701887,10786307860230072215));
			return _ufle12jhs77_RewardValue3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardCount3;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardCount3
	{
		get
		{
			if(_ufle12jhs77_RewardCount3==null || _ufle12jhs77_RewardCount3.IsDeleted) _ufle12jhs77_RewardCount3=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5523503387366752600,9674165624526946690));
			return _ufle12jhs77_RewardCount3;
		}
	}
	private static readonly TBL_PLAYER.Factory _factory0_PFS = new TBL_PLAYER.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_UPGRADE_GOLD.Factory _factory3_PFS = new TBL_UPGRADE_GOLD.Factory();
	private static readonly TBL_QUEST.Factory _factory4_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory5_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory6_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory7_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory8_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON_SMITH.Factory _factory9_PFS = new TBL_DUNGEON_SMITH.Factory();
	private static readonly TBL_SHOP.Factory _factory10_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory11_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON_TREASURE.Factory _factory12_PFS = new TBL_DUNGEON_TREASURE.Factory();
	private static readonly TBL_DUNGEON_BOSS.Factory _factory13_PFS = new TBL_DUNGEON_BOSS.Factory();
	private static readonly TBL_PACKAGE.Factory _factory14_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_GACHA_EQUIPMENT.Factory _factory15_PFS = new TBL_GACHA_EQUIPMENT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory16_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory17_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_UPGRADE_STAT.Factory _factory18_PFS = new TBL_UPGRADE_STAT.Factory();
	private static readonly TBL_STAGE.Factory _factory19_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_EQUIPMENT.Factory _factory20_PFS = new TBL_EQUIPMENT.Factory();
	private static readonly TBL_PROMOTION.Factory _factory21_PFS = new TBL_PROMOTION.Factory();
	private static readonly TBL_ADVENTURE_STORY.Factory _factory22_PFS = new TBL_ADVENTURE_STORY.Factory();
	private static readonly TBL_ADVENTURE_DUNGEON.Factory _factory23_PFS = new TBL_ADVENTURE_DUNGEON.Factory();
	private static readonly TBL_UPGRADE_DICE.Factory _factory24_PFS = new TBL_UPGRADE_DICE.Factory();
	private static readonly TBL_GACHA_DICE.Factory _factory25_PFS = new TBL_GACHA_DICE.Factory();
	private static readonly TBL_FOLLOWER.Factory _factory26_PFS = new TBL_FOLLOWER.Factory();
	private TBL_DUNGEON_SMITH() : base(MetaDefault)
	{
	}
	private TBL_DUNGEON_SMITH(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_DUNGEON_SMITH(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_DUNGEON_SMITH(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_DUNGEON_SMITH FindEntity(Predicate<TBL_DUNGEON_SMITH> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_DUNGEON_SMITH) entity)) as TBL_DUNGEON_SMITH;
	}
	public static List<TBL_DUNGEON_SMITH> FindEntities(Predicate<TBL_DUNGEON_SMITH> filter, List<TBL_DUNGEON_SMITH> result=null, Comparison<TBL_DUNGEON_SMITH> sort=null)
	{
		result = result ?? new List<TBL_DUNGEON_SMITH>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_DUNGEON_SMITH) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_DUNGEON_SMITH) e1, (TBL_DUNGEON_SMITH) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_DUNGEON_SMITH) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_DUNGEON_SMITH> action, Predicate<TBL_DUNGEON_SMITH> filter=null, Comparison<TBL_DUNGEON_SMITH> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_DUNGEON_SMITH) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_DUNGEON_SMITH) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_DUNGEON_SMITH)e1,(TBL_DUNGEON_SMITH)e2));
	}
	public static TBL_DUNGEON_SMITH GetEntity(BGId entityId)
	{
		return (TBL_DUNGEON_SMITH) MetaDefault.GetEntity(entityId);
	}
	public static TBL_DUNGEON_SMITH GetEntity(int index)
	{
		return (TBL_DUNGEON_SMITH) MetaDefault[index];
	}
	public static TBL_DUNGEON_SMITH GetEntity(string entityName)
	{
		return (TBL_DUNGEON_SMITH) MetaDefault.GetEntity(entityName);
	}
	public static TBL_DUNGEON_SMITH NewEntity()
	{
		return (TBL_DUNGEON_SMITH) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_SHOP : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_SHOP(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_SHOP(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4684566333432306408,17965562135453926333));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public CurrencyType CurrencyType
	{
		get
		{
			return (CurrencyType) _CurrencyType[Index];
		}
		set
		{
			_CurrencyType[Index] = value;
		}
	}
	public System.Int32 Amount
	{
		get
		{
			return _Amount[Index];
		}
		set
		{
			_Amount[Index] = value;
		}
	}
	public System.Int32 Price
	{
		get
		{
			return _Price[Index];
		}
		set
		{
			_Price[Index] = value;
		}
	}
	public System.String IAP_ID
	{
		get
		{
			return _IAP_ID[Index];
		}
		set
		{
			_IAP_ID[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5015146778314310492,211189690921910954));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_CurrencyType;
	public static BansheeGz.BGDatabase.BGFieldEnum _CurrencyType
	{
		get
		{
			if(_ufle12jhs77_CurrencyType==null || _ufle12jhs77_CurrencyType.IsDeleted) _ufle12jhs77_CurrencyType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5282283725271368017,2766853676399747235));
			return _ufle12jhs77_CurrencyType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Amount;
	public static BansheeGz.BGDatabase.BGFieldInt _Amount
	{
		get
		{
			if(_ufle12jhs77_Amount==null || _ufle12jhs77_Amount.IsDeleted) _ufle12jhs77_Amount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5019581186300672159,17487394158043670460));
			return _ufle12jhs77_Amount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Price;
	public static BansheeGz.BGDatabase.BGFieldInt _Price
	{
		get
		{
			if(_ufle12jhs77_Price==null || _ufle12jhs77_Price.IsDeleted) _ufle12jhs77_Price=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4979236088614028172,2467190012989365934));
			return _ufle12jhs77_Price;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_IAP_ID;
	public static BansheeGz.BGDatabase.BGFieldString _IAP_ID
	{
		get
		{
			if(_ufle12jhs77_IAP_ID==null || _ufle12jhs77_IAP_ID.IsDeleted) _ufle12jhs77_IAP_ID=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5097602893912460859,12575174155250094256));
			return _ufle12jhs77_IAP_ID;
		}
	}
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_WithCurrencyType;
	public static BansheeGz.BGDatabase.BGKey _WithCurrencyType
	{
		get
		{
			if(_edeht3sdad33_WithCurrencyType==null || _edeht3sdad33_WithCurrencyType.IsDeleted) _edeht3sdad33_WithCurrencyType= MetaDefault.GetKey(new BGId(5699747233837814628,5654606245915552687));
			return _edeht3sdad33_WithCurrencyType;
		}
	}
	private static readonly TBL_PLAYER.Factory _factory0_PFS = new TBL_PLAYER.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_UPGRADE_GOLD.Factory _factory3_PFS = new TBL_UPGRADE_GOLD.Factory();
	private static readonly TBL_QUEST.Factory _factory4_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory5_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory6_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory7_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory8_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON_SMITH.Factory _factory9_PFS = new TBL_DUNGEON_SMITH.Factory();
	private static readonly TBL_SHOP.Factory _factory10_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory11_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON_TREASURE.Factory _factory12_PFS = new TBL_DUNGEON_TREASURE.Factory();
	private static readonly TBL_DUNGEON_BOSS.Factory _factory13_PFS = new TBL_DUNGEON_BOSS.Factory();
	private static readonly TBL_PACKAGE.Factory _factory14_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_GACHA_EQUIPMENT.Factory _factory15_PFS = new TBL_GACHA_EQUIPMENT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory16_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory17_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_UPGRADE_STAT.Factory _factory18_PFS = new TBL_UPGRADE_STAT.Factory();
	private static readonly TBL_STAGE.Factory _factory19_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_EQUIPMENT.Factory _factory20_PFS = new TBL_EQUIPMENT.Factory();
	private static readonly TBL_PROMOTION.Factory _factory21_PFS = new TBL_PROMOTION.Factory();
	private static readonly TBL_ADVENTURE_STORY.Factory _factory22_PFS = new TBL_ADVENTURE_STORY.Factory();
	private static readonly TBL_ADVENTURE_DUNGEON.Factory _factory23_PFS = new TBL_ADVENTURE_DUNGEON.Factory();
	private static readonly TBL_UPGRADE_DICE.Factory _factory24_PFS = new TBL_UPGRADE_DICE.Factory();
	private static readonly TBL_GACHA_DICE.Factory _factory25_PFS = new TBL_GACHA_DICE.Factory();
	private static readonly TBL_FOLLOWER.Factory _factory26_PFS = new TBL_FOLLOWER.Factory();
	private TBL_SHOP() : base(MetaDefault)
	{
	}
	private TBL_SHOP(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_SHOP(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_SHOP(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_SHOP FindEntity(Predicate<TBL_SHOP> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_SHOP) entity)) as TBL_SHOP;
	}
	public static List<TBL_SHOP> FindEntities(Predicate<TBL_SHOP> filter, List<TBL_SHOP> result=null, Comparison<TBL_SHOP> sort=null)
	{
		result = result ?? new List<TBL_SHOP>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_SHOP) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_SHOP) e1, (TBL_SHOP) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_SHOP) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_SHOP> action, Predicate<TBL_SHOP> filter=null, Comparison<TBL_SHOP> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_SHOP) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_SHOP) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_SHOP)e1,(TBL_SHOP)e2));
	}
	public static TBL_SHOP GetEntity(BGId entityId)
	{
		return (TBL_SHOP) MetaDefault.GetEntity(entityId);
	}
	public static TBL_SHOP GetEntity(int index)
	{
		return (TBL_SHOP) MetaDefault[index];
	}
	public static TBL_SHOP GetEntity(string entityName)
	{
		return (TBL_SHOP) MetaDefault.GetEntity(entityName);
	}
	public static TBL_SHOP NewEntity()
	{
		return (TBL_SHOP) MetaDefault.NewEntity();
	}
	public static TBL_SHOP GetEntityByKeyWithCurrencyType(CurrencyType CurrencyType)
	{
		return (TBL_SHOP) _WithCurrencyType.GetEntityByKey(CurrencyType);
	}
	public static List<TBL_SHOP> GetEntitiesByKeyWithCurrencyType(CurrencyType CurrencyType)
	{
		var result = _WithCurrencyType.GetEntitiesByKey(CurrencyType);
		if(result==null || result.Count==0) return null;
		var list = new List<TBL_SHOP>(result.Count);
		for(var i = 0 ; i < result.Count ; i++) list.Add((TBL_SHOP) result[i]);
		return list;
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_WORLD : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_WORLD(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_WORLD(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5318403813844293662,9715462610633701509));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public BackgroundType BackgroundType
	{
		get
		{
			return (BackgroundType) _BackgroundType[Index];
		}
		set
		{
			_BackgroundType[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5408824298978608478,258439185428404639));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_BackgroundType;
	public static BansheeGz.BGDatabase.BGFieldEnum _BackgroundType
	{
		get
		{
			if(_ufle12jhs77_BackgroundType==null || _ufle12jhs77_BackgroundType.IsDeleted) _ufle12jhs77_BackgroundType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5152750577939461494,8416970056988216748));
			return _ufle12jhs77_BackgroundType;
		}
	}
	private static readonly List<BGEntity> _tugjbyuhfv_reusableList = new List<BGEntity>();
	public List<TBL_STAGE> RelatedTBL_STAGEListUsingWorldRelation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_STAGE._World.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_STAGE>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_STAGE) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	private static readonly TBL_PLAYER.Factory _factory0_PFS = new TBL_PLAYER.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_UPGRADE_GOLD.Factory _factory3_PFS = new TBL_UPGRADE_GOLD.Factory();
	private static readonly TBL_QUEST.Factory _factory4_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory5_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory6_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory7_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory8_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON_SMITH.Factory _factory9_PFS = new TBL_DUNGEON_SMITH.Factory();
	private static readonly TBL_SHOP.Factory _factory10_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory11_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON_TREASURE.Factory _factory12_PFS = new TBL_DUNGEON_TREASURE.Factory();
	private static readonly TBL_DUNGEON_BOSS.Factory _factory13_PFS = new TBL_DUNGEON_BOSS.Factory();
	private static readonly TBL_PACKAGE.Factory _factory14_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_GACHA_EQUIPMENT.Factory _factory15_PFS = new TBL_GACHA_EQUIPMENT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory16_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory17_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_UPGRADE_STAT.Factory _factory18_PFS = new TBL_UPGRADE_STAT.Factory();
	private static readonly TBL_STAGE.Factory _factory19_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_EQUIPMENT.Factory _factory20_PFS = new TBL_EQUIPMENT.Factory();
	private static readonly TBL_PROMOTION.Factory _factory21_PFS = new TBL_PROMOTION.Factory();
	private static readonly TBL_ADVENTURE_STORY.Factory _factory22_PFS = new TBL_ADVENTURE_STORY.Factory();
	private static readonly TBL_ADVENTURE_DUNGEON.Factory _factory23_PFS = new TBL_ADVENTURE_DUNGEON.Factory();
	private static readonly TBL_UPGRADE_DICE.Factory _factory24_PFS = new TBL_UPGRADE_DICE.Factory();
	private static readonly TBL_GACHA_DICE.Factory _factory25_PFS = new TBL_GACHA_DICE.Factory();
	private static readonly TBL_FOLLOWER.Factory _factory26_PFS = new TBL_FOLLOWER.Factory();
	private TBL_WORLD() : base(MetaDefault)
	{
	}
	private TBL_WORLD(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_WORLD(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_WORLD(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_WORLD FindEntity(Predicate<TBL_WORLD> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_WORLD) entity)) as TBL_WORLD;
	}
	public static List<TBL_WORLD> FindEntities(Predicate<TBL_WORLD> filter, List<TBL_WORLD> result=null, Comparison<TBL_WORLD> sort=null)
	{
		result = result ?? new List<TBL_WORLD>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_WORLD) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_WORLD) e1, (TBL_WORLD) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_WORLD) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_WORLD> action, Predicate<TBL_WORLD> filter=null, Comparison<TBL_WORLD> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_WORLD) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_WORLD) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_WORLD)e1,(TBL_WORLD)e2));
	}
	public static TBL_WORLD GetEntity(BGId entityId)
	{
		return (TBL_WORLD) MetaDefault.GetEntity(entityId);
	}
	public static TBL_WORLD GetEntity(int index)
	{
		return (TBL_WORLD) MetaDefault[index];
	}
	public static TBL_WORLD GetEntity(string entityName)
	{
		return (TBL_WORLD) MetaDefault.GetEntity(entityName);
	}
	public static TBL_WORLD NewEntity()
	{
		return (TBL_WORLD) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_DUNGEON_TREASURE : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_DUNGEON_TREASURE(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_DUNGEON_TREASURE(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5125321768116714014,17816838302281517224));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Double DamageFactor
	{
		get
		{
			return _DamageFactor[Index];
		}
		set
		{
			_DamageFactor[Index] = value;
		}
	}
	public System.Double HealthFactor
	{
		get
		{
			return _HealthFactor[Index];
		}
		set
		{
			_HealthFactor[Index] = value;
		}
	}
	public System.Int32 WaveCount
	{
		get
		{
			return _WaveCount[Index];
		}
		set
		{
			_WaveCount[Index] = value;
		}
	}
	public System.Int32 WaveMonsterCount
	{
		get
		{
			return _WaveMonsterCount[Index];
		}
		set
		{
			_WaveMonsterCount[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Int32> SpawnMonsterList
	{
		get
		{
			return _SpawnMonsterList[Index];
		}
		set
		{
			_SpawnMonsterList[Index] = value;
		}
	}
	public RewardType RewardType1
	{
		get
		{
			return (RewardType) _RewardType1[Index];
		}
		set
		{
			_RewardType1[Index] = value;
		}
	}
	public System.Int32 RewardValue1
	{
		get
		{
			return _RewardValue1[Index];
		}
		set
		{
			_RewardValue1[Index] = value;
		}
	}
	public System.Int32 RewardCount1
	{
		get
		{
			return _RewardCount1[Index];
		}
		set
		{
			_RewardCount1[Index] = value;
		}
	}
	public RewardType RewardType2
	{
		get
		{
			return (RewardType) _RewardType2[Index];
		}
		set
		{
			_RewardType2[Index] = value;
		}
	}
	public System.Int32 RewardValue2
	{
		get
		{
			return _RewardValue2[Index];
		}
		set
		{
			_RewardValue2[Index] = value;
		}
	}
	public System.Int32 RewardCount2
	{
		get
		{
			return _RewardCount2[Index];
		}
		set
		{
			_RewardCount2[Index] = value;
		}
	}
	public RewardType RewardType3
	{
		get
		{
			return (RewardType) _RewardType3[Index];
		}
		set
		{
			_RewardType3[Index] = value;
		}
	}
	public System.Int32 RewardValue3
	{
		get
		{
			return _RewardValue3[Index];
		}
		set
		{
			_RewardValue3[Index] = value;
		}
	}
	public System.Int32 RewardCount3
	{
		get
		{
			return _RewardCount3[Index];
		}
		set
		{
			_RewardCount3[Index] = value;
		}
	}
	public System.Int32 TimeLimit
	{
		get
		{
			return _TimeLimit[Index];
		}
		set
		{
			_TimeLimit[Index] = value;
		}
	}
	public System.Double GoldAmount
	{
		get
		{
			return _GoldAmount[Index];
		}
		set
		{
			_GoldAmount[Index] = value;
		}
	}
	public System.Double ExpAmount
	{
		get
		{
			return _ExpAmount[Index];
		}
		set
		{
			_ExpAmount[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5328719072644954495,6697856924458931127));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_DamageFactor;
	public static BansheeGz.BGDatabase.BGFieldDouble _DamageFactor
	{
		get
		{
			if(_ufle12jhs77_DamageFactor==null || _ufle12jhs77_DamageFactor.IsDeleted) _ufle12jhs77_DamageFactor=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(4782923417737858762,2785165258193596086));
			return _ufle12jhs77_DamageFactor;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_HealthFactor;
	public static BansheeGz.BGDatabase.BGFieldDouble _HealthFactor
	{
		get
		{
			if(_ufle12jhs77_HealthFactor==null || _ufle12jhs77_HealthFactor.IsDeleted) _ufle12jhs77_HealthFactor=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5136407063992421476,2496065042748632484));
			return _ufle12jhs77_HealthFactor;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_WaveCount;
	public static BansheeGz.BGDatabase.BGFieldInt _WaveCount
	{
		get
		{
			if(_ufle12jhs77_WaveCount==null || _ufle12jhs77_WaveCount.IsDeleted) _ufle12jhs77_WaveCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5439422700174761930,10294035160312309430));
			return _ufle12jhs77_WaveCount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_WaveMonsterCount;
	public static BansheeGz.BGDatabase.BGFieldInt _WaveMonsterCount
	{
		get
		{
			if(_ufle12jhs77_WaveMonsterCount==null || _ufle12jhs77_WaveMonsterCount.IsDeleted) _ufle12jhs77_WaveMonsterCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5149401194317625985,9480165741055640474));
			return _ufle12jhs77_WaveMonsterCount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListInt _ufle12jhs77_SpawnMonsterList;
	public static BansheeGz.BGDatabase.BGFieldListInt _SpawnMonsterList
	{
		get
		{
			if(_ufle12jhs77_SpawnMonsterList==null || _ufle12jhs77_SpawnMonsterList.IsDeleted) _ufle12jhs77_SpawnMonsterList=(BansheeGz.BGDatabase.BGFieldListInt) MetaDefault.GetField(new BGId(4932540187692546365,10655979164921129400));
			return _ufle12jhs77_SpawnMonsterList;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_RewardType1;
	public static BansheeGz.BGDatabase.BGFieldEnum _RewardType1
	{
		get
		{
			if(_ufle12jhs77_RewardType1==null || _ufle12jhs77_RewardType1.IsDeleted) _ufle12jhs77_RewardType1=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5114083065806356278,16588361836305368979));
			return _ufle12jhs77_RewardType1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardValue1;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardValue1
	{
		get
		{
			if(_ufle12jhs77_RewardValue1==null || _ufle12jhs77_RewardValue1.IsDeleted) _ufle12jhs77_RewardValue1=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5130197298250498829,6621661635682574216));
			return _ufle12jhs77_RewardValue1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardCount1;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardCount1
	{
		get
		{
			if(_ufle12jhs77_RewardCount1==null || _ufle12jhs77_RewardCount1.IsDeleted) _ufle12jhs77_RewardCount1=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4989758571034891102,7723225735589732756));
			return _ufle12jhs77_RewardCount1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_RewardType2;
	public static BansheeGz.BGDatabase.BGFieldEnum _RewardType2
	{
		get
		{
			if(_ufle12jhs77_RewardType2==null || _ufle12jhs77_RewardType2.IsDeleted) _ufle12jhs77_RewardType2=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5035082688024725442,12347956982776867980));
			return _ufle12jhs77_RewardType2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardValue2;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardValue2
	{
		get
		{
			if(_ufle12jhs77_RewardValue2==null || _ufle12jhs77_RewardValue2.IsDeleted) _ufle12jhs77_RewardValue2=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4721822413701354907,17900173840077698724));
			return _ufle12jhs77_RewardValue2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardCount2;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardCount2
	{
		get
		{
			if(_ufle12jhs77_RewardCount2==null || _ufle12jhs77_RewardCount2.IsDeleted) _ufle12jhs77_RewardCount2=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4956878518461231650,11227827091925718195));
			return _ufle12jhs77_RewardCount2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_RewardType3;
	public static BansheeGz.BGDatabase.BGFieldEnum _RewardType3
	{
		get
		{
			if(_ufle12jhs77_RewardType3==null || _ufle12jhs77_RewardType3.IsDeleted) _ufle12jhs77_RewardType3=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4668707637734245306,1568437518940391812));
			return _ufle12jhs77_RewardType3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardValue3;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardValue3
	{
		get
		{
			if(_ufle12jhs77_RewardValue3==null || _ufle12jhs77_RewardValue3.IsDeleted) _ufle12jhs77_RewardValue3=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5175115112216621467,2977889237919881864));
			return _ufle12jhs77_RewardValue3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardCount3;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardCount3
	{
		get
		{
			if(_ufle12jhs77_RewardCount3==null || _ufle12jhs77_RewardCount3.IsDeleted) _ufle12jhs77_RewardCount3=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5138319355546418507,437790168549954215));
			return _ufle12jhs77_RewardCount3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_TimeLimit;
	public static BansheeGz.BGDatabase.BGFieldInt _TimeLimit
	{
		get
		{
			if(_ufle12jhs77_TimeLimit==null || _ufle12jhs77_TimeLimit.IsDeleted) _ufle12jhs77_TimeLimit=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5241799325609298296,9744513042652544129));
			return _ufle12jhs77_TimeLimit;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_GoldAmount;
	public static BansheeGz.BGDatabase.BGFieldDouble _GoldAmount
	{
		get
		{
			if(_ufle12jhs77_GoldAmount==null || _ufle12jhs77_GoldAmount.IsDeleted) _ufle12jhs77_GoldAmount=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5548323324085006372,702313621255606679));
			return _ufle12jhs77_GoldAmount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_ExpAmount;
	public static BansheeGz.BGDatabase.BGFieldDouble _ExpAmount
	{
		get
		{
			if(_ufle12jhs77_ExpAmount==null || _ufle12jhs77_ExpAmount.IsDeleted) _ufle12jhs77_ExpAmount=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5248113970105791377,1961267476911320962));
			return _ufle12jhs77_ExpAmount;
		}
	}
	private static readonly TBL_PLAYER.Factory _factory0_PFS = new TBL_PLAYER.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_UPGRADE_GOLD.Factory _factory3_PFS = new TBL_UPGRADE_GOLD.Factory();
	private static readonly TBL_QUEST.Factory _factory4_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory5_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory6_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory7_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory8_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON_SMITH.Factory _factory9_PFS = new TBL_DUNGEON_SMITH.Factory();
	private static readonly TBL_SHOP.Factory _factory10_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory11_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON_TREASURE.Factory _factory12_PFS = new TBL_DUNGEON_TREASURE.Factory();
	private static readonly TBL_DUNGEON_BOSS.Factory _factory13_PFS = new TBL_DUNGEON_BOSS.Factory();
	private static readonly TBL_PACKAGE.Factory _factory14_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_GACHA_EQUIPMENT.Factory _factory15_PFS = new TBL_GACHA_EQUIPMENT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory16_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory17_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_UPGRADE_STAT.Factory _factory18_PFS = new TBL_UPGRADE_STAT.Factory();
	private static readonly TBL_STAGE.Factory _factory19_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_EQUIPMENT.Factory _factory20_PFS = new TBL_EQUIPMENT.Factory();
	private static readonly TBL_PROMOTION.Factory _factory21_PFS = new TBL_PROMOTION.Factory();
	private static readonly TBL_ADVENTURE_STORY.Factory _factory22_PFS = new TBL_ADVENTURE_STORY.Factory();
	private static readonly TBL_ADVENTURE_DUNGEON.Factory _factory23_PFS = new TBL_ADVENTURE_DUNGEON.Factory();
	private static readonly TBL_UPGRADE_DICE.Factory _factory24_PFS = new TBL_UPGRADE_DICE.Factory();
	private static readonly TBL_GACHA_DICE.Factory _factory25_PFS = new TBL_GACHA_DICE.Factory();
	private static readonly TBL_FOLLOWER.Factory _factory26_PFS = new TBL_FOLLOWER.Factory();
	private TBL_DUNGEON_TREASURE() : base(MetaDefault)
	{
	}
	private TBL_DUNGEON_TREASURE(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_DUNGEON_TREASURE(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_DUNGEON_TREASURE(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_DUNGEON_TREASURE FindEntity(Predicate<TBL_DUNGEON_TREASURE> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_DUNGEON_TREASURE) entity)) as TBL_DUNGEON_TREASURE;
	}
	public static List<TBL_DUNGEON_TREASURE> FindEntities(Predicate<TBL_DUNGEON_TREASURE> filter, List<TBL_DUNGEON_TREASURE> result=null, Comparison<TBL_DUNGEON_TREASURE> sort=null)
	{
		result = result ?? new List<TBL_DUNGEON_TREASURE>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_DUNGEON_TREASURE) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_DUNGEON_TREASURE) e1, (TBL_DUNGEON_TREASURE) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_DUNGEON_TREASURE) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_DUNGEON_TREASURE> action, Predicate<TBL_DUNGEON_TREASURE> filter=null, Comparison<TBL_DUNGEON_TREASURE> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_DUNGEON_TREASURE) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_DUNGEON_TREASURE) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_DUNGEON_TREASURE)e1,(TBL_DUNGEON_TREASURE)e2));
	}
	public static TBL_DUNGEON_TREASURE GetEntity(BGId entityId)
	{
		return (TBL_DUNGEON_TREASURE) MetaDefault.GetEntity(entityId);
	}
	public static TBL_DUNGEON_TREASURE GetEntity(int index)
	{
		return (TBL_DUNGEON_TREASURE) MetaDefault[index];
	}
	public static TBL_DUNGEON_TREASURE GetEntity(string entityName)
	{
		return (TBL_DUNGEON_TREASURE) MetaDefault.GetEntity(entityName);
	}
	public static TBL_DUNGEON_TREASURE NewEntity()
	{
		return (TBL_DUNGEON_TREASURE) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_DUNGEON_BOSS : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_DUNGEON_BOSS(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_DUNGEON_BOSS(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5616261078039342652,3104883358875525808));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Double DamageFactor
	{
		get
		{
			return _DamageFactor[Index];
		}
		set
		{
			_DamageFactor[Index] = value;
		}
	}
	public System.Double HealthFactor
	{
		get
		{
			return _HealthFactor[Index];
		}
		set
		{
			_HealthFactor[Index] = value;
		}
	}
	public RewardType RewardType1
	{
		get
		{
			return (RewardType) _RewardType1[Index];
		}
		set
		{
			_RewardType1[Index] = value;
		}
	}
	public System.Int32 RewardValue1
	{
		get
		{
			return _RewardValue1[Index];
		}
		set
		{
			_RewardValue1[Index] = value;
		}
	}
	public System.Int32 RewardCount1
	{
		get
		{
			return _RewardCount1[Index];
		}
		set
		{
			_RewardCount1[Index] = value;
		}
	}
	public RewardType RewardType2
	{
		get
		{
			return (RewardType) _RewardType2[Index];
		}
		set
		{
			_RewardType2[Index] = value;
		}
	}
	public System.Int32 RewardValue2
	{
		get
		{
			return _RewardValue2[Index];
		}
		set
		{
			_RewardValue2[Index] = value;
		}
	}
	public System.Int32 RewardCount2
	{
		get
		{
			return _RewardCount2[Index];
		}
		set
		{
			_RewardCount2[Index] = value;
		}
	}
	public RewardType RewardType3
	{
		get
		{
			return (RewardType) _RewardType3[Index];
		}
		set
		{
			_RewardType3[Index] = value;
		}
	}
	public System.Int32 RewardValue3
	{
		get
		{
			return _RewardValue3[Index];
		}
		set
		{
			_RewardValue3[Index] = value;
		}
	}
	public System.Int32 RewardCount3
	{
		get
		{
			return _RewardCount3[Index];
		}
		set
		{
			_RewardCount3[Index] = value;
		}
	}
	public System.Int32 TimeLimit
	{
		get
		{
			return _TimeLimit[Index];
		}
		set
		{
			_TimeLimit[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5294095994745354070,2905311243632977833));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_DamageFactor;
	public static BansheeGz.BGDatabase.BGFieldDouble _DamageFactor
	{
		get
		{
			if(_ufle12jhs77_DamageFactor==null || _ufle12jhs77_DamageFactor.IsDeleted) _ufle12jhs77_DamageFactor=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5413944565798050244,7225518536562246817));
			return _ufle12jhs77_DamageFactor;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_HealthFactor;
	public static BansheeGz.BGDatabase.BGFieldDouble _HealthFactor
	{
		get
		{
			if(_ufle12jhs77_HealthFactor==null || _ufle12jhs77_HealthFactor.IsDeleted) _ufle12jhs77_HealthFactor=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(4615349108130174249,16270075220829403030));
			return _ufle12jhs77_HealthFactor;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_RewardType1;
	public static BansheeGz.BGDatabase.BGFieldEnum _RewardType1
	{
		get
		{
			if(_ufle12jhs77_RewardType1==null || _ufle12jhs77_RewardType1.IsDeleted) _ufle12jhs77_RewardType1=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5661534834134744057,12053900482965564049));
			return _ufle12jhs77_RewardType1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardValue1;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardValue1
	{
		get
		{
			if(_ufle12jhs77_RewardValue1==null || _ufle12jhs77_RewardValue1.IsDeleted) _ufle12jhs77_RewardValue1=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4783779082162433265,15375698367642182297));
			return _ufle12jhs77_RewardValue1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardCount1;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardCount1
	{
		get
		{
			if(_ufle12jhs77_RewardCount1==null || _ufle12jhs77_RewardCount1.IsDeleted) _ufle12jhs77_RewardCount1=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5160864236023321980,16496374847152525970));
			return _ufle12jhs77_RewardCount1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_RewardType2;
	public static BansheeGz.BGDatabase.BGFieldEnum _RewardType2
	{
		get
		{
			if(_ufle12jhs77_RewardType2==null || _ufle12jhs77_RewardType2.IsDeleted) _ufle12jhs77_RewardType2=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5109126910428121304,4117877581991882669));
			return _ufle12jhs77_RewardType2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardValue2;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardValue2
	{
		get
		{
			if(_ufle12jhs77_RewardValue2==null || _ufle12jhs77_RewardValue2.IsDeleted) _ufle12jhs77_RewardValue2=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5671093788063650179,11540248224280440492));
			return _ufle12jhs77_RewardValue2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardCount2;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardCount2
	{
		get
		{
			if(_ufle12jhs77_RewardCount2==null || _ufle12jhs77_RewardCount2.IsDeleted) _ufle12jhs77_RewardCount2=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5446618917784353131,42668663672793986));
			return _ufle12jhs77_RewardCount2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_RewardType3;
	public static BansheeGz.BGDatabase.BGFieldEnum _RewardType3
	{
		get
		{
			if(_ufle12jhs77_RewardType3==null || _ufle12jhs77_RewardType3.IsDeleted) _ufle12jhs77_RewardType3=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5468011244066307404,4397482136338162087));
			return _ufle12jhs77_RewardType3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardValue3;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardValue3
	{
		get
		{
			if(_ufle12jhs77_RewardValue3==null || _ufle12jhs77_RewardValue3.IsDeleted) _ufle12jhs77_RewardValue3=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4899615703510799406,16064060357273127600));
			return _ufle12jhs77_RewardValue3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardCount3;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardCount3
	{
		get
		{
			if(_ufle12jhs77_RewardCount3==null || _ufle12jhs77_RewardCount3.IsDeleted) _ufle12jhs77_RewardCount3=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5631409697231884716,6467665368241204112));
			return _ufle12jhs77_RewardCount3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_TimeLimit;
	public static BansheeGz.BGDatabase.BGFieldInt _TimeLimit
	{
		get
		{
			if(_ufle12jhs77_TimeLimit==null || _ufle12jhs77_TimeLimit.IsDeleted) _ufle12jhs77_TimeLimit=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5317894059697346539,16227419070252353677));
			return _ufle12jhs77_TimeLimit;
		}
	}
	private static readonly TBL_PLAYER.Factory _factory0_PFS = new TBL_PLAYER.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_UPGRADE_GOLD.Factory _factory3_PFS = new TBL_UPGRADE_GOLD.Factory();
	private static readonly TBL_QUEST.Factory _factory4_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory5_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory6_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory7_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory8_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON_SMITH.Factory _factory9_PFS = new TBL_DUNGEON_SMITH.Factory();
	private static readonly TBL_SHOP.Factory _factory10_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory11_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON_TREASURE.Factory _factory12_PFS = new TBL_DUNGEON_TREASURE.Factory();
	private static readonly TBL_DUNGEON_BOSS.Factory _factory13_PFS = new TBL_DUNGEON_BOSS.Factory();
	private static readonly TBL_PACKAGE.Factory _factory14_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_GACHA_EQUIPMENT.Factory _factory15_PFS = new TBL_GACHA_EQUIPMENT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory16_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory17_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_UPGRADE_STAT.Factory _factory18_PFS = new TBL_UPGRADE_STAT.Factory();
	private static readonly TBL_STAGE.Factory _factory19_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_EQUIPMENT.Factory _factory20_PFS = new TBL_EQUIPMENT.Factory();
	private static readonly TBL_PROMOTION.Factory _factory21_PFS = new TBL_PROMOTION.Factory();
	private static readonly TBL_ADVENTURE_STORY.Factory _factory22_PFS = new TBL_ADVENTURE_STORY.Factory();
	private static readonly TBL_ADVENTURE_DUNGEON.Factory _factory23_PFS = new TBL_ADVENTURE_DUNGEON.Factory();
	private static readonly TBL_UPGRADE_DICE.Factory _factory24_PFS = new TBL_UPGRADE_DICE.Factory();
	private static readonly TBL_GACHA_DICE.Factory _factory25_PFS = new TBL_GACHA_DICE.Factory();
	private static readonly TBL_FOLLOWER.Factory _factory26_PFS = new TBL_FOLLOWER.Factory();
	private TBL_DUNGEON_BOSS() : base(MetaDefault)
	{
	}
	private TBL_DUNGEON_BOSS(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_DUNGEON_BOSS(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_DUNGEON_BOSS(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_DUNGEON_BOSS FindEntity(Predicate<TBL_DUNGEON_BOSS> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_DUNGEON_BOSS) entity)) as TBL_DUNGEON_BOSS;
	}
	public static List<TBL_DUNGEON_BOSS> FindEntities(Predicate<TBL_DUNGEON_BOSS> filter, List<TBL_DUNGEON_BOSS> result=null, Comparison<TBL_DUNGEON_BOSS> sort=null)
	{
		result = result ?? new List<TBL_DUNGEON_BOSS>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_DUNGEON_BOSS) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_DUNGEON_BOSS) e1, (TBL_DUNGEON_BOSS) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_DUNGEON_BOSS) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_DUNGEON_BOSS> action, Predicate<TBL_DUNGEON_BOSS> filter=null, Comparison<TBL_DUNGEON_BOSS> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_DUNGEON_BOSS) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_DUNGEON_BOSS) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_DUNGEON_BOSS)e1,(TBL_DUNGEON_BOSS)e2));
	}
	public static TBL_DUNGEON_BOSS GetEntity(BGId entityId)
	{
		return (TBL_DUNGEON_BOSS) MetaDefault.GetEntity(entityId);
	}
	public static TBL_DUNGEON_BOSS GetEntity(int index)
	{
		return (TBL_DUNGEON_BOSS) MetaDefault[index];
	}
	public static TBL_DUNGEON_BOSS GetEntity(string entityName)
	{
		return (TBL_DUNGEON_BOSS) MetaDefault.GetEntity(entityName);
	}
	public static TBL_DUNGEON_BOSS NewEntity()
	{
		return (TBL_DUNGEON_BOSS) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_PACKAGE : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_PACKAGE(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_PACKAGE(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4875516029090010685,4077363472013556896));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.String IAP_ID
	{
		get
		{
			return _IAP_ID[Index];
		}
		set
		{
			_IAP_ID[Index] = value;
		}
	}
	public System.Boolean IsLimited
	{
		get
		{
			return _IsLimited[Index];
		}
		set
		{
			_IsLimited[Index] = value;
		}
	}
	public RewardType Item_1_Type
	{
		get
		{
			return (RewardType) _Item_1_Type[Index];
		}
		set
		{
			_Item_1_Type[Index] = value;
		}
	}
	public System.Int32 Item_1_Index
	{
		get
		{
			return _Item_1_Index[Index];
		}
		set
		{
			_Item_1_Index[Index] = value;
		}
	}
	public System.Int32 Item_1_Count
	{
		get
		{
			return _Item_1_Count[Index];
		}
		set
		{
			_Item_1_Count[Index] = value;
		}
	}
	public RewardType Item_2_Type
	{
		get
		{
			return (RewardType) _Item_2_Type[Index];
		}
		set
		{
			_Item_2_Type[Index] = value;
		}
	}
	public System.Int32 Item_2_Index
	{
		get
		{
			return _Item_2_Index[Index];
		}
		set
		{
			_Item_2_Index[Index] = value;
		}
	}
	public System.Int32 Item_2_Count
	{
		get
		{
			return _Item_2_Count[Index];
		}
		set
		{
			_Item_2_Count[Index] = value;
		}
	}
	public RewardType Item_3_Type
	{
		get
		{
			return (RewardType) _Item_3_Type[Index];
		}
		set
		{
			_Item_3_Type[Index] = value;
		}
	}
	public System.Int32 Item_3_Index
	{
		get
		{
			return _Item_3_Index[Index];
		}
		set
		{
			_Item_3_Index[Index] = value;
		}
	}
	public System.Int32 Item_3_Count
	{
		get
		{
			return _Item_3_Count[Index];
		}
		set
		{
			_Item_3_Count[Index] = value;
		}
	}
	public RewardType Item_4_Type
	{
		get
		{
			return (RewardType) _Item_4_Type[Index];
		}
		set
		{
			_Item_4_Type[Index] = value;
		}
	}
	public System.Int32 Item_4_Index
	{
		get
		{
			return _Item_4_Index[Index];
		}
		set
		{
			_Item_4_Index[Index] = value;
		}
	}
	public System.Int32 Item_4_Count
	{
		get
		{
			return _Item_4_Count[Index];
		}
		set
		{
			_Item_4_Count[Index] = value;
		}
	}
	public RewardType Item_5_Type
	{
		get
		{
			return (RewardType) _Item_5_Type[Index];
		}
		set
		{
			_Item_5_Type[Index] = value;
		}
	}
	public System.Int32 Item_5_Index
	{
		get
		{
			return _Item_5_Index[Index];
		}
		set
		{
			_Item_5_Index[Index] = value;
		}
	}
	public System.Int32 Item_5_Count
	{
		get
		{
			return _Item_5_Count[Index];
		}
		set
		{
			_Item_5_Count[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5685332294995887057,12427171090132123811));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_IAP_ID;
	public static BansheeGz.BGDatabase.BGFieldString _IAP_ID
	{
		get
		{
			if(_ufle12jhs77_IAP_ID==null || _ufle12jhs77_IAP_ID.IsDeleted) _ufle12jhs77_IAP_ID=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5406108210255806251,8378627540181536385));
			return _ufle12jhs77_IAP_ID;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldBool _ufle12jhs77_IsLimited;
	public static BansheeGz.BGDatabase.BGFieldBool _IsLimited
	{
		get
		{
			if(_ufle12jhs77_IsLimited==null || _ufle12jhs77_IsLimited.IsDeleted) _ufle12jhs77_IsLimited=(BansheeGz.BGDatabase.BGFieldBool) MetaDefault.GetField(new BGId(5588865403176615926,14145261884836933807));
			return _ufle12jhs77_IsLimited;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_Item_1_Type;
	public static BansheeGz.BGDatabase.BGFieldEnum _Item_1_Type
	{
		get
		{
			if(_ufle12jhs77_Item_1_Type==null || _ufle12jhs77_Item_1_Type.IsDeleted) _ufle12jhs77_Item_1_Type=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5091777602131309226,10282463025016188041));
			return _ufle12jhs77_Item_1_Type;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Item_1_Index;
	public static BansheeGz.BGDatabase.BGFieldInt _Item_1_Index
	{
		get
		{
			if(_ufle12jhs77_Item_1_Index==null || _ufle12jhs77_Item_1_Index.IsDeleted) _ufle12jhs77_Item_1_Index=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4788043663786725013,13688829080048150657));
			return _ufle12jhs77_Item_1_Index;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Item_1_Count;
	public static BansheeGz.BGDatabase.BGFieldInt _Item_1_Count
	{
		get
		{
			if(_ufle12jhs77_Item_1_Count==null || _ufle12jhs77_Item_1_Count.IsDeleted) _ufle12jhs77_Item_1_Count=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4858427242508631913,848279809257729937));
			return _ufle12jhs77_Item_1_Count;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_Item_2_Type;
	public static BansheeGz.BGDatabase.BGFieldEnum _Item_2_Type
	{
		get
		{
			if(_ufle12jhs77_Item_2_Type==null || _ufle12jhs77_Item_2_Type.IsDeleted) _ufle12jhs77_Item_2_Type=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5567860146118403694,17653647218462478779));
			return _ufle12jhs77_Item_2_Type;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Item_2_Index;
	public static BansheeGz.BGDatabase.BGFieldInt _Item_2_Index
	{
		get
		{
			if(_ufle12jhs77_Item_2_Index==null || _ufle12jhs77_Item_2_Index.IsDeleted) _ufle12jhs77_Item_2_Index=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5214815485456860752,6438967932078180233));
			return _ufle12jhs77_Item_2_Index;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Item_2_Count;
	public static BansheeGz.BGDatabase.BGFieldInt _Item_2_Count
	{
		get
		{
			if(_ufle12jhs77_Item_2_Count==null || _ufle12jhs77_Item_2_Count.IsDeleted) _ufle12jhs77_Item_2_Count=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4613809309643799288,4020871810456737181));
			return _ufle12jhs77_Item_2_Count;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_Item_3_Type;
	public static BansheeGz.BGDatabase.BGFieldEnum _Item_3_Type
	{
		get
		{
			if(_ufle12jhs77_Item_3_Type==null || _ufle12jhs77_Item_3_Type.IsDeleted) _ufle12jhs77_Item_3_Type=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5564052023117261564,11916958892685024644));
			return _ufle12jhs77_Item_3_Type;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Item_3_Index;
	public static BansheeGz.BGDatabase.BGFieldInt _Item_3_Index
	{
		get
		{
			if(_ufle12jhs77_Item_3_Index==null || _ufle12jhs77_Item_3_Index.IsDeleted) _ufle12jhs77_Item_3_Index=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5182932399465873094,3768345009174202506));
			return _ufle12jhs77_Item_3_Index;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Item_3_Count;
	public static BansheeGz.BGDatabase.BGFieldInt _Item_3_Count
	{
		get
		{
			if(_ufle12jhs77_Item_3_Count==null || _ufle12jhs77_Item_3_Count.IsDeleted) _ufle12jhs77_Item_3_Count=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5692191229611762550,14402686657846448531));
			return _ufle12jhs77_Item_3_Count;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_Item_4_Type;
	public static BansheeGz.BGDatabase.BGFieldEnum _Item_4_Type
	{
		get
		{
			if(_ufle12jhs77_Item_4_Type==null || _ufle12jhs77_Item_4_Type.IsDeleted) _ufle12jhs77_Item_4_Type=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5410712487801207031,1691127511441434528));
			return _ufle12jhs77_Item_4_Type;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Item_4_Index;
	public static BansheeGz.BGDatabase.BGFieldInt _Item_4_Index
	{
		get
		{
			if(_ufle12jhs77_Item_4_Index==null || _ufle12jhs77_Item_4_Index.IsDeleted) _ufle12jhs77_Item_4_Index=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4922243782024598046,17631026225906970771));
			return _ufle12jhs77_Item_4_Index;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Item_4_Count;
	public static BansheeGz.BGDatabase.BGFieldInt _Item_4_Count
	{
		get
		{
			if(_ufle12jhs77_Item_4_Count==null || _ufle12jhs77_Item_4_Count.IsDeleted) _ufle12jhs77_Item_4_Count=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5427405555832443273,8726835972907487913));
			return _ufle12jhs77_Item_4_Count;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_Item_5_Type;
	public static BansheeGz.BGDatabase.BGFieldEnum _Item_5_Type
	{
		get
		{
			if(_ufle12jhs77_Item_5_Type==null || _ufle12jhs77_Item_5_Type.IsDeleted) _ufle12jhs77_Item_5_Type=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4959901958260636303,5231818741212201865));
			return _ufle12jhs77_Item_5_Type;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Item_5_Index;
	public static BansheeGz.BGDatabase.BGFieldInt _Item_5_Index
	{
		get
		{
			if(_ufle12jhs77_Item_5_Index==null || _ufle12jhs77_Item_5_Index.IsDeleted) _ufle12jhs77_Item_5_Index=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5506892666813671515,10770414943408355477));
			return _ufle12jhs77_Item_5_Index;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Item_5_Count;
	public static BansheeGz.BGDatabase.BGFieldInt _Item_5_Count
	{
		get
		{
			if(_ufle12jhs77_Item_5_Count==null || _ufle12jhs77_Item_5_Count.IsDeleted) _ufle12jhs77_Item_5_Count=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4868794636874574658,9076646382593575303));
			return _ufle12jhs77_Item_5_Count;
		}
	}
	private static readonly TBL_PLAYER.Factory _factory0_PFS = new TBL_PLAYER.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_UPGRADE_GOLD.Factory _factory3_PFS = new TBL_UPGRADE_GOLD.Factory();
	private static readonly TBL_QUEST.Factory _factory4_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory5_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory6_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory7_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory8_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON_SMITH.Factory _factory9_PFS = new TBL_DUNGEON_SMITH.Factory();
	private static readonly TBL_SHOP.Factory _factory10_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory11_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON_TREASURE.Factory _factory12_PFS = new TBL_DUNGEON_TREASURE.Factory();
	private static readonly TBL_DUNGEON_BOSS.Factory _factory13_PFS = new TBL_DUNGEON_BOSS.Factory();
	private static readonly TBL_PACKAGE.Factory _factory14_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_GACHA_EQUIPMENT.Factory _factory15_PFS = new TBL_GACHA_EQUIPMENT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory16_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory17_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_UPGRADE_STAT.Factory _factory18_PFS = new TBL_UPGRADE_STAT.Factory();
	private static readonly TBL_STAGE.Factory _factory19_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_EQUIPMENT.Factory _factory20_PFS = new TBL_EQUIPMENT.Factory();
	private static readonly TBL_PROMOTION.Factory _factory21_PFS = new TBL_PROMOTION.Factory();
	private static readonly TBL_ADVENTURE_STORY.Factory _factory22_PFS = new TBL_ADVENTURE_STORY.Factory();
	private static readonly TBL_ADVENTURE_DUNGEON.Factory _factory23_PFS = new TBL_ADVENTURE_DUNGEON.Factory();
	private static readonly TBL_UPGRADE_DICE.Factory _factory24_PFS = new TBL_UPGRADE_DICE.Factory();
	private static readonly TBL_GACHA_DICE.Factory _factory25_PFS = new TBL_GACHA_DICE.Factory();
	private static readonly TBL_FOLLOWER.Factory _factory26_PFS = new TBL_FOLLOWER.Factory();
	private TBL_PACKAGE() : base(MetaDefault)
	{
	}
	private TBL_PACKAGE(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_PACKAGE(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_PACKAGE(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_PACKAGE FindEntity(Predicate<TBL_PACKAGE> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_PACKAGE) entity)) as TBL_PACKAGE;
	}
	public static List<TBL_PACKAGE> FindEntities(Predicate<TBL_PACKAGE> filter, List<TBL_PACKAGE> result=null, Comparison<TBL_PACKAGE> sort=null)
	{
		result = result ?? new List<TBL_PACKAGE>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_PACKAGE) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_PACKAGE) e1, (TBL_PACKAGE) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_PACKAGE) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_PACKAGE> action, Predicate<TBL_PACKAGE> filter=null, Comparison<TBL_PACKAGE> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_PACKAGE) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_PACKAGE) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_PACKAGE)e1,(TBL_PACKAGE)e2));
	}
	public static TBL_PACKAGE GetEntity(BGId entityId)
	{
		return (TBL_PACKAGE) MetaDefault.GetEntity(entityId);
	}
	public static TBL_PACKAGE GetEntity(int index)
	{
		return (TBL_PACKAGE) MetaDefault[index];
	}
	public static TBL_PACKAGE GetEntity(string entityName)
	{
		return (TBL_PACKAGE) MetaDefault.GetEntity(entityName);
	}
	public static TBL_PACKAGE NewEntity()
	{
		return (TBL_PACKAGE) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_GACHA_EQUIPMENT : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_GACHA_EQUIPMENT(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_GACHA_EQUIPMENT(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5229620638002817633,10169981355233731470));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Int32 RequireCount
	{
		get
		{
			return _RequireCount[Index];
		}
		set
		{
			_RequireCount[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Single> Percents
	{
		get
		{
			return _Percents[Index];
		}
		set
		{
			_Percents[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4657292971804269775,10909359561233441962));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RequireCount;
	public static BansheeGz.BGDatabase.BGFieldInt _RequireCount
	{
		get
		{
			if(_ufle12jhs77_RequireCount==null || _ufle12jhs77_RequireCount.IsDeleted) _ufle12jhs77_RequireCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5252612111767686224,7657455894440210322));
			return _ufle12jhs77_RequireCount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListFloat _ufle12jhs77_Percents;
	public static BansheeGz.BGDatabase.BGFieldListFloat _Percents
	{
		get
		{
			if(_ufle12jhs77_Percents==null || _ufle12jhs77_Percents.IsDeleted) _ufle12jhs77_Percents=(BansheeGz.BGDatabase.BGFieldListFloat) MetaDefault.GetField(new BGId(5528924591503560229,11369036187038928560));
			return _ufle12jhs77_Percents;
		}
	}
	private static readonly TBL_PLAYER.Factory _factory0_PFS = new TBL_PLAYER.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_UPGRADE_GOLD.Factory _factory3_PFS = new TBL_UPGRADE_GOLD.Factory();
	private static readonly TBL_QUEST.Factory _factory4_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory5_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory6_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory7_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory8_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON_SMITH.Factory _factory9_PFS = new TBL_DUNGEON_SMITH.Factory();
	private static readonly TBL_SHOP.Factory _factory10_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory11_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON_TREASURE.Factory _factory12_PFS = new TBL_DUNGEON_TREASURE.Factory();
	private static readonly TBL_DUNGEON_BOSS.Factory _factory13_PFS = new TBL_DUNGEON_BOSS.Factory();
	private static readonly TBL_PACKAGE.Factory _factory14_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_GACHA_EQUIPMENT.Factory _factory15_PFS = new TBL_GACHA_EQUIPMENT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory16_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory17_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_UPGRADE_STAT.Factory _factory18_PFS = new TBL_UPGRADE_STAT.Factory();
	private static readonly TBL_STAGE.Factory _factory19_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_EQUIPMENT.Factory _factory20_PFS = new TBL_EQUIPMENT.Factory();
	private static readonly TBL_PROMOTION.Factory _factory21_PFS = new TBL_PROMOTION.Factory();
	private static readonly TBL_ADVENTURE_STORY.Factory _factory22_PFS = new TBL_ADVENTURE_STORY.Factory();
	private static readonly TBL_ADVENTURE_DUNGEON.Factory _factory23_PFS = new TBL_ADVENTURE_DUNGEON.Factory();
	private static readonly TBL_UPGRADE_DICE.Factory _factory24_PFS = new TBL_UPGRADE_DICE.Factory();
	private static readonly TBL_GACHA_DICE.Factory _factory25_PFS = new TBL_GACHA_DICE.Factory();
	private static readonly TBL_FOLLOWER.Factory _factory26_PFS = new TBL_FOLLOWER.Factory();
	private TBL_GACHA_EQUIPMENT() : base(MetaDefault)
	{
	}
	private TBL_GACHA_EQUIPMENT(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_GACHA_EQUIPMENT(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_GACHA_EQUIPMENT(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_GACHA_EQUIPMENT FindEntity(Predicate<TBL_GACHA_EQUIPMENT> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_GACHA_EQUIPMENT) entity)) as TBL_GACHA_EQUIPMENT;
	}
	public static List<TBL_GACHA_EQUIPMENT> FindEntities(Predicate<TBL_GACHA_EQUIPMENT> filter, List<TBL_GACHA_EQUIPMENT> result=null, Comparison<TBL_GACHA_EQUIPMENT> sort=null)
	{
		result = result ?? new List<TBL_GACHA_EQUIPMENT>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_GACHA_EQUIPMENT) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_GACHA_EQUIPMENT) e1, (TBL_GACHA_EQUIPMENT) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_GACHA_EQUIPMENT) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_GACHA_EQUIPMENT> action, Predicate<TBL_GACHA_EQUIPMENT> filter=null, Comparison<TBL_GACHA_EQUIPMENT> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_GACHA_EQUIPMENT) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_GACHA_EQUIPMENT) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_GACHA_EQUIPMENT)e1,(TBL_GACHA_EQUIPMENT)e2));
	}
	public static TBL_GACHA_EQUIPMENT GetEntity(BGId entityId)
	{
		return (TBL_GACHA_EQUIPMENT) MetaDefault.GetEntity(entityId);
	}
	public static TBL_GACHA_EQUIPMENT GetEntity(int index)
	{
		return (TBL_GACHA_EQUIPMENT) MetaDefault[index];
	}
	public static TBL_GACHA_EQUIPMENT GetEntity(string entityName)
	{
		return (TBL_GACHA_EQUIPMENT) MetaDefault.GetEntity(entityName);
	}
	public static TBL_GACHA_EQUIPMENT NewEntity()
	{
		return (TBL_GACHA_EQUIPMENT) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_BATTLEPASS_REWARD : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_BATTLEPASS_REWARD(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_BATTLEPASS_REWARD(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4854184321450413003,14086818308173268104));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public TBL_BATTLEPASS BattlePass
	{
		get
		{
			return (TBL_BATTLEPASS) _BattlePass[Index];
		}
		set
		{
			_BattlePass[Index] = value;
		}
	}
	public System.Int32 RequireCount
	{
		get
		{
			return _RequireCount[Index];
		}
		set
		{
			_RequireCount[Index] = value;
		}
	}
	public RewardType ADRewardType
	{
		get
		{
			return (RewardType) _ADRewardType[Index];
		}
		set
		{
			_ADRewardType[Index] = value;
		}
	}
	public System.Int32 ADRewardValue
	{
		get
		{
			return _ADRewardValue[Index];
		}
		set
		{
			_ADRewardValue[Index] = value;
		}
	}
	public System.Int32 ADRewardAmount
	{
		get
		{
			return _ADRewardAmount[Index];
		}
		set
		{
			_ADRewardAmount[Index] = value;
		}
	}
	public RewardType PremiumRewardType1
	{
		get
		{
			return (RewardType) _PremiumRewardType1[Index];
		}
		set
		{
			_PremiumRewardType1[Index] = value;
		}
	}
	public System.Int32 PremiumRewardValue1
	{
		get
		{
			return _PremiumRewardValue1[Index];
		}
		set
		{
			_PremiumRewardValue1[Index] = value;
		}
	}
	public System.Int32 PremiumRewardAmount1
	{
		get
		{
			return _PremiumRewardAmount1[Index];
		}
		set
		{
			_PremiumRewardAmount1[Index] = value;
		}
	}
	public RewardType PremiumRewardType2
	{
		get
		{
			return (RewardType) _PremiumRewardType2[Index];
		}
		set
		{
			_PremiumRewardType2[Index] = value;
		}
	}
	public System.Int32 PremiumRewardValue2
	{
		get
		{
			return _PremiumRewardValue2[Index];
		}
		set
		{
			_PremiumRewardValue2[Index] = value;
		}
	}
	public System.Int32 PremiumRewardAmount2
	{
		get
		{
			return _PremiumRewardAmount2[Index];
		}
		set
		{
			_PremiumRewardAmount2[Index] = value;
		}
	}
	public RewardType PremiumRewardType3
	{
		get
		{
			return (RewardType) _PremiumRewardType3[Index];
		}
		set
		{
			_PremiumRewardType3[Index] = value;
		}
	}
	public System.Int32 PremiumRewardValue3
	{
		get
		{
			return _PremiumRewardValue3[Index];
		}
		set
		{
			_PremiumRewardValue3[Index] = value;
		}
	}
	public System.Int32 PremiumRewardAmount3
	{
		get
		{
			return _PremiumRewardAmount3[Index];
		}
		set
		{
			_PremiumRewardAmount3[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4709082045455313706,15926643596313393042));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_BattlePass;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _BattlePass
	{
		get
		{
			if(_ufle12jhs77_BattlePass==null || _ufle12jhs77_BattlePass.IsDeleted) _ufle12jhs77_BattlePass=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5143487624248872699,1977039224195184040));
			return _ufle12jhs77_BattlePass;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RequireCount;
	public static BansheeGz.BGDatabase.BGFieldInt _RequireCount
	{
		get
		{
			if(_ufle12jhs77_RequireCount==null || _ufle12jhs77_RequireCount.IsDeleted) _ufle12jhs77_RequireCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4878373637131392376,10311902818555210171));
			return _ufle12jhs77_RequireCount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ADRewardType;
	public static BansheeGz.BGDatabase.BGFieldEnum _ADRewardType
	{
		get
		{
			if(_ufle12jhs77_ADRewardType==null || _ufle12jhs77_ADRewardType.IsDeleted) _ufle12jhs77_ADRewardType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5700929351415362599,2537727327005870752));
			return _ufle12jhs77_ADRewardType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_ADRewardValue;
	public static BansheeGz.BGDatabase.BGFieldInt _ADRewardValue
	{
		get
		{
			if(_ufle12jhs77_ADRewardValue==null || _ufle12jhs77_ADRewardValue.IsDeleted) _ufle12jhs77_ADRewardValue=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4958062539344180875,17960848255795955121));
			return _ufle12jhs77_ADRewardValue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_ADRewardAmount;
	public static BansheeGz.BGDatabase.BGFieldInt _ADRewardAmount
	{
		get
		{
			if(_ufle12jhs77_ADRewardAmount==null || _ufle12jhs77_ADRewardAmount.IsDeleted) _ufle12jhs77_ADRewardAmount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5171369944928296372,10880984787381134747));
			return _ufle12jhs77_ADRewardAmount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_PremiumRewardType1;
	public static BansheeGz.BGDatabase.BGFieldEnum _PremiumRewardType1
	{
		get
		{
			if(_ufle12jhs77_PremiumRewardType1==null || _ufle12jhs77_PremiumRewardType1.IsDeleted) _ufle12jhs77_PremiumRewardType1=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5188867822249364139,11581478381541633441));
			return _ufle12jhs77_PremiumRewardType1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_PremiumRewardValue1;
	public static BansheeGz.BGDatabase.BGFieldInt _PremiumRewardValue1
	{
		get
		{
			if(_ufle12jhs77_PremiumRewardValue1==null || _ufle12jhs77_PremiumRewardValue1.IsDeleted) _ufle12jhs77_PremiumRewardValue1=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5380213498646625370,1550164744688947859));
			return _ufle12jhs77_PremiumRewardValue1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_PremiumRewardAmount1;
	public static BansheeGz.BGDatabase.BGFieldInt _PremiumRewardAmount1
	{
		get
		{
			if(_ufle12jhs77_PremiumRewardAmount1==null || _ufle12jhs77_PremiumRewardAmount1.IsDeleted) _ufle12jhs77_PremiumRewardAmount1=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5007717156743696741,5540883249839083413));
			return _ufle12jhs77_PremiumRewardAmount1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_PremiumRewardType2;
	public static BansheeGz.BGDatabase.BGFieldEnum _PremiumRewardType2
	{
		get
		{
			if(_ufle12jhs77_PremiumRewardType2==null || _ufle12jhs77_PremiumRewardType2.IsDeleted) _ufle12jhs77_PremiumRewardType2=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4997987490755475013,2845096782479134909));
			return _ufle12jhs77_PremiumRewardType2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_PremiumRewardValue2;
	public static BansheeGz.BGDatabase.BGFieldInt _PremiumRewardValue2
	{
		get
		{
			if(_ufle12jhs77_PremiumRewardValue2==null || _ufle12jhs77_PremiumRewardValue2.IsDeleted) _ufle12jhs77_PremiumRewardValue2=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4732880475056696560,5508916340527965348));
			return _ufle12jhs77_PremiumRewardValue2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_PremiumRewardAmount2;
	public static BansheeGz.BGDatabase.BGFieldInt _PremiumRewardAmount2
	{
		get
		{
			if(_ufle12jhs77_PremiumRewardAmount2==null || _ufle12jhs77_PremiumRewardAmount2.IsDeleted) _ufle12jhs77_PremiumRewardAmount2=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4750031492771994024,7774223682076772238));
			return _ufle12jhs77_PremiumRewardAmount2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_PremiumRewardType3;
	public static BansheeGz.BGDatabase.BGFieldEnum _PremiumRewardType3
	{
		get
		{
			if(_ufle12jhs77_PremiumRewardType3==null || _ufle12jhs77_PremiumRewardType3.IsDeleted) _ufle12jhs77_PremiumRewardType3=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5141181996727108678,8938259528770591151));
			return _ufle12jhs77_PremiumRewardType3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_PremiumRewardValue3;
	public static BansheeGz.BGDatabase.BGFieldInt _PremiumRewardValue3
	{
		get
		{
			if(_ufle12jhs77_PremiumRewardValue3==null || _ufle12jhs77_PremiumRewardValue3.IsDeleted) _ufle12jhs77_PremiumRewardValue3=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5190373104920545800,12624704645939399854));
			return _ufle12jhs77_PremiumRewardValue3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_PremiumRewardAmount3;
	public static BansheeGz.BGDatabase.BGFieldInt _PremiumRewardAmount3
	{
		get
		{
			if(_ufle12jhs77_PremiumRewardAmount3==null || _ufle12jhs77_PremiumRewardAmount3.IsDeleted) _ufle12jhs77_PremiumRewardAmount3=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4913847269396104166,8663433858051616446));
			return _ufle12jhs77_PremiumRewardAmount3;
		}
	}
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_WithBattlePass;
	public static BansheeGz.BGDatabase.BGKey _WithBattlePass
	{
		get
		{
			if(_edeht3sdad33_WithBattlePass==null || _edeht3sdad33_WithBattlePass.IsDeleted) _edeht3sdad33_WithBattlePass= MetaDefault.GetKey(new BGId(5222090477709777090,3643119350348297637));
			return _edeht3sdad33_WithBattlePass;
		}
	}
	private static readonly TBL_PLAYER.Factory _factory0_PFS = new TBL_PLAYER.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_UPGRADE_GOLD.Factory _factory3_PFS = new TBL_UPGRADE_GOLD.Factory();
	private static readonly TBL_QUEST.Factory _factory4_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory5_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory6_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory7_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory8_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON_SMITH.Factory _factory9_PFS = new TBL_DUNGEON_SMITH.Factory();
	private static readonly TBL_SHOP.Factory _factory10_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory11_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON_TREASURE.Factory _factory12_PFS = new TBL_DUNGEON_TREASURE.Factory();
	private static readonly TBL_DUNGEON_BOSS.Factory _factory13_PFS = new TBL_DUNGEON_BOSS.Factory();
	private static readonly TBL_PACKAGE.Factory _factory14_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_GACHA_EQUIPMENT.Factory _factory15_PFS = new TBL_GACHA_EQUIPMENT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory16_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory17_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_UPGRADE_STAT.Factory _factory18_PFS = new TBL_UPGRADE_STAT.Factory();
	private static readonly TBL_STAGE.Factory _factory19_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_EQUIPMENT.Factory _factory20_PFS = new TBL_EQUIPMENT.Factory();
	private static readonly TBL_PROMOTION.Factory _factory21_PFS = new TBL_PROMOTION.Factory();
	private static readonly TBL_ADVENTURE_STORY.Factory _factory22_PFS = new TBL_ADVENTURE_STORY.Factory();
	private static readonly TBL_ADVENTURE_DUNGEON.Factory _factory23_PFS = new TBL_ADVENTURE_DUNGEON.Factory();
	private static readonly TBL_UPGRADE_DICE.Factory _factory24_PFS = new TBL_UPGRADE_DICE.Factory();
	private static readonly TBL_GACHA_DICE.Factory _factory25_PFS = new TBL_GACHA_DICE.Factory();
	private static readonly TBL_FOLLOWER.Factory _factory26_PFS = new TBL_FOLLOWER.Factory();
	private TBL_BATTLEPASS_REWARD() : base(MetaDefault)
	{
	}
	private TBL_BATTLEPASS_REWARD(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_BATTLEPASS_REWARD(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_BATTLEPASS_REWARD(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_BATTLEPASS_REWARD FindEntity(Predicate<TBL_BATTLEPASS_REWARD> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_BATTLEPASS_REWARD) entity)) as TBL_BATTLEPASS_REWARD;
	}
	public static List<TBL_BATTLEPASS_REWARD> FindEntities(Predicate<TBL_BATTLEPASS_REWARD> filter, List<TBL_BATTLEPASS_REWARD> result=null, Comparison<TBL_BATTLEPASS_REWARD> sort=null)
	{
		result = result ?? new List<TBL_BATTLEPASS_REWARD>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_BATTLEPASS_REWARD) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_BATTLEPASS_REWARD) e1, (TBL_BATTLEPASS_REWARD) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_BATTLEPASS_REWARD) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_BATTLEPASS_REWARD> action, Predicate<TBL_BATTLEPASS_REWARD> filter=null, Comparison<TBL_BATTLEPASS_REWARD> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_BATTLEPASS_REWARD) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_BATTLEPASS_REWARD) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_BATTLEPASS_REWARD)e1,(TBL_BATTLEPASS_REWARD)e2));
	}
	public static TBL_BATTLEPASS_REWARD GetEntity(BGId entityId)
	{
		return (TBL_BATTLEPASS_REWARD) MetaDefault.GetEntity(entityId);
	}
	public static TBL_BATTLEPASS_REWARD GetEntity(int index)
	{
		return (TBL_BATTLEPASS_REWARD) MetaDefault[index];
	}
	public static TBL_BATTLEPASS_REWARD GetEntity(string entityName)
	{
		return (TBL_BATTLEPASS_REWARD) MetaDefault.GetEntity(entityName);
	}
	public static TBL_BATTLEPASS_REWARD NewEntity()
	{
		return (TBL_BATTLEPASS_REWARD) MetaDefault.NewEntity();
	}
	public static TBL_BATTLEPASS_REWARD GetEntityByKeyWithBattlePass(TBL_BATTLEPASS BattlePass)
	{
		return (TBL_BATTLEPASS_REWARD) _WithBattlePass.GetEntityByKey(BattlePass);
	}
	public static List<TBL_BATTLEPASS_REWARD> GetEntitiesByKeyWithBattlePass(TBL_BATTLEPASS BattlePass)
	{
		var result = _WithBattlePass.GetEntitiesByKey(BattlePass);
		if(result==null || result.Count==0) return null;
		var list = new List<TBL_BATTLEPASS_REWARD>(result.Count);
		for(var i = 0 ; i < result.Count ; i++) list.Add((TBL_BATTLEPASS_REWARD) result[i]);
		return list;
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_BATTLEPASS : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_BATTLEPASS(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_BATTLEPASS(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5573978610377063787,12849956931881922736));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4644394710669917188,5512602695002582205));
			return _ufle12jhs77_name;
		}
	}
	private static readonly List<BGEntity> _tugjbyuhfv_reusableList = new List<BGEntity>();
	public List<TBL_BATTLEPASS_REWARD> RelatedTBL_BATTLEPASS_REWARDListUsingBattlePassRelation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_BATTLEPASS_REWARD._BattlePass.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_BATTLEPASS_REWARD>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_BATTLEPASS_REWARD) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	private static readonly TBL_PLAYER.Factory _factory0_PFS = new TBL_PLAYER.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_UPGRADE_GOLD.Factory _factory3_PFS = new TBL_UPGRADE_GOLD.Factory();
	private static readonly TBL_QUEST.Factory _factory4_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory5_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory6_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory7_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory8_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON_SMITH.Factory _factory9_PFS = new TBL_DUNGEON_SMITH.Factory();
	private static readonly TBL_SHOP.Factory _factory10_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory11_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON_TREASURE.Factory _factory12_PFS = new TBL_DUNGEON_TREASURE.Factory();
	private static readonly TBL_DUNGEON_BOSS.Factory _factory13_PFS = new TBL_DUNGEON_BOSS.Factory();
	private static readonly TBL_PACKAGE.Factory _factory14_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_GACHA_EQUIPMENT.Factory _factory15_PFS = new TBL_GACHA_EQUIPMENT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory16_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory17_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_UPGRADE_STAT.Factory _factory18_PFS = new TBL_UPGRADE_STAT.Factory();
	private static readonly TBL_STAGE.Factory _factory19_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_EQUIPMENT.Factory _factory20_PFS = new TBL_EQUIPMENT.Factory();
	private static readonly TBL_PROMOTION.Factory _factory21_PFS = new TBL_PROMOTION.Factory();
	private static readonly TBL_ADVENTURE_STORY.Factory _factory22_PFS = new TBL_ADVENTURE_STORY.Factory();
	private static readonly TBL_ADVENTURE_DUNGEON.Factory _factory23_PFS = new TBL_ADVENTURE_DUNGEON.Factory();
	private static readonly TBL_UPGRADE_DICE.Factory _factory24_PFS = new TBL_UPGRADE_DICE.Factory();
	private static readonly TBL_GACHA_DICE.Factory _factory25_PFS = new TBL_GACHA_DICE.Factory();
	private static readonly TBL_FOLLOWER.Factory _factory26_PFS = new TBL_FOLLOWER.Factory();
	private TBL_BATTLEPASS() : base(MetaDefault)
	{
	}
	private TBL_BATTLEPASS(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_BATTLEPASS(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_BATTLEPASS(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_BATTLEPASS FindEntity(Predicate<TBL_BATTLEPASS> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_BATTLEPASS) entity)) as TBL_BATTLEPASS;
	}
	public static List<TBL_BATTLEPASS> FindEntities(Predicate<TBL_BATTLEPASS> filter, List<TBL_BATTLEPASS> result=null, Comparison<TBL_BATTLEPASS> sort=null)
	{
		result = result ?? new List<TBL_BATTLEPASS>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_BATTLEPASS) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_BATTLEPASS) e1, (TBL_BATTLEPASS) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_BATTLEPASS) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_BATTLEPASS> action, Predicate<TBL_BATTLEPASS> filter=null, Comparison<TBL_BATTLEPASS> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_BATTLEPASS) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_BATTLEPASS) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_BATTLEPASS)e1,(TBL_BATTLEPASS)e2));
	}
	public static TBL_BATTLEPASS GetEntity(BGId entityId)
	{
		return (TBL_BATTLEPASS) MetaDefault.GetEntity(entityId);
	}
	public static TBL_BATTLEPASS GetEntity(int index)
	{
		return (TBL_BATTLEPASS) MetaDefault[index];
	}
	public static TBL_BATTLEPASS GetEntity(string entityName)
	{
		return (TBL_BATTLEPASS) MetaDefault.GetEntity(entityName);
	}
	public static TBL_BATTLEPASS NewEntity()
	{
		return (TBL_BATTLEPASS) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_UPGRADE_STAT : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_UPGRADE_STAT(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_UPGRADE_STAT(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5164733334750703097,17433289439500288156));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public Enum_StatType StatType
	{
		get
		{
			return (Enum_StatType) _StatType[Index];
		}
		set
		{
			_StatType[Index] = value;
		}
	}
	public System.Double IncreaseValue
	{
		get
		{
			return _IncreaseValue[Index];
		}
		set
		{
			_IncreaseValue[Index] = value;
		}
	}
	public System.Int32 Price
	{
		get
		{
			return _Price[Index];
		}
		set
		{
			_Price[Index] = value;
		}
	}
	public System.Int32 MaxLevel
	{
		get
		{
			return _MaxLevel[Index];
		}
		set
		{
			_MaxLevel[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4860252936954603186,4721275725346520989));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_StatType;
	public static BansheeGz.BGDatabase.BGFieldEnum _StatType
	{
		get
		{
			if(_ufle12jhs77_StatType==null || _ufle12jhs77_StatType.IsDeleted) _ufle12jhs77_StatType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4906398730460202484,12364960366415669694));
			return _ufle12jhs77_StatType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_IncreaseValue;
	public static BansheeGz.BGDatabase.BGFieldDouble _IncreaseValue
	{
		get
		{
			if(_ufle12jhs77_IncreaseValue==null || _ufle12jhs77_IncreaseValue.IsDeleted) _ufle12jhs77_IncreaseValue=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5141400286033940642,2345672062321477519));
			return _ufle12jhs77_IncreaseValue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Price;
	public static BansheeGz.BGDatabase.BGFieldInt _Price
	{
		get
		{
			if(_ufle12jhs77_Price==null || _ufle12jhs77_Price.IsDeleted) _ufle12jhs77_Price=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4745946767988915499,5963815669996545192));
			return _ufle12jhs77_Price;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_MaxLevel;
	public static BansheeGz.BGDatabase.BGFieldInt _MaxLevel
	{
		get
		{
			if(_ufle12jhs77_MaxLevel==null || _ufle12jhs77_MaxLevel.IsDeleted) _ufle12jhs77_MaxLevel=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5251841740816334108,16207574415420741009));
			return _ufle12jhs77_MaxLevel;
		}
	}
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_WithStatType;
	public static BansheeGz.BGDatabase.BGKey _WithStatType
	{
		get
		{
			if(_edeht3sdad33_WithStatType==null || _edeht3sdad33_WithStatType.IsDeleted) _edeht3sdad33_WithStatType= MetaDefault.GetKey(new BGId(5004484065482535884,4904398913561986223));
			return _edeht3sdad33_WithStatType;
		}
	}
	private static readonly TBL_PLAYER.Factory _factory0_PFS = new TBL_PLAYER.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_UPGRADE_GOLD.Factory _factory3_PFS = new TBL_UPGRADE_GOLD.Factory();
	private static readonly TBL_QUEST.Factory _factory4_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory5_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory6_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory7_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory8_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON_SMITH.Factory _factory9_PFS = new TBL_DUNGEON_SMITH.Factory();
	private static readonly TBL_SHOP.Factory _factory10_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory11_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON_TREASURE.Factory _factory12_PFS = new TBL_DUNGEON_TREASURE.Factory();
	private static readonly TBL_DUNGEON_BOSS.Factory _factory13_PFS = new TBL_DUNGEON_BOSS.Factory();
	private static readonly TBL_PACKAGE.Factory _factory14_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_GACHA_EQUIPMENT.Factory _factory15_PFS = new TBL_GACHA_EQUIPMENT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory16_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory17_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_UPGRADE_STAT.Factory _factory18_PFS = new TBL_UPGRADE_STAT.Factory();
	private static readonly TBL_STAGE.Factory _factory19_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_EQUIPMENT.Factory _factory20_PFS = new TBL_EQUIPMENT.Factory();
	private static readonly TBL_PROMOTION.Factory _factory21_PFS = new TBL_PROMOTION.Factory();
	private static readonly TBL_ADVENTURE_STORY.Factory _factory22_PFS = new TBL_ADVENTURE_STORY.Factory();
	private static readonly TBL_ADVENTURE_DUNGEON.Factory _factory23_PFS = new TBL_ADVENTURE_DUNGEON.Factory();
	private static readonly TBL_UPGRADE_DICE.Factory _factory24_PFS = new TBL_UPGRADE_DICE.Factory();
	private static readonly TBL_GACHA_DICE.Factory _factory25_PFS = new TBL_GACHA_DICE.Factory();
	private static readonly TBL_FOLLOWER.Factory _factory26_PFS = new TBL_FOLLOWER.Factory();
	private TBL_UPGRADE_STAT() : base(MetaDefault)
	{
	}
	private TBL_UPGRADE_STAT(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_UPGRADE_STAT(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_UPGRADE_STAT(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_UPGRADE_STAT FindEntity(Predicate<TBL_UPGRADE_STAT> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_UPGRADE_STAT) entity)) as TBL_UPGRADE_STAT;
	}
	public static List<TBL_UPGRADE_STAT> FindEntities(Predicate<TBL_UPGRADE_STAT> filter, List<TBL_UPGRADE_STAT> result=null, Comparison<TBL_UPGRADE_STAT> sort=null)
	{
		result = result ?? new List<TBL_UPGRADE_STAT>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_UPGRADE_STAT) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_UPGRADE_STAT) e1, (TBL_UPGRADE_STAT) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_UPGRADE_STAT) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_UPGRADE_STAT> action, Predicate<TBL_UPGRADE_STAT> filter=null, Comparison<TBL_UPGRADE_STAT> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_UPGRADE_STAT) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_UPGRADE_STAT) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_UPGRADE_STAT)e1,(TBL_UPGRADE_STAT)e2));
	}
	public static TBL_UPGRADE_STAT GetEntity(BGId entityId)
	{
		return (TBL_UPGRADE_STAT) MetaDefault.GetEntity(entityId);
	}
	public static TBL_UPGRADE_STAT GetEntity(int index)
	{
		return (TBL_UPGRADE_STAT) MetaDefault[index];
	}
	public static TBL_UPGRADE_STAT GetEntity(string entityName)
	{
		return (TBL_UPGRADE_STAT) MetaDefault.GetEntity(entityName);
	}
	public static TBL_UPGRADE_STAT NewEntity()
	{
		return (TBL_UPGRADE_STAT) MetaDefault.NewEntity();
	}
	public static TBL_UPGRADE_STAT GetEntityByKeyWithStatType(Enum_StatType StatType)
	{
		return (TBL_UPGRADE_STAT) _WithStatType.GetEntityByKey(StatType);
	}
	public static List<TBL_UPGRADE_STAT> GetEntitiesByKeyWithStatType(Enum_StatType StatType)
	{
		var result = _WithStatType.GetEntitiesByKey(StatType);
		if(result==null || result.Count==0) return null;
		var list = new List<TBL_UPGRADE_STAT>(result.Count);
		for(var i = 0 ; i < result.Count ; i++) list.Add((TBL_UPGRADE_STAT) result[i]);
		return list;
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_STAGE : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_STAGE(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_STAGE(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5638143281840010022,6792906179203995546));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public TBL_WORLD World
	{
		get
		{
			return (TBL_WORLD) _World[Index];
		}
		set
		{
			_World[Index] = value;
		}
	}
	public System.Double Gold
	{
		get
		{
			return _Gold[Index];
		}
		set
		{
			_Gold[Index] = value;
		}
	}
	public System.Double Exp
	{
		get
		{
			return _Exp[Index];
		}
		set
		{
			_Exp[Index] = value;
		}
	}
	public System.Double UpgradeStone
	{
		get
		{
			return _UpgradeStone[Index];
		}
		set
		{
			_UpgradeStone[Index] = value;
		}
	}
	public System.Single UpgradeStonePercent
	{
		get
		{
			return _UpgradeStonePercent[Index];
		}
		set
		{
			_UpgradeStonePercent[Index] = value;
		}
	}
	public Enum_ItemGrade EquipmentGrade
	{
		get
		{
			return (Enum_ItemGrade) _EquipmentGrade[Index];
		}
		set
		{
			_EquipmentGrade[Index] = value;
		}
	}
	public System.Single EquipmentPercent
	{
		get
		{
			return _EquipmentPercent[Index];
		}
		set
		{
			_EquipmentPercent[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Int32> SpawnMonsterIndex
	{
		get
		{
			return _SpawnMonsterIndex[Index];
		}
		set
		{
			_SpawnMonsterIndex[Index] = value;
		}
	}
	public System.Int32 WaveCount
	{
		get
		{
			return _WaveCount[Index];
		}
		set
		{
			_WaveCount[Index] = value;
		}
	}
	public System.Int32 WaveMonsterCount
	{
		get
		{
			return _WaveMonsterCount[Index];
		}
		set
		{
			_WaveMonsterCount[Index] = value;
		}
	}
	public System.Int32 BossMonsterIndex
	{
		get
		{
			return _BossMonsterIndex[Index];
		}
		set
		{
			_BossMonsterIndex[Index] = value;
		}
	}
	public System.Double DamageFactor
	{
		get
		{
			return _DamageFactor[Index];
		}
		set
		{
			_DamageFactor[Index] = value;
		}
	}
	public System.Double HealthFactor
	{
		get
		{
			return _HealthFactor[Index];
		}
		set
		{
			_HealthFactor[Index] = value;
		}
	}
	public System.Int32 TimeLimit
	{
		get
		{
			return _TimeLimit[Index];
		}
		set
		{
			_TimeLimit[Index] = value;
		}
	}
	public System.Double GoldPerMin
	{
		get
		{
			return _GoldPerMin[Index];
		}
		set
		{
			_GoldPerMin[Index] = value;
		}
	}
	public System.Double ExpPerMin
	{
		get
		{
			return _ExpPerMin[Index];
		}
		set
		{
			_ExpPerMin[Index] = value;
		}
	}
	public System.Double UpgradeStonePerMin
	{
		get
		{
			return _UpgradeStonePerMin[Index];
		}
		set
		{
			_UpgradeStonePerMin[Index] = value;
		}
	}
	public System.Single EquipmentPerMin
	{
		get
		{
			return _EquipmentPerMin[Index];
		}
		set
		{
			_EquipmentPerMin[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5236251687265047463,9839833962020969650));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_World;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _World
	{
		get
		{
			if(_ufle12jhs77_World==null || _ufle12jhs77_World.IsDeleted) _ufle12jhs77_World=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5359943381496188476,12217541644007625604));
			return _ufle12jhs77_World;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_Gold;
	public static BansheeGz.BGDatabase.BGFieldDouble _Gold
	{
		get
		{
			if(_ufle12jhs77_Gold==null || _ufle12jhs77_Gold.IsDeleted) _ufle12jhs77_Gold=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(4627324144901885202,1807303266273905319));
			return _ufle12jhs77_Gold;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_Exp;
	public static BansheeGz.BGDatabase.BGFieldDouble _Exp
	{
		get
		{
			if(_ufle12jhs77_Exp==null || _ufle12jhs77_Exp.IsDeleted) _ufle12jhs77_Exp=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5354621688105760522,11499840955039698339));
			return _ufle12jhs77_Exp;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_UpgradeStone;
	public static BansheeGz.BGDatabase.BGFieldDouble _UpgradeStone
	{
		get
		{
			if(_ufle12jhs77_UpgradeStone==null || _ufle12jhs77_UpgradeStone.IsDeleted) _ufle12jhs77_UpgradeStone=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5249804496167233825,11866551112273693096));
			return _ufle12jhs77_UpgradeStone;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_UpgradeStonePercent;
	public static BansheeGz.BGDatabase.BGFieldFloat _UpgradeStonePercent
	{
		get
		{
			if(_ufle12jhs77_UpgradeStonePercent==null || _ufle12jhs77_UpgradeStonePercent.IsDeleted) _ufle12jhs77_UpgradeStonePercent=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4648007001227616488,17389314393272073615));
			return _ufle12jhs77_UpgradeStonePercent;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_EquipmentGrade;
	public static BansheeGz.BGDatabase.BGFieldEnum _EquipmentGrade
	{
		get
		{
			if(_ufle12jhs77_EquipmentGrade==null || _ufle12jhs77_EquipmentGrade.IsDeleted) _ufle12jhs77_EquipmentGrade=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4686561043438326488,17755573055315339937));
			return _ufle12jhs77_EquipmentGrade;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_EquipmentPercent;
	public static BansheeGz.BGDatabase.BGFieldFloat _EquipmentPercent
	{
		get
		{
			if(_ufle12jhs77_EquipmentPercent==null || _ufle12jhs77_EquipmentPercent.IsDeleted) _ufle12jhs77_EquipmentPercent=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5200635584483349751,1928036262900666760));
			return _ufle12jhs77_EquipmentPercent;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListInt _ufle12jhs77_SpawnMonsterIndex;
	public static BansheeGz.BGDatabase.BGFieldListInt _SpawnMonsterIndex
	{
		get
		{
			if(_ufle12jhs77_SpawnMonsterIndex==null || _ufle12jhs77_SpawnMonsterIndex.IsDeleted) _ufle12jhs77_SpawnMonsterIndex=(BansheeGz.BGDatabase.BGFieldListInt) MetaDefault.GetField(new BGId(4829560955646706915,11279330404324735376));
			return _ufle12jhs77_SpawnMonsterIndex;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_WaveCount;
	public static BansheeGz.BGDatabase.BGFieldInt _WaveCount
	{
		get
		{
			if(_ufle12jhs77_WaveCount==null || _ufle12jhs77_WaveCount.IsDeleted) _ufle12jhs77_WaveCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5232583097111968721,6483633823619703997));
			return _ufle12jhs77_WaveCount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_WaveMonsterCount;
	public static BansheeGz.BGDatabase.BGFieldInt _WaveMonsterCount
	{
		get
		{
			if(_ufle12jhs77_WaveMonsterCount==null || _ufle12jhs77_WaveMonsterCount.IsDeleted) _ufle12jhs77_WaveMonsterCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4942606861127646616,9786766765494276770));
			return _ufle12jhs77_WaveMonsterCount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_BossMonsterIndex;
	public static BansheeGz.BGDatabase.BGFieldInt _BossMonsterIndex
	{
		get
		{
			if(_ufle12jhs77_BossMonsterIndex==null || _ufle12jhs77_BossMonsterIndex.IsDeleted) _ufle12jhs77_BossMonsterIndex=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5375973729067027856,12723702344979004589));
			return _ufle12jhs77_BossMonsterIndex;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_DamageFactor;
	public static BansheeGz.BGDatabase.BGFieldDouble _DamageFactor
	{
		get
		{
			if(_ufle12jhs77_DamageFactor==null || _ufle12jhs77_DamageFactor.IsDeleted) _ufle12jhs77_DamageFactor=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5573850466594207621,15786846272209116297));
			return _ufle12jhs77_DamageFactor;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_HealthFactor;
	public static BansheeGz.BGDatabase.BGFieldDouble _HealthFactor
	{
		get
		{
			if(_ufle12jhs77_HealthFactor==null || _ufle12jhs77_HealthFactor.IsDeleted) _ufle12jhs77_HealthFactor=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5431072430801840616,9761465646848933786));
			return _ufle12jhs77_HealthFactor;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_TimeLimit;
	public static BansheeGz.BGDatabase.BGFieldInt _TimeLimit
	{
		get
		{
			if(_ufle12jhs77_TimeLimit==null || _ufle12jhs77_TimeLimit.IsDeleted) _ufle12jhs77_TimeLimit=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5002216049008151573,17352007991509666947));
			return _ufle12jhs77_TimeLimit;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_GoldPerMin;
	public static BansheeGz.BGDatabase.BGFieldDouble _GoldPerMin
	{
		get
		{
			if(_ufle12jhs77_GoldPerMin==null || _ufle12jhs77_GoldPerMin.IsDeleted) _ufle12jhs77_GoldPerMin=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5097779047666979211,2438958459962780044));
			return _ufle12jhs77_GoldPerMin;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_ExpPerMin;
	public static BansheeGz.BGDatabase.BGFieldDouble _ExpPerMin
	{
		get
		{
			if(_ufle12jhs77_ExpPerMin==null || _ufle12jhs77_ExpPerMin.IsDeleted) _ufle12jhs77_ExpPerMin=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5361097767256940910,5334999133586946471));
			return _ufle12jhs77_ExpPerMin;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_UpgradeStonePerMin;
	public static BansheeGz.BGDatabase.BGFieldDouble _UpgradeStonePerMin
	{
		get
		{
			if(_ufle12jhs77_UpgradeStonePerMin==null || _ufle12jhs77_UpgradeStonePerMin.IsDeleted) _ufle12jhs77_UpgradeStonePerMin=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(4982131201298780407,17855554612185053611));
			return _ufle12jhs77_UpgradeStonePerMin;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_EquipmentPerMin;
	public static BansheeGz.BGDatabase.BGFieldFloat _EquipmentPerMin
	{
		get
		{
			if(_ufle12jhs77_EquipmentPerMin==null || _ufle12jhs77_EquipmentPerMin.IsDeleted) _ufle12jhs77_EquipmentPerMin=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4626443621318263635,2054240231137870216));
			return _ufle12jhs77_EquipmentPerMin;
		}
	}
	private static readonly TBL_PLAYER.Factory _factory0_PFS = new TBL_PLAYER.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_UPGRADE_GOLD.Factory _factory3_PFS = new TBL_UPGRADE_GOLD.Factory();
	private static readonly TBL_QUEST.Factory _factory4_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory5_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory6_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory7_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory8_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON_SMITH.Factory _factory9_PFS = new TBL_DUNGEON_SMITH.Factory();
	private static readonly TBL_SHOP.Factory _factory10_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory11_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON_TREASURE.Factory _factory12_PFS = new TBL_DUNGEON_TREASURE.Factory();
	private static readonly TBL_DUNGEON_BOSS.Factory _factory13_PFS = new TBL_DUNGEON_BOSS.Factory();
	private static readonly TBL_PACKAGE.Factory _factory14_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_GACHA_EQUIPMENT.Factory _factory15_PFS = new TBL_GACHA_EQUIPMENT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory16_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory17_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_UPGRADE_STAT.Factory _factory18_PFS = new TBL_UPGRADE_STAT.Factory();
	private static readonly TBL_STAGE.Factory _factory19_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_EQUIPMENT.Factory _factory20_PFS = new TBL_EQUIPMENT.Factory();
	private static readonly TBL_PROMOTION.Factory _factory21_PFS = new TBL_PROMOTION.Factory();
	private static readonly TBL_ADVENTURE_STORY.Factory _factory22_PFS = new TBL_ADVENTURE_STORY.Factory();
	private static readonly TBL_ADVENTURE_DUNGEON.Factory _factory23_PFS = new TBL_ADVENTURE_DUNGEON.Factory();
	private static readonly TBL_UPGRADE_DICE.Factory _factory24_PFS = new TBL_UPGRADE_DICE.Factory();
	private static readonly TBL_GACHA_DICE.Factory _factory25_PFS = new TBL_GACHA_DICE.Factory();
	private static readonly TBL_FOLLOWER.Factory _factory26_PFS = new TBL_FOLLOWER.Factory();
	private TBL_STAGE() : base(MetaDefault)
	{
	}
	private TBL_STAGE(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_STAGE(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_STAGE(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_STAGE FindEntity(Predicate<TBL_STAGE> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_STAGE) entity)) as TBL_STAGE;
	}
	public static List<TBL_STAGE> FindEntities(Predicate<TBL_STAGE> filter, List<TBL_STAGE> result=null, Comparison<TBL_STAGE> sort=null)
	{
		result = result ?? new List<TBL_STAGE>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_STAGE) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_STAGE) e1, (TBL_STAGE) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_STAGE) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_STAGE> action, Predicate<TBL_STAGE> filter=null, Comparison<TBL_STAGE> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_STAGE) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_STAGE) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_STAGE)e1,(TBL_STAGE)e2));
	}
	public static TBL_STAGE GetEntity(BGId entityId)
	{
		return (TBL_STAGE) MetaDefault.GetEntity(entityId);
	}
	public static TBL_STAGE GetEntity(int index)
	{
		return (TBL_STAGE) MetaDefault[index];
	}
	public static TBL_STAGE GetEntity(string entityName)
	{
		return (TBL_STAGE) MetaDefault.GetEntity(entityName);
	}
	public static TBL_STAGE NewEntity()
	{
		return (TBL_STAGE) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_EQUIPMENT : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_EQUIPMENT(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_EQUIPMENT(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5503619266100119419,14210541203472817577));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public Enum_EquipmentType Type
	{
		get
		{
			return (Enum_EquipmentType) _Type[Index];
		}
		set
		{
			_Type[Index] = value;
		}
	}
	public Enum_ItemGrade Grade
	{
		get
		{
			return (Enum_ItemGrade) _Grade[Index];
		}
		set
		{
			_Grade[Index] = value;
		}
	}
	public System.Int32 Star
	{
		get
		{
			return _Star[Index];
		}
		set
		{
			_Star[Index] = value;
		}
	}
	public Enum_StatType OnEquipStat
	{
		get
		{
			return (Enum_StatType) _OnEquipStat[Index];
		}
		set
		{
			_OnEquipStat[Index] = value;
		}
	}
	public System.Double OnEquipVaue
	{
		get
		{
			return _OnEquipVaue[Index];
		}
		set
		{
			_OnEquipVaue[Index] = value;
		}
	}
	public System.Double OnEquipIncreaseValue
	{
		get
		{
			return _OnEquipIncreaseValue[Index];
		}
		set
		{
			_OnEquipIncreaseValue[Index] = value;
		}
	}
	public Enum_StatType OnOwnStat1
	{
		get
		{
			return (Enum_StatType) _OnOwnStat1[Index];
		}
		set
		{
			_OnOwnStat1[Index] = value;
		}
	}
	public System.Double OnOwnValue1
	{
		get
		{
			return _OnOwnValue1[Index];
		}
		set
		{
			_OnOwnValue1[Index] = value;
		}
	}
	public System.Double OnOwnIncreaseValue1
	{
		get
		{
			return _OnOwnIncreaseValue1[Index];
		}
		set
		{
			_OnOwnIncreaseValue1[Index] = value;
		}
	}
	public Enum_StatType OnOwnStat2
	{
		get
		{
			return (Enum_StatType) _OnOwnStat2[Index];
		}
		set
		{
			_OnOwnStat2[Index] = value;
		}
	}
	public System.Double OnOwnValue2
	{
		get
		{
			return _OnOwnValue2[Index];
		}
		set
		{
			_OnOwnValue2[Index] = value;
		}
	}
	public System.Double OnOwnIncreaseValue2
	{
		get
		{
			return _OnOwnIncreaseValue2[Index];
		}
		set
		{
			_OnOwnIncreaseValue2[Index] = value;
		}
	}
	public Enum_StatType OnOwnStat3
	{
		get
		{
			return (Enum_StatType) _OnOwnStat3[Index];
		}
		set
		{
			_OnOwnStat3[Index] = value;
		}
	}
	public System.Double OnOwnValue3
	{
		get
		{
			return _OnOwnValue3[Index];
		}
		set
		{
			_OnOwnValue3[Index] = value;
		}
	}
	public System.Double OnOwnIncreaseValue3
	{
		get
		{
			return _OnOwnIncreaseValue3[Index];
		}
		set
		{
			_OnOwnIncreaseValue3[Index] = value;
		}
	}
	public System.Double LevelUpCost
	{
		get
		{
			return _LevelUpCost[Index];
		}
		set
		{
			_LevelUpCost[Index] = value;
		}
	}
	public System.Double LevelUpIncreaseCost
	{
		get
		{
			return _LevelUpIncreaseCost[Index];
		}
		set
		{
			_LevelUpIncreaseCost[Index] = value;
		}
	}
	public System.Int32 GradeUpCost
	{
		get
		{
			return _GradeUpCost[Index];
		}
		set
		{
			_GradeUpCost[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5318919178782681130,17939189502019215009));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_Type;
	public static BansheeGz.BGDatabase.BGFieldEnum _Type
	{
		get
		{
			if(_ufle12jhs77_Type==null || _ufle12jhs77_Type.IsDeleted) _ufle12jhs77_Type=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5573597742283740910,7423634118472090240));
			return _ufle12jhs77_Type;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_Grade;
	public static BansheeGz.BGDatabase.BGFieldEnum _Grade
	{
		get
		{
			if(_ufle12jhs77_Grade==null || _ufle12jhs77_Grade.IsDeleted) _ufle12jhs77_Grade=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5283025677503901124,7628086820983732123));
			return _ufle12jhs77_Grade;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Star;
	public static BansheeGz.BGDatabase.BGFieldInt _Star
	{
		get
		{
			if(_ufle12jhs77_Star==null || _ufle12jhs77_Star.IsDeleted) _ufle12jhs77_Star=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4914380929650985648,5666527850102712490));
			return _ufle12jhs77_Star;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_OnEquipStat;
	public static BansheeGz.BGDatabase.BGFieldEnum _OnEquipStat
	{
		get
		{
			if(_ufle12jhs77_OnEquipStat==null || _ufle12jhs77_OnEquipStat.IsDeleted) _ufle12jhs77_OnEquipStat=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4764867407262528431,6092461796405838761));
			return _ufle12jhs77_OnEquipStat;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_OnEquipVaue;
	public static BansheeGz.BGDatabase.BGFieldDouble _OnEquipVaue
	{
		get
		{
			if(_ufle12jhs77_OnEquipVaue==null || _ufle12jhs77_OnEquipVaue.IsDeleted) _ufle12jhs77_OnEquipVaue=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(4767823752052383697,7657299790487143821));
			return _ufle12jhs77_OnEquipVaue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_OnEquipIncreaseValue;
	public static BansheeGz.BGDatabase.BGFieldDouble _OnEquipIncreaseValue
	{
		get
		{
			if(_ufle12jhs77_OnEquipIncreaseValue==null || _ufle12jhs77_OnEquipIncreaseValue.IsDeleted) _ufle12jhs77_OnEquipIncreaseValue=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5370216102287277305,7603025701466642058));
			return _ufle12jhs77_OnEquipIncreaseValue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_OnOwnStat1;
	public static BansheeGz.BGDatabase.BGFieldEnum _OnOwnStat1
	{
		get
		{
			if(_ufle12jhs77_OnOwnStat1==null || _ufle12jhs77_OnOwnStat1.IsDeleted) _ufle12jhs77_OnOwnStat1=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5577125777170968119,1534456911984407991));
			return _ufle12jhs77_OnOwnStat1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_OnOwnValue1;
	public static BansheeGz.BGDatabase.BGFieldDouble _OnOwnValue1
	{
		get
		{
			if(_ufle12jhs77_OnOwnValue1==null || _ufle12jhs77_OnOwnValue1.IsDeleted) _ufle12jhs77_OnOwnValue1=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5305095625080272493,14680406056079064196));
			return _ufle12jhs77_OnOwnValue1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_OnOwnIncreaseValue1;
	public static BansheeGz.BGDatabase.BGFieldDouble _OnOwnIncreaseValue1
	{
		get
		{
			if(_ufle12jhs77_OnOwnIncreaseValue1==null || _ufle12jhs77_OnOwnIncreaseValue1.IsDeleted) _ufle12jhs77_OnOwnIncreaseValue1=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5679895688097719840,16584972145910071447));
			return _ufle12jhs77_OnOwnIncreaseValue1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_OnOwnStat2;
	public static BansheeGz.BGDatabase.BGFieldEnum _OnOwnStat2
	{
		get
		{
			if(_ufle12jhs77_OnOwnStat2==null || _ufle12jhs77_OnOwnStat2.IsDeleted) _ufle12jhs77_OnOwnStat2=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5468922630988184266,222037482695356041));
			return _ufle12jhs77_OnOwnStat2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_OnOwnValue2;
	public static BansheeGz.BGDatabase.BGFieldDouble _OnOwnValue2
	{
		get
		{
			if(_ufle12jhs77_OnOwnValue2==null || _ufle12jhs77_OnOwnValue2.IsDeleted) _ufle12jhs77_OnOwnValue2=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5518624943495989509,16191149990418602644));
			return _ufle12jhs77_OnOwnValue2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_OnOwnIncreaseValue2;
	public static BansheeGz.BGDatabase.BGFieldDouble _OnOwnIncreaseValue2
	{
		get
		{
			if(_ufle12jhs77_OnOwnIncreaseValue2==null || _ufle12jhs77_OnOwnIncreaseValue2.IsDeleted) _ufle12jhs77_OnOwnIncreaseValue2=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5193073186221444969,1627856029846835091));
			return _ufle12jhs77_OnOwnIncreaseValue2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_OnOwnStat3;
	public static BansheeGz.BGDatabase.BGFieldEnum _OnOwnStat3
	{
		get
		{
			if(_ufle12jhs77_OnOwnStat3==null || _ufle12jhs77_OnOwnStat3.IsDeleted) _ufle12jhs77_OnOwnStat3=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5338064719780595944,5249427810412038800));
			return _ufle12jhs77_OnOwnStat3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_OnOwnValue3;
	public static BansheeGz.BGDatabase.BGFieldDouble _OnOwnValue3
	{
		get
		{
			if(_ufle12jhs77_OnOwnValue3==null || _ufle12jhs77_OnOwnValue3.IsDeleted) _ufle12jhs77_OnOwnValue3=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5537239482162224481,3442142695647196545));
			return _ufle12jhs77_OnOwnValue3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_OnOwnIncreaseValue3;
	public static BansheeGz.BGDatabase.BGFieldDouble _OnOwnIncreaseValue3
	{
		get
		{
			if(_ufle12jhs77_OnOwnIncreaseValue3==null || _ufle12jhs77_OnOwnIncreaseValue3.IsDeleted) _ufle12jhs77_OnOwnIncreaseValue3=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(4849273358813394977,5399297790511353012));
			return _ufle12jhs77_OnOwnIncreaseValue3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_LevelUpCost;
	public static BansheeGz.BGDatabase.BGFieldDouble _LevelUpCost
	{
		get
		{
			if(_ufle12jhs77_LevelUpCost==null || _ufle12jhs77_LevelUpCost.IsDeleted) _ufle12jhs77_LevelUpCost=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(4901021592194391783,9110530882584551599));
			return _ufle12jhs77_LevelUpCost;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_LevelUpIncreaseCost;
	public static BansheeGz.BGDatabase.BGFieldDouble _LevelUpIncreaseCost
	{
		get
		{
			if(_ufle12jhs77_LevelUpIncreaseCost==null || _ufle12jhs77_LevelUpIncreaseCost.IsDeleted) _ufle12jhs77_LevelUpIncreaseCost=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(4747970502529935450,6592807490160239520));
			return _ufle12jhs77_LevelUpIncreaseCost;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_GradeUpCost;
	public static BansheeGz.BGDatabase.BGFieldInt _GradeUpCost
	{
		get
		{
			if(_ufle12jhs77_GradeUpCost==null || _ufle12jhs77_GradeUpCost.IsDeleted) _ufle12jhs77_GradeUpCost=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4889434931629632764,17015473480085182377));
			return _ufle12jhs77_GradeUpCost;
		}
	}
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_WithEquipmentType;
	public static BansheeGz.BGDatabase.BGKey _WithEquipmentType
	{
		get
		{
			if(_edeht3sdad33_WithEquipmentType==null || _edeht3sdad33_WithEquipmentType.IsDeleted) _edeht3sdad33_WithEquipmentType= MetaDefault.GetKey(new BGId(5364889277404312053,9389192471627006096));
			return _edeht3sdad33_WithEquipmentType;
		}
	}
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_WithGrade;
	public static BansheeGz.BGDatabase.BGKey _WithGrade
	{
		get
		{
			if(_edeht3sdad33_WithGrade==null || _edeht3sdad33_WithGrade.IsDeleted) _edeht3sdad33_WithGrade= MetaDefault.GetKey(new BGId(5473118586204359070,3964928243982586758));
			return _edeht3sdad33_WithGrade;
		}
	}
	private static readonly TBL_PLAYER.Factory _factory0_PFS = new TBL_PLAYER.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_UPGRADE_GOLD.Factory _factory3_PFS = new TBL_UPGRADE_GOLD.Factory();
	private static readonly TBL_QUEST.Factory _factory4_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory5_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory6_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory7_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory8_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON_SMITH.Factory _factory9_PFS = new TBL_DUNGEON_SMITH.Factory();
	private static readonly TBL_SHOP.Factory _factory10_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory11_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON_TREASURE.Factory _factory12_PFS = new TBL_DUNGEON_TREASURE.Factory();
	private static readonly TBL_DUNGEON_BOSS.Factory _factory13_PFS = new TBL_DUNGEON_BOSS.Factory();
	private static readonly TBL_PACKAGE.Factory _factory14_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_GACHA_EQUIPMENT.Factory _factory15_PFS = new TBL_GACHA_EQUIPMENT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory16_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory17_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_UPGRADE_STAT.Factory _factory18_PFS = new TBL_UPGRADE_STAT.Factory();
	private static readonly TBL_STAGE.Factory _factory19_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_EQUIPMENT.Factory _factory20_PFS = new TBL_EQUIPMENT.Factory();
	private static readonly TBL_PROMOTION.Factory _factory21_PFS = new TBL_PROMOTION.Factory();
	private static readonly TBL_ADVENTURE_STORY.Factory _factory22_PFS = new TBL_ADVENTURE_STORY.Factory();
	private static readonly TBL_ADVENTURE_DUNGEON.Factory _factory23_PFS = new TBL_ADVENTURE_DUNGEON.Factory();
	private static readonly TBL_UPGRADE_DICE.Factory _factory24_PFS = new TBL_UPGRADE_DICE.Factory();
	private static readonly TBL_GACHA_DICE.Factory _factory25_PFS = new TBL_GACHA_DICE.Factory();
	private static readonly TBL_FOLLOWER.Factory _factory26_PFS = new TBL_FOLLOWER.Factory();
	private TBL_EQUIPMENT() : base(MetaDefault)
	{
	}
	private TBL_EQUIPMENT(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_EQUIPMENT(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_EQUIPMENT(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_EQUIPMENT FindEntity(Predicate<TBL_EQUIPMENT> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_EQUIPMENT) entity)) as TBL_EQUIPMENT;
	}
	public static List<TBL_EQUIPMENT> FindEntities(Predicate<TBL_EQUIPMENT> filter, List<TBL_EQUIPMENT> result=null, Comparison<TBL_EQUIPMENT> sort=null)
	{
		result = result ?? new List<TBL_EQUIPMENT>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_EQUIPMENT) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_EQUIPMENT) e1, (TBL_EQUIPMENT) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_EQUIPMENT) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_EQUIPMENT> action, Predicate<TBL_EQUIPMENT> filter=null, Comparison<TBL_EQUIPMENT> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_EQUIPMENT) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_EQUIPMENT) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_EQUIPMENT)e1,(TBL_EQUIPMENT)e2));
	}
	public static TBL_EQUIPMENT GetEntity(BGId entityId)
	{
		return (TBL_EQUIPMENT) MetaDefault.GetEntity(entityId);
	}
	public static TBL_EQUIPMENT GetEntity(int index)
	{
		return (TBL_EQUIPMENT) MetaDefault[index];
	}
	public static TBL_EQUIPMENT GetEntity(string entityName)
	{
		return (TBL_EQUIPMENT) MetaDefault.GetEntity(entityName);
	}
	public static TBL_EQUIPMENT NewEntity()
	{
		return (TBL_EQUIPMENT) MetaDefault.NewEntity();
	}
	public static TBL_EQUIPMENT GetEntityByKeyWithEquipmentType(Enum_EquipmentType Type)
	{
		return (TBL_EQUIPMENT) _WithEquipmentType.GetEntityByKey(Type);
	}
	public static List<TBL_EQUIPMENT> GetEntitiesByKeyWithEquipmentType(Enum_EquipmentType Type)
	{
		var result = _WithEquipmentType.GetEntitiesByKey(Type);
		if(result==null || result.Count==0) return null;
		var list = new List<TBL_EQUIPMENT>(result.Count);
		for(var i = 0 ; i < result.Count ; i++) list.Add((TBL_EQUIPMENT) result[i]);
		return list;
	}
	public static TBL_EQUIPMENT GetEntityByKeyWithGrade(Enum_ItemGrade Grade)
	{
		return (TBL_EQUIPMENT) _WithGrade.GetEntityByKey(Grade);
	}
	public static List<TBL_EQUIPMENT> GetEntitiesByKeyWithGrade(Enum_ItemGrade Grade)
	{
		var result = _WithGrade.GetEntitiesByKey(Grade);
		if(result==null || result.Count==0) return null;
		var list = new List<TBL_EQUIPMENT>(result.Count);
		for(var i = 0 ; i < result.Count ; i++) list.Add((TBL_EQUIPMENT) result[i]);
		return list;
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_PROMOTION : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_PROMOTION(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_PROMOTION(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5492001818164133091,15978488315987960728));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Int32 DamageMultipleValue
	{
		get
		{
			return _DamageMultipleValue[Index];
		}
		set
		{
			_DamageMultipleValue[Index] = value;
		}
	}
	public System.Int32 HealthMultipleValue
	{
		get
		{
			return _HealthMultipleValue[Index];
		}
		set
		{
			_HealthMultipleValue[Index] = value;
		}
	}
	public System.Int32 WaveCount
	{
		get
		{
			return _WaveCount[Index];
		}
		set
		{
			_WaveCount[Index] = value;
		}
	}
	public System.Int32 WaveMonsterCount
	{
		get
		{
			return _WaveMonsterCount[Index];
		}
		set
		{
			_WaveMonsterCount[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Int32> SpawnMonsterList
	{
		get
		{
			return _SpawnMonsterList[Index];
		}
		set
		{
			_SpawnMonsterList[Index] = value;
		}
	}
	public System.Int32 BossMonsterIndex
	{
		get
		{
			return _BossMonsterIndex[Index];
		}
		set
		{
			_BossMonsterIndex[Index] = value;
		}
	}
	public System.Double DamageFactor
	{
		get
		{
			return _DamageFactor[Index];
		}
		set
		{
			_DamageFactor[Index] = value;
		}
	}
	public System.Double HealthFactor
	{
		get
		{
			return _HealthFactor[Index];
		}
		set
		{
			_HealthFactor[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5556977845794528820,14860314468654064008));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_DamageMultipleValue;
	public static BansheeGz.BGDatabase.BGFieldInt _DamageMultipleValue
	{
		get
		{
			if(_ufle12jhs77_DamageMultipleValue==null || _ufle12jhs77_DamageMultipleValue.IsDeleted) _ufle12jhs77_DamageMultipleValue=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5705971547281280478,14809453121578009259));
			return _ufle12jhs77_DamageMultipleValue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_HealthMultipleValue;
	public static BansheeGz.BGDatabase.BGFieldInt _HealthMultipleValue
	{
		get
		{
			if(_ufle12jhs77_HealthMultipleValue==null || _ufle12jhs77_HealthMultipleValue.IsDeleted) _ufle12jhs77_HealthMultipleValue=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5385318865452270870,4640476111946306222));
			return _ufle12jhs77_HealthMultipleValue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_WaveCount;
	public static BansheeGz.BGDatabase.BGFieldInt _WaveCount
	{
		get
		{
			if(_ufle12jhs77_WaveCount==null || _ufle12jhs77_WaveCount.IsDeleted) _ufle12jhs77_WaveCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5653429251725394390,1158994688237812359));
			return _ufle12jhs77_WaveCount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_WaveMonsterCount;
	public static BansheeGz.BGDatabase.BGFieldInt _WaveMonsterCount
	{
		get
		{
			if(_ufle12jhs77_WaveMonsterCount==null || _ufle12jhs77_WaveMonsterCount.IsDeleted) _ufle12jhs77_WaveMonsterCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4794500239819621241,13677342125763023805));
			return _ufle12jhs77_WaveMonsterCount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListInt _ufle12jhs77_SpawnMonsterList;
	public static BansheeGz.BGDatabase.BGFieldListInt _SpawnMonsterList
	{
		get
		{
			if(_ufle12jhs77_SpawnMonsterList==null || _ufle12jhs77_SpawnMonsterList.IsDeleted) _ufle12jhs77_SpawnMonsterList=(BansheeGz.BGDatabase.BGFieldListInt) MetaDefault.GetField(new BGId(4662450962850318150,7195454453218197920));
			return _ufle12jhs77_SpawnMonsterList;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_BossMonsterIndex;
	public static BansheeGz.BGDatabase.BGFieldInt _BossMonsterIndex
	{
		get
		{
			if(_ufle12jhs77_BossMonsterIndex==null || _ufle12jhs77_BossMonsterIndex.IsDeleted) _ufle12jhs77_BossMonsterIndex=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4962647202598901174,13670219082601215896));
			return _ufle12jhs77_BossMonsterIndex;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_DamageFactor;
	public static BansheeGz.BGDatabase.BGFieldDouble _DamageFactor
	{
		get
		{
			if(_ufle12jhs77_DamageFactor==null || _ufle12jhs77_DamageFactor.IsDeleted) _ufle12jhs77_DamageFactor=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5579686111314552141,14216610440799319445));
			return _ufle12jhs77_DamageFactor;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_HealthFactor;
	public static BansheeGz.BGDatabase.BGFieldDouble _HealthFactor
	{
		get
		{
			if(_ufle12jhs77_HealthFactor==null || _ufle12jhs77_HealthFactor.IsDeleted) _ufle12jhs77_HealthFactor=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5041050536236599066,9745991155384457871));
			return _ufle12jhs77_HealthFactor;
		}
	}
	private static readonly TBL_PLAYER.Factory _factory0_PFS = new TBL_PLAYER.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_UPGRADE_GOLD.Factory _factory3_PFS = new TBL_UPGRADE_GOLD.Factory();
	private static readonly TBL_QUEST.Factory _factory4_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory5_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory6_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory7_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory8_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON_SMITH.Factory _factory9_PFS = new TBL_DUNGEON_SMITH.Factory();
	private static readonly TBL_SHOP.Factory _factory10_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory11_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON_TREASURE.Factory _factory12_PFS = new TBL_DUNGEON_TREASURE.Factory();
	private static readonly TBL_DUNGEON_BOSS.Factory _factory13_PFS = new TBL_DUNGEON_BOSS.Factory();
	private static readonly TBL_PACKAGE.Factory _factory14_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_GACHA_EQUIPMENT.Factory _factory15_PFS = new TBL_GACHA_EQUIPMENT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory16_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory17_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_UPGRADE_STAT.Factory _factory18_PFS = new TBL_UPGRADE_STAT.Factory();
	private static readonly TBL_STAGE.Factory _factory19_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_EQUIPMENT.Factory _factory20_PFS = new TBL_EQUIPMENT.Factory();
	private static readonly TBL_PROMOTION.Factory _factory21_PFS = new TBL_PROMOTION.Factory();
	private static readonly TBL_ADVENTURE_STORY.Factory _factory22_PFS = new TBL_ADVENTURE_STORY.Factory();
	private static readonly TBL_ADVENTURE_DUNGEON.Factory _factory23_PFS = new TBL_ADVENTURE_DUNGEON.Factory();
	private static readonly TBL_UPGRADE_DICE.Factory _factory24_PFS = new TBL_UPGRADE_DICE.Factory();
	private static readonly TBL_GACHA_DICE.Factory _factory25_PFS = new TBL_GACHA_DICE.Factory();
	private static readonly TBL_FOLLOWER.Factory _factory26_PFS = new TBL_FOLLOWER.Factory();
	private TBL_PROMOTION() : base(MetaDefault)
	{
	}
	private TBL_PROMOTION(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_PROMOTION(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_PROMOTION(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_PROMOTION FindEntity(Predicate<TBL_PROMOTION> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_PROMOTION) entity)) as TBL_PROMOTION;
	}
	public static List<TBL_PROMOTION> FindEntities(Predicate<TBL_PROMOTION> filter, List<TBL_PROMOTION> result=null, Comparison<TBL_PROMOTION> sort=null)
	{
		result = result ?? new List<TBL_PROMOTION>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_PROMOTION) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_PROMOTION) e1, (TBL_PROMOTION) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_PROMOTION) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_PROMOTION> action, Predicate<TBL_PROMOTION> filter=null, Comparison<TBL_PROMOTION> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_PROMOTION) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_PROMOTION) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_PROMOTION)e1,(TBL_PROMOTION)e2));
	}
	public static TBL_PROMOTION GetEntity(BGId entityId)
	{
		return (TBL_PROMOTION) MetaDefault.GetEntity(entityId);
	}
	public static TBL_PROMOTION GetEntity(int index)
	{
		return (TBL_PROMOTION) MetaDefault[index];
	}
	public static TBL_PROMOTION GetEntity(string entityName)
	{
		return (TBL_PROMOTION) MetaDefault.GetEntity(entityName);
	}
	public static TBL_PROMOTION NewEntity()
	{
		return (TBL_PROMOTION) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_ADVENTURE_STORY : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_ADVENTURE_STORY(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_ADVENTURE_STORY(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4777230616417936239,9644286468627415715));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4644783170743009007,18171847272277160853));
			return _ufle12jhs77_name;
		}
	}
	private static readonly TBL_PLAYER.Factory _factory0_PFS = new TBL_PLAYER.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_UPGRADE_GOLD.Factory _factory3_PFS = new TBL_UPGRADE_GOLD.Factory();
	private static readonly TBL_QUEST.Factory _factory4_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory5_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory6_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory7_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory8_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON_SMITH.Factory _factory9_PFS = new TBL_DUNGEON_SMITH.Factory();
	private static readonly TBL_SHOP.Factory _factory10_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory11_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON_TREASURE.Factory _factory12_PFS = new TBL_DUNGEON_TREASURE.Factory();
	private static readonly TBL_DUNGEON_BOSS.Factory _factory13_PFS = new TBL_DUNGEON_BOSS.Factory();
	private static readonly TBL_PACKAGE.Factory _factory14_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_GACHA_EQUIPMENT.Factory _factory15_PFS = new TBL_GACHA_EQUIPMENT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory16_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory17_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_UPGRADE_STAT.Factory _factory18_PFS = new TBL_UPGRADE_STAT.Factory();
	private static readonly TBL_STAGE.Factory _factory19_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_EQUIPMENT.Factory _factory20_PFS = new TBL_EQUIPMENT.Factory();
	private static readonly TBL_PROMOTION.Factory _factory21_PFS = new TBL_PROMOTION.Factory();
	private static readonly TBL_ADVENTURE_STORY.Factory _factory22_PFS = new TBL_ADVENTURE_STORY.Factory();
	private static readonly TBL_ADVENTURE_DUNGEON.Factory _factory23_PFS = new TBL_ADVENTURE_DUNGEON.Factory();
	private static readonly TBL_UPGRADE_DICE.Factory _factory24_PFS = new TBL_UPGRADE_DICE.Factory();
	private static readonly TBL_GACHA_DICE.Factory _factory25_PFS = new TBL_GACHA_DICE.Factory();
	private static readonly TBL_FOLLOWER.Factory _factory26_PFS = new TBL_FOLLOWER.Factory();
	private TBL_ADVENTURE_STORY() : base(MetaDefault)
	{
	}
	private TBL_ADVENTURE_STORY(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_ADVENTURE_STORY(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_ADVENTURE_STORY(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_ADVENTURE_STORY FindEntity(Predicate<TBL_ADVENTURE_STORY> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_ADVENTURE_STORY) entity)) as TBL_ADVENTURE_STORY;
	}
	public static List<TBL_ADVENTURE_STORY> FindEntities(Predicate<TBL_ADVENTURE_STORY> filter, List<TBL_ADVENTURE_STORY> result=null, Comparison<TBL_ADVENTURE_STORY> sort=null)
	{
		result = result ?? new List<TBL_ADVENTURE_STORY>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_ADVENTURE_STORY) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_ADVENTURE_STORY) e1, (TBL_ADVENTURE_STORY) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_ADVENTURE_STORY) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_ADVENTURE_STORY> action, Predicate<TBL_ADVENTURE_STORY> filter=null, Comparison<TBL_ADVENTURE_STORY> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_ADVENTURE_STORY) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_ADVENTURE_STORY) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_ADVENTURE_STORY)e1,(TBL_ADVENTURE_STORY)e2));
	}
	public static TBL_ADVENTURE_STORY GetEntity(BGId entityId)
	{
		return (TBL_ADVENTURE_STORY) MetaDefault.GetEntity(entityId);
	}
	public static TBL_ADVENTURE_STORY GetEntity(int index)
	{
		return (TBL_ADVENTURE_STORY) MetaDefault[index];
	}
	public static TBL_ADVENTURE_STORY GetEntity(string entityName)
	{
		return (TBL_ADVENTURE_STORY) MetaDefault.GetEntity(entityName);
	}
	public static TBL_ADVENTURE_STORY NewEntity()
	{
		return (TBL_ADVENTURE_STORY) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_ADVENTURE_DUNGEON : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_ADVENTURE_DUNGEON(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_ADVENTURE_DUNGEON(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4808672886824025184,8223618370727548828));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5264223847762225345,1362398021662076582));
			return _ufle12jhs77_name;
		}
	}
	private static readonly TBL_PLAYER.Factory _factory0_PFS = new TBL_PLAYER.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_UPGRADE_GOLD.Factory _factory3_PFS = new TBL_UPGRADE_GOLD.Factory();
	private static readonly TBL_QUEST.Factory _factory4_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory5_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory6_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory7_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory8_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON_SMITH.Factory _factory9_PFS = new TBL_DUNGEON_SMITH.Factory();
	private static readonly TBL_SHOP.Factory _factory10_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory11_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON_TREASURE.Factory _factory12_PFS = new TBL_DUNGEON_TREASURE.Factory();
	private static readonly TBL_DUNGEON_BOSS.Factory _factory13_PFS = new TBL_DUNGEON_BOSS.Factory();
	private static readonly TBL_PACKAGE.Factory _factory14_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_GACHA_EQUIPMENT.Factory _factory15_PFS = new TBL_GACHA_EQUIPMENT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory16_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory17_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_UPGRADE_STAT.Factory _factory18_PFS = new TBL_UPGRADE_STAT.Factory();
	private static readonly TBL_STAGE.Factory _factory19_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_EQUIPMENT.Factory _factory20_PFS = new TBL_EQUIPMENT.Factory();
	private static readonly TBL_PROMOTION.Factory _factory21_PFS = new TBL_PROMOTION.Factory();
	private static readonly TBL_ADVENTURE_STORY.Factory _factory22_PFS = new TBL_ADVENTURE_STORY.Factory();
	private static readonly TBL_ADVENTURE_DUNGEON.Factory _factory23_PFS = new TBL_ADVENTURE_DUNGEON.Factory();
	private static readonly TBL_UPGRADE_DICE.Factory _factory24_PFS = new TBL_UPGRADE_DICE.Factory();
	private static readonly TBL_GACHA_DICE.Factory _factory25_PFS = new TBL_GACHA_DICE.Factory();
	private static readonly TBL_FOLLOWER.Factory _factory26_PFS = new TBL_FOLLOWER.Factory();
	private TBL_ADVENTURE_DUNGEON() : base(MetaDefault)
	{
	}
	private TBL_ADVENTURE_DUNGEON(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_ADVENTURE_DUNGEON(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_ADVENTURE_DUNGEON(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_ADVENTURE_DUNGEON FindEntity(Predicate<TBL_ADVENTURE_DUNGEON> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_ADVENTURE_DUNGEON) entity)) as TBL_ADVENTURE_DUNGEON;
	}
	public static List<TBL_ADVENTURE_DUNGEON> FindEntities(Predicate<TBL_ADVENTURE_DUNGEON> filter, List<TBL_ADVENTURE_DUNGEON> result=null, Comparison<TBL_ADVENTURE_DUNGEON> sort=null)
	{
		result = result ?? new List<TBL_ADVENTURE_DUNGEON>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_ADVENTURE_DUNGEON) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_ADVENTURE_DUNGEON) e1, (TBL_ADVENTURE_DUNGEON) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_ADVENTURE_DUNGEON) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_ADVENTURE_DUNGEON> action, Predicate<TBL_ADVENTURE_DUNGEON> filter=null, Comparison<TBL_ADVENTURE_DUNGEON> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_ADVENTURE_DUNGEON) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_ADVENTURE_DUNGEON) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_ADVENTURE_DUNGEON)e1,(TBL_ADVENTURE_DUNGEON)e2));
	}
	public static TBL_ADVENTURE_DUNGEON GetEntity(BGId entityId)
	{
		return (TBL_ADVENTURE_DUNGEON) MetaDefault.GetEntity(entityId);
	}
	public static TBL_ADVENTURE_DUNGEON GetEntity(int index)
	{
		return (TBL_ADVENTURE_DUNGEON) MetaDefault[index];
	}
	public static TBL_ADVENTURE_DUNGEON GetEntity(string entityName)
	{
		return (TBL_ADVENTURE_DUNGEON) MetaDefault.GetEntity(entityName);
	}
	public static TBL_ADVENTURE_DUNGEON NewEntity()
	{
		return (TBL_ADVENTURE_DUNGEON) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_UPGRADE_DICE : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_UPGRADE_DICE(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_UPGRADE_DICE(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5567629931731308783,13152922127840147629));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public Enum_StatType StatType
	{
		get
		{
			return (Enum_StatType) _StatType[Index];
		}
		set
		{
			_StatType[Index] = value;
		}
	}
	public Enum_ItemGrade Grade
	{
		get
		{
			return (Enum_ItemGrade) _Grade[Index];
		}
		set
		{
			_Grade[Index] = value;
		}
	}
	public System.Int32 MinStatValue
	{
		get
		{
			return _MinStatValue[Index];
		}
		set
		{
			_MinStatValue[Index] = value;
		}
	}
	public System.Int32 MaxStatValue
	{
		get
		{
			return _MaxStatValue[Index];
		}
		set
		{
			_MaxStatValue[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5179471436880468435,9534331634562207400));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_StatType;
	public static BansheeGz.BGDatabase.BGFieldEnum _StatType
	{
		get
		{
			if(_ufle12jhs77_StatType==null || _ufle12jhs77_StatType.IsDeleted) _ufle12jhs77_StatType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5000056497468739253,7974578326847686327));
			return _ufle12jhs77_StatType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_Grade;
	public static BansheeGz.BGDatabase.BGFieldEnum _Grade
	{
		get
		{
			if(_ufle12jhs77_Grade==null || _ufle12jhs77_Grade.IsDeleted) _ufle12jhs77_Grade=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5453546972243504368,4962889018031337136));
			return _ufle12jhs77_Grade;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_MinStatValue;
	public static BansheeGz.BGDatabase.BGFieldInt _MinStatValue
	{
		get
		{
			if(_ufle12jhs77_MinStatValue==null || _ufle12jhs77_MinStatValue.IsDeleted) _ufle12jhs77_MinStatValue=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5012779988894657388,10552796460022981304));
			return _ufle12jhs77_MinStatValue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_MaxStatValue;
	public static BansheeGz.BGDatabase.BGFieldInt _MaxStatValue
	{
		get
		{
			if(_ufle12jhs77_MaxStatValue==null || _ufle12jhs77_MaxStatValue.IsDeleted) _ufle12jhs77_MaxStatValue=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5617597742370598199,5301221434564293006));
			return _ufle12jhs77_MaxStatValue;
		}
	}
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_WithGrade;
	public static BansheeGz.BGDatabase.BGKey _WithGrade
	{
		get
		{
			if(_edeht3sdad33_WithGrade==null || _edeht3sdad33_WithGrade.IsDeleted) _edeht3sdad33_WithGrade= MetaDefault.GetKey(new BGId(4809827149552339412,5730563799363054768));
			return _edeht3sdad33_WithGrade;
		}
	}
	private static readonly TBL_PLAYER.Factory _factory0_PFS = new TBL_PLAYER.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_UPGRADE_GOLD.Factory _factory3_PFS = new TBL_UPGRADE_GOLD.Factory();
	private static readonly TBL_QUEST.Factory _factory4_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory5_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory6_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory7_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory8_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON_SMITH.Factory _factory9_PFS = new TBL_DUNGEON_SMITH.Factory();
	private static readonly TBL_SHOP.Factory _factory10_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory11_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON_TREASURE.Factory _factory12_PFS = new TBL_DUNGEON_TREASURE.Factory();
	private static readonly TBL_DUNGEON_BOSS.Factory _factory13_PFS = new TBL_DUNGEON_BOSS.Factory();
	private static readonly TBL_PACKAGE.Factory _factory14_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_GACHA_EQUIPMENT.Factory _factory15_PFS = new TBL_GACHA_EQUIPMENT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory16_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory17_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_UPGRADE_STAT.Factory _factory18_PFS = new TBL_UPGRADE_STAT.Factory();
	private static readonly TBL_STAGE.Factory _factory19_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_EQUIPMENT.Factory _factory20_PFS = new TBL_EQUIPMENT.Factory();
	private static readonly TBL_PROMOTION.Factory _factory21_PFS = new TBL_PROMOTION.Factory();
	private static readonly TBL_ADVENTURE_STORY.Factory _factory22_PFS = new TBL_ADVENTURE_STORY.Factory();
	private static readonly TBL_ADVENTURE_DUNGEON.Factory _factory23_PFS = new TBL_ADVENTURE_DUNGEON.Factory();
	private static readonly TBL_UPGRADE_DICE.Factory _factory24_PFS = new TBL_UPGRADE_DICE.Factory();
	private static readonly TBL_GACHA_DICE.Factory _factory25_PFS = new TBL_GACHA_DICE.Factory();
	private static readonly TBL_FOLLOWER.Factory _factory26_PFS = new TBL_FOLLOWER.Factory();
	private TBL_UPGRADE_DICE() : base(MetaDefault)
	{
	}
	private TBL_UPGRADE_DICE(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_UPGRADE_DICE(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_UPGRADE_DICE(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_UPGRADE_DICE FindEntity(Predicate<TBL_UPGRADE_DICE> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_UPGRADE_DICE) entity)) as TBL_UPGRADE_DICE;
	}
	public static List<TBL_UPGRADE_DICE> FindEntities(Predicate<TBL_UPGRADE_DICE> filter, List<TBL_UPGRADE_DICE> result=null, Comparison<TBL_UPGRADE_DICE> sort=null)
	{
		result = result ?? new List<TBL_UPGRADE_DICE>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_UPGRADE_DICE) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_UPGRADE_DICE) e1, (TBL_UPGRADE_DICE) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_UPGRADE_DICE) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_UPGRADE_DICE> action, Predicate<TBL_UPGRADE_DICE> filter=null, Comparison<TBL_UPGRADE_DICE> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_UPGRADE_DICE) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_UPGRADE_DICE) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_UPGRADE_DICE)e1,(TBL_UPGRADE_DICE)e2));
	}
	public static TBL_UPGRADE_DICE GetEntity(BGId entityId)
	{
		return (TBL_UPGRADE_DICE) MetaDefault.GetEntity(entityId);
	}
	public static TBL_UPGRADE_DICE GetEntity(int index)
	{
		return (TBL_UPGRADE_DICE) MetaDefault[index];
	}
	public static TBL_UPGRADE_DICE GetEntity(string entityName)
	{
		return (TBL_UPGRADE_DICE) MetaDefault.GetEntity(entityName);
	}
	public static TBL_UPGRADE_DICE NewEntity()
	{
		return (TBL_UPGRADE_DICE) MetaDefault.NewEntity();
	}
	public static TBL_UPGRADE_DICE GetEntityByKeyWithGrade(Enum_ItemGrade Grade)
	{
		return (TBL_UPGRADE_DICE) _WithGrade.GetEntityByKey(Grade);
	}
	public static List<TBL_UPGRADE_DICE> GetEntitiesByKeyWithGrade(Enum_ItemGrade Grade)
	{
		var result = _WithGrade.GetEntitiesByKey(Grade);
		if(result==null || result.Count==0) return null;
		var list = new List<TBL_UPGRADE_DICE>(result.Count);
		for(var i = 0 ; i < result.Count ; i++) list.Add((TBL_UPGRADE_DICE) result[i]);
		return list;
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_GACHA_DICE : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_GACHA_DICE(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_GACHA_DICE(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4625655996399418803,10766706424478526380));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Single> Percents
	{
		get
		{
			return _Percents[Index];
		}
		set
		{
			_Percents[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4812413152811295296,12743503886725792896));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListFloat _ufle12jhs77_Percents;
	public static BansheeGz.BGDatabase.BGFieldListFloat _Percents
	{
		get
		{
			if(_ufle12jhs77_Percents==null || _ufle12jhs77_Percents.IsDeleted) _ufle12jhs77_Percents=(BansheeGz.BGDatabase.BGFieldListFloat) MetaDefault.GetField(new BGId(5212075709591128731,3264546341540262796));
			return _ufle12jhs77_Percents;
		}
	}
	private static readonly TBL_PLAYER.Factory _factory0_PFS = new TBL_PLAYER.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_UPGRADE_GOLD.Factory _factory3_PFS = new TBL_UPGRADE_GOLD.Factory();
	private static readonly TBL_QUEST.Factory _factory4_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory5_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory6_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory7_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory8_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON_SMITH.Factory _factory9_PFS = new TBL_DUNGEON_SMITH.Factory();
	private static readonly TBL_SHOP.Factory _factory10_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory11_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON_TREASURE.Factory _factory12_PFS = new TBL_DUNGEON_TREASURE.Factory();
	private static readonly TBL_DUNGEON_BOSS.Factory _factory13_PFS = new TBL_DUNGEON_BOSS.Factory();
	private static readonly TBL_PACKAGE.Factory _factory14_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_GACHA_EQUIPMENT.Factory _factory15_PFS = new TBL_GACHA_EQUIPMENT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory16_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory17_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_UPGRADE_STAT.Factory _factory18_PFS = new TBL_UPGRADE_STAT.Factory();
	private static readonly TBL_STAGE.Factory _factory19_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_EQUIPMENT.Factory _factory20_PFS = new TBL_EQUIPMENT.Factory();
	private static readonly TBL_PROMOTION.Factory _factory21_PFS = new TBL_PROMOTION.Factory();
	private static readonly TBL_ADVENTURE_STORY.Factory _factory22_PFS = new TBL_ADVENTURE_STORY.Factory();
	private static readonly TBL_ADVENTURE_DUNGEON.Factory _factory23_PFS = new TBL_ADVENTURE_DUNGEON.Factory();
	private static readonly TBL_UPGRADE_DICE.Factory _factory24_PFS = new TBL_UPGRADE_DICE.Factory();
	private static readonly TBL_GACHA_DICE.Factory _factory25_PFS = new TBL_GACHA_DICE.Factory();
	private static readonly TBL_FOLLOWER.Factory _factory26_PFS = new TBL_FOLLOWER.Factory();
	private TBL_GACHA_DICE() : base(MetaDefault)
	{
	}
	private TBL_GACHA_DICE(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_GACHA_DICE(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_GACHA_DICE(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_GACHA_DICE FindEntity(Predicate<TBL_GACHA_DICE> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_GACHA_DICE) entity)) as TBL_GACHA_DICE;
	}
	public static List<TBL_GACHA_DICE> FindEntities(Predicate<TBL_GACHA_DICE> filter, List<TBL_GACHA_DICE> result=null, Comparison<TBL_GACHA_DICE> sort=null)
	{
		result = result ?? new List<TBL_GACHA_DICE>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_GACHA_DICE) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_GACHA_DICE) e1, (TBL_GACHA_DICE) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_GACHA_DICE) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_GACHA_DICE> action, Predicate<TBL_GACHA_DICE> filter=null, Comparison<TBL_GACHA_DICE> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_GACHA_DICE) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_GACHA_DICE) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_GACHA_DICE)e1,(TBL_GACHA_DICE)e2));
	}
	public static TBL_GACHA_DICE GetEntity(BGId entityId)
	{
		return (TBL_GACHA_DICE) MetaDefault.GetEntity(entityId);
	}
	public static TBL_GACHA_DICE GetEntity(int index)
	{
		return (TBL_GACHA_DICE) MetaDefault[index];
	}
	public static TBL_GACHA_DICE GetEntity(string entityName)
	{
		return (TBL_GACHA_DICE) MetaDefault.GetEntity(entityName);
	}
	public static TBL_GACHA_DICE NewEntity()
	{
		return (TBL_GACHA_DICE) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_FOLLOWER : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_FOLLOWER(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_FOLLOWER(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5739802795002551254,15336632449239820969));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public Enum_StatType StatType1
	{
		get
		{
			return (Enum_StatType) _StatType1[Index];
		}
		set
		{
			_StatType1[Index] = value;
		}
	}
	public Enum_StatType StatType2
	{
		get
		{
			return (Enum_StatType) _StatType2[Index];
		}
		set
		{
			_StatType2[Index] = value;
		}
	}
	public System.Single DefaultValue1
	{
		get
		{
			return _DefaultValue1[Index];
		}
		set
		{
			_DefaultValue1[Index] = value;
		}
	}
	public System.Single IncreaseValue1
	{
		get
		{
			return _IncreaseValue1[Index];
		}
		set
		{
			_IncreaseValue1[Index] = value;
		}
	}
	public System.Single DefaultValue2
	{
		get
		{
			return _DefaultValue2[Index];
		}
		set
		{
			_DefaultValue2[Index] = value;
		}
	}
	public System.Single IncreaseValue2
	{
		get
		{
			return _IncreaseValue2[Index];
		}
		set
		{
			_IncreaseValue2[Index] = value;
		}
	}
	public System.Int32 UnlockCost
	{
		get
		{
			return _UnlockCost[Index];
		}
		set
		{
			_UnlockCost[Index] = value;
		}
	}
	public System.Int32 LevelUpCost
	{
		get
		{
			return _LevelUpCost[Index];
		}
		set
		{
			_LevelUpCost[Index] = value;
		}
	}
	public System.Int32 IncreaseCost
	{
		get
		{
			return _IncreaseCost[Index];
		}
		set
		{
			_IncreaseCost[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5529599203170839279,10035000373854139803));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_StatType1;
	public static BansheeGz.BGDatabase.BGFieldEnum _StatType1
	{
		get
		{
			if(_ufle12jhs77_StatType1==null || _ufle12jhs77_StatType1.IsDeleted) _ufle12jhs77_StatType1=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5009618979781562682,12471929940131621032));
			return _ufle12jhs77_StatType1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_StatType2;
	public static BansheeGz.BGDatabase.BGFieldEnum _StatType2
	{
		get
		{
			if(_ufle12jhs77_StatType2==null || _ufle12jhs77_StatType2.IsDeleted) _ufle12jhs77_StatType2=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5181603590686418786,2772115380083690940));
			return _ufle12jhs77_StatType2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_DefaultValue1;
	public static BansheeGz.BGDatabase.BGFieldFloat _DefaultValue1
	{
		get
		{
			if(_ufle12jhs77_DefaultValue1==null || _ufle12jhs77_DefaultValue1.IsDeleted) _ufle12jhs77_DefaultValue1=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5576920025736042458,877993310943262092));
			return _ufle12jhs77_DefaultValue1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_IncreaseValue1;
	public static BansheeGz.BGDatabase.BGFieldFloat _IncreaseValue1
	{
		get
		{
			if(_ufle12jhs77_IncreaseValue1==null || _ufle12jhs77_IncreaseValue1.IsDeleted) _ufle12jhs77_IncreaseValue1=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4922708847567285404,11987613991982202016));
			return _ufle12jhs77_IncreaseValue1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_DefaultValue2;
	public static BansheeGz.BGDatabase.BGFieldFloat _DefaultValue2
	{
		get
		{
			if(_ufle12jhs77_DefaultValue2==null || _ufle12jhs77_DefaultValue2.IsDeleted) _ufle12jhs77_DefaultValue2=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5195903698003874404,2738312226927158699));
			return _ufle12jhs77_DefaultValue2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_IncreaseValue2;
	public static BansheeGz.BGDatabase.BGFieldFloat _IncreaseValue2
	{
		get
		{
			if(_ufle12jhs77_IncreaseValue2==null || _ufle12jhs77_IncreaseValue2.IsDeleted) _ufle12jhs77_IncreaseValue2=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4660892890956176353,17172456152014522241));
			return _ufle12jhs77_IncreaseValue2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_UnlockCost;
	public static BansheeGz.BGDatabase.BGFieldInt _UnlockCost
	{
		get
		{
			if(_ufle12jhs77_UnlockCost==null || _ufle12jhs77_UnlockCost.IsDeleted) _ufle12jhs77_UnlockCost=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5383443272728571792,7038169937640073386));
			return _ufle12jhs77_UnlockCost;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_LevelUpCost;
	public static BansheeGz.BGDatabase.BGFieldInt _LevelUpCost
	{
		get
		{
			if(_ufle12jhs77_LevelUpCost==null || _ufle12jhs77_LevelUpCost.IsDeleted) _ufle12jhs77_LevelUpCost=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5014556992395753225,13510371108466157217));
			return _ufle12jhs77_LevelUpCost;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_IncreaseCost;
	public static BansheeGz.BGDatabase.BGFieldInt _IncreaseCost
	{
		get
		{
			if(_ufle12jhs77_IncreaseCost==null || _ufle12jhs77_IncreaseCost.IsDeleted) _ufle12jhs77_IncreaseCost=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5319212891126310037,9167754078085057417));
			return _ufle12jhs77_IncreaseCost;
		}
	}
	private static readonly TBL_PLAYER.Factory _factory0_PFS = new TBL_PLAYER.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_UPGRADE_GOLD.Factory _factory3_PFS = new TBL_UPGRADE_GOLD.Factory();
	private static readonly TBL_QUEST.Factory _factory4_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory5_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory6_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory7_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory8_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON_SMITH.Factory _factory9_PFS = new TBL_DUNGEON_SMITH.Factory();
	private static readonly TBL_SHOP.Factory _factory10_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory11_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON_TREASURE.Factory _factory12_PFS = new TBL_DUNGEON_TREASURE.Factory();
	private static readonly TBL_DUNGEON_BOSS.Factory _factory13_PFS = new TBL_DUNGEON_BOSS.Factory();
	private static readonly TBL_PACKAGE.Factory _factory14_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_GACHA_EQUIPMENT.Factory _factory15_PFS = new TBL_GACHA_EQUIPMENT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory16_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory17_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_UPGRADE_STAT.Factory _factory18_PFS = new TBL_UPGRADE_STAT.Factory();
	private static readonly TBL_STAGE.Factory _factory19_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_EQUIPMENT.Factory _factory20_PFS = new TBL_EQUIPMENT.Factory();
	private static readonly TBL_PROMOTION.Factory _factory21_PFS = new TBL_PROMOTION.Factory();
	private static readonly TBL_ADVENTURE_STORY.Factory _factory22_PFS = new TBL_ADVENTURE_STORY.Factory();
	private static readonly TBL_ADVENTURE_DUNGEON.Factory _factory23_PFS = new TBL_ADVENTURE_DUNGEON.Factory();
	private static readonly TBL_UPGRADE_DICE.Factory _factory24_PFS = new TBL_UPGRADE_DICE.Factory();
	private static readonly TBL_GACHA_DICE.Factory _factory25_PFS = new TBL_GACHA_DICE.Factory();
	private static readonly TBL_FOLLOWER.Factory _factory26_PFS = new TBL_FOLLOWER.Factory();
	private TBL_FOLLOWER() : base(MetaDefault)
	{
	}
	private TBL_FOLLOWER(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_FOLLOWER(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_FOLLOWER(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_FOLLOWER FindEntity(Predicate<TBL_FOLLOWER> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_FOLLOWER) entity)) as TBL_FOLLOWER;
	}
	public static List<TBL_FOLLOWER> FindEntities(Predicate<TBL_FOLLOWER> filter, List<TBL_FOLLOWER> result=null, Comparison<TBL_FOLLOWER> sort=null)
	{
		result = result ?? new List<TBL_FOLLOWER>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_FOLLOWER) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_FOLLOWER) e1, (TBL_FOLLOWER) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_FOLLOWER) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_FOLLOWER> action, Predicate<TBL_FOLLOWER> filter=null, Comparison<TBL_FOLLOWER> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_FOLLOWER) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_FOLLOWER) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_FOLLOWER)e1,(TBL_FOLLOWER)e2));
	}
	public static TBL_FOLLOWER GetEntity(BGId entityId)
	{
		return (TBL_FOLLOWER) MetaDefault.GetEntity(entityId);
	}
	public static TBL_FOLLOWER GetEntity(int index)
	{
		return (TBL_FOLLOWER) MetaDefault[index];
	}
	public static TBL_FOLLOWER GetEntity(string entityName)
	{
		return (TBL_FOLLOWER) MetaDefault.GetEntity(entityName);
	}
	public static TBL_FOLLOWER NewEntity()
	{
		return (TBL_FOLLOWER) MetaDefault.NewEntity();
	}
}
#pragma warning restore 414
