using System;
using System.Collections.Generic;
using BansheeGz.BGDatabase;
using Alias_rifegrt_TBL_MONSTER_GROUP = TBL_MONSTER_GROUP;
using Alias_rifegrt_TBL_DUNGEON1_MONSTER_GROUP = TBL_DUNGEON1_MONSTER_GROUP;
using Alias_rifegrt_TBL_DUNGEON2_MONSTER_GROUP = TBL_DUNGEON2_MONSTER_GROUP;
using Alias_rifegrt_TBL_DUNGEON3_MONSTER_GROUP = TBL_DUNGEON3_MONSTER_GROUP;
using Alias_rifegrt_TBL_DUNGEON4_MONSTER_GROUP = TBL_DUNGEON4_MONSTER_GROUP;
using Alias_rifegrt_TBL_KING_CLASS_MONSTER_GROUP = TBL_KING_CLASS_MONSTER_GROUP;
using Alias_rifegrt_TBL_BOSS_RAID = TBL_BOSS_RAID;
using Alias_rifegrt_TBL_STAGE = TBL_STAGE;
using Alias_rifegrt_TBL_DUNGEON1 = TBL_DUNGEON1;
using Alias_rifegrt_TBL_DUNGEON2 = TBL_DUNGEON2;
using Alias_rifegrt_TBL_DUNGEON3 = TBL_DUNGEON3;
using Alias_rifegrt_TBL_DUNGEON4 = TBL_DUNGEON4;
using Alias_rifegrt_TBL_SKILL = TBL_SKILL;
using Alias_rifegrt_TBL_SHADOW = TBL_SHADOW;
using Alias_rifegrt_TBL_SHADOW_TREE = TBL_SHADOW_TREE;
using Alias_rifegrt_TBL_KING_CLASS = TBL_KING_CLASS;
using Alias_rifegrt_TBL_BATTLEPASS_REWARD = TBL_BATTLEPASS_REWARD;

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

#pragma warning disable 414

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_KING : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_KING(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_KING(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5687599138968587972,5934615542796559276));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Single CriticalChance
	{
		get
		{
			return _CriticalChance[Index];
		}
		set
		{
			_CriticalChance[Index] = value;
		}
	}
	public System.Int32 CriticalDamage
	{
		get
		{
			return _CriticalDamage[Index];
		}
		set
		{
			_CriticalDamage[Index] = value;
		}
	}
	public System.Int32 HealthRecovery
	{
		get
		{
			return _HealthRecovery[Index];
		}
		set
		{
			_HealthRecovery[Index] = value;
		}
	}
	public System.Single HealthRecovertyTick
	{
		get
		{
			return _HealthRecovertyTick[Index];
		}
		set
		{
			_HealthRecovertyTick[Index] = value;
		}
	}
	public System.Int32 MoveSpeed
	{
		get
		{
			return _MoveSpeed[Index];
		}
		set
		{
			_MoveSpeed[Index] = value;
		}
	}
	public System.Int32 AttackSpeed
	{
		get
		{
			return _AttackSpeed[Index];
		}
		set
		{
			_AttackSpeed[Index] = value;
		}
	}
	public System.Single AttackRange
	{
		get
		{
			return _AttackRange[Index];
		}
		set
		{
			_AttackRange[Index] = value;
		}
	}
	public System.Single AttackSplash
	{
		get
		{
			return _AttackSplash[Index];
		}
		set
		{
			_AttackSplash[Index] = value;
		}
	}
	public System.Single FeverSpeed
	{
		get
		{
			return _FeverSpeed[Index];
		}
		set
		{
			_FeverSpeed[Index] = value;
		}
	}
	public System.Int32 ShadowCount
	{
		get
		{
			return _ShadowCount[Index];
		}
		set
		{
			_ShadowCount[Index] = value;
		}
	}
	public System.Int32 LeaderShip
	{
		get
		{
			return _LeaderShip[Index];
		}
		set
		{
			_LeaderShip[Index] = value;
		}
	}
	public System.Int32 PhysicalDefense
	{
		get
		{
			return _PhysicalDefense[Index];
		}
		set
		{
			_PhysicalDefense[Index] = value;
		}
	}
	public System.Int32 MagicDefense
	{
		get
		{
			return _MagicDefense[Index];
		}
		set
		{
			_MagicDefense[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5371492806534021437,3361034538867852967));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_CriticalChance;
	public static BansheeGz.BGDatabase.BGFieldFloat _CriticalChance
	{
		get
		{
			if(_ufle12jhs77_CriticalChance==null || _ufle12jhs77_CriticalChance.IsDeleted) _ufle12jhs77_CriticalChance=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5330188731577634705,11109001397181607857));
			return _ufle12jhs77_CriticalChance;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_CriticalDamage;
	public static BansheeGz.BGDatabase.BGFieldInt _CriticalDamage
	{
		get
		{
			if(_ufle12jhs77_CriticalDamage==null || _ufle12jhs77_CriticalDamage.IsDeleted) _ufle12jhs77_CriticalDamage=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5071755787833115079,5847642273983166083));
			return _ufle12jhs77_CriticalDamage;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_HealthRecovery;
	public static BansheeGz.BGDatabase.BGFieldInt _HealthRecovery
	{
		get
		{
			if(_ufle12jhs77_HealthRecovery==null || _ufle12jhs77_HealthRecovery.IsDeleted) _ufle12jhs77_HealthRecovery=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5306691180955865213,15045389524860623278));
			return _ufle12jhs77_HealthRecovery;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_HealthRecovertyTick;
	public static BansheeGz.BGDatabase.BGFieldFloat _HealthRecovertyTick
	{
		get
		{
			if(_ufle12jhs77_HealthRecovertyTick==null || _ufle12jhs77_HealthRecovertyTick.IsDeleted) _ufle12jhs77_HealthRecovertyTick=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4958374854013893959,8996976309748967083));
			return _ufle12jhs77_HealthRecovertyTick;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_MoveSpeed;
	public static BansheeGz.BGDatabase.BGFieldInt _MoveSpeed
	{
		get
		{
			if(_ufle12jhs77_MoveSpeed==null || _ufle12jhs77_MoveSpeed.IsDeleted) _ufle12jhs77_MoveSpeed=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5041820164129602778,2942712683096411533));
			return _ufle12jhs77_MoveSpeed;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_AttackSpeed;
	public static BansheeGz.BGDatabase.BGFieldInt _AttackSpeed
	{
		get
		{
			if(_ufle12jhs77_AttackSpeed==null || _ufle12jhs77_AttackSpeed.IsDeleted) _ufle12jhs77_AttackSpeed=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5111682583957370910,14939470736889450634));
			return _ufle12jhs77_AttackSpeed;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_AttackRange;
	public static BansheeGz.BGDatabase.BGFieldFloat _AttackRange
	{
		get
		{
			if(_ufle12jhs77_AttackRange==null || _ufle12jhs77_AttackRange.IsDeleted) _ufle12jhs77_AttackRange=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4958698955458918177,10855779121013182630));
			return _ufle12jhs77_AttackRange;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_AttackSplash;
	public static BansheeGz.BGDatabase.BGFieldFloat _AttackSplash
	{
		get
		{
			if(_ufle12jhs77_AttackSplash==null || _ufle12jhs77_AttackSplash.IsDeleted) _ufle12jhs77_AttackSplash=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5663755624796224953,17982207246686430640));
			return _ufle12jhs77_AttackSplash;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_FeverSpeed;
	public static BansheeGz.BGDatabase.BGFieldFloat _FeverSpeed
	{
		get
		{
			if(_ufle12jhs77_FeverSpeed==null || _ufle12jhs77_FeverSpeed.IsDeleted) _ufle12jhs77_FeverSpeed=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4882589694654884868,6631825201546037146));
			return _ufle12jhs77_FeverSpeed;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_ShadowCount;
	public static BansheeGz.BGDatabase.BGFieldInt _ShadowCount
	{
		get
		{
			if(_ufle12jhs77_ShadowCount==null || _ufle12jhs77_ShadowCount.IsDeleted) _ufle12jhs77_ShadowCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5121047252886498496,6408126392947964858));
			return _ufle12jhs77_ShadowCount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_LeaderShip;
	public static BansheeGz.BGDatabase.BGFieldInt _LeaderShip
	{
		get
		{
			if(_ufle12jhs77_LeaderShip==null || _ufle12jhs77_LeaderShip.IsDeleted) _ufle12jhs77_LeaderShip=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5239492018218976561,81377302365684101));
			return _ufle12jhs77_LeaderShip;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_PhysicalDefense;
	public static BansheeGz.BGDatabase.BGFieldInt _PhysicalDefense
	{
		get
		{
			if(_ufle12jhs77_PhysicalDefense==null || _ufle12jhs77_PhysicalDefense.IsDeleted) _ufle12jhs77_PhysicalDefense=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5659188077983269618,1265125024007667083));
			return _ufle12jhs77_PhysicalDefense;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_MagicDefense;
	public static BansheeGz.BGDatabase.BGFieldInt _MagicDefense
	{
		get
		{
			if(_ufle12jhs77_MagicDefense==null || _ufle12jhs77_MagicDefense.IsDeleted) _ufle12jhs77_MagicDefense=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5749966509287294494,1488939081420087684));
			return _ufle12jhs77_MagicDefense;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_KING() : base(MetaDefault)
	{
	}
	private TBL_KING(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_KING(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_KING(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_KING FindEntity(Predicate<TBL_KING> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_KING) entity)) as TBL_KING;
	}
	public static List<TBL_KING> FindEntities(Predicate<TBL_KING> filter, List<TBL_KING> result=null, Comparison<TBL_KING> sort=null)
	{
		result = result ?? new List<TBL_KING>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_KING) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_KING) e1, (TBL_KING) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_KING) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_KING> action, Predicate<TBL_KING> filter=null, Comparison<TBL_KING> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_KING) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_KING) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_KING)e1,(TBL_KING)e2));
	}
	public static TBL_KING GetEntity(BGId entityId)
	{
		return (TBL_KING) MetaDefault.GetEntity(entityId);
	}
	public static TBL_KING GetEntity(int index)
	{
		return (TBL_KING) MetaDefault[index];
	}
	public static TBL_KING GetEntity(string entityName)
	{
		return (TBL_KING) MetaDefault.GetEntity(entityName);
	}
	public static TBL_KING NewEntity()
	{
		return (TBL_KING) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_MONSTER : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_MONSTER(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_MONSTER(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5421531314203514036,6388724777876390810));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public TribeType TribeType
	{
		get
		{
			return (TribeType) _TribeType[Index];
		}
		set
		{
			_TribeType[Index] = value;
		}
	}
	public JobType JobType
	{
		get
		{
			return (JobType) _JobType[Index];
		}
		set
		{
			_JobType[Index] = value;
		}
	}
	public TargetDetectType TargetDetectType
	{
		get
		{
			return (TargetDetectType) _TargetDetectType[Index];
		}
		set
		{
			_TargetDetectType[Index] = value;
		}
	}
	public AttackType AttackType
	{
		get
		{
			return (AttackType) _AttackType[Index];
		}
		set
		{
			_AttackType[Index] = value;
		}
	}
	public System.Int32 Damage
	{
		get
		{
			return _Damage[Index];
		}
		set
		{
			_Damage[Index] = value;
		}
	}
	public System.Int32 IncreaseDamage
	{
		get
		{
			return _IncreaseDamage[Index];
		}
		set
		{
			_IncreaseDamage[Index] = value;
		}
	}
	public System.Int32 Health
	{
		get
		{
			return _Health[Index];
		}
		set
		{
			_Health[Index] = value;
		}
	}
	public System.Int32 IncreaseHealth
	{
		get
		{
			return _IncreaseHealth[Index];
		}
		set
		{
			_IncreaseHealth[Index] = value;
		}
	}
	public System.Int32 MoveSpeed
	{
		get
		{
			return _MoveSpeed[Index];
		}
		set
		{
			_MoveSpeed[Index] = value;
		}
	}
	public System.Int32 AttackSpeed
	{
		get
		{
			return _AttackSpeed[Index];
		}
		set
		{
			_AttackSpeed[Index] = value;
		}
	}
	public System.Single AttackRange
	{
		get
		{
			return _AttackRange[Index];
		}
		set
		{
			_AttackRange[Index] = value;
		}
	}
	public System.Single AttackSplash
	{
		get
		{
			return _AttackSplash[Index];
		}
		set
		{
			_AttackSplash[Index] = value;
		}
	}
	public System.Int32 PhyscialDefense
	{
		get
		{
			return _PhyscialDefense[Index];
		}
		set
		{
			_PhyscialDefense[Index] = value;
		}
	}
	public System.Int32 MagicDefense
	{
		get
		{
			return _MagicDefense[Index];
		}
		set
		{
			_MagicDefense[Index] = value;
		}
	}
	public System.Int32 Gold
	{
		get
		{
			return _Gold[Index];
		}
		set
		{
			_Gold[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5418135666132609525,6368504847489294503));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_TribeType;
	public static BansheeGz.BGDatabase.BGFieldEnum _TribeType
	{
		get
		{
			if(_ufle12jhs77_TribeType==null || _ufle12jhs77_TribeType.IsDeleted) _ufle12jhs77_TribeType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5086843128357506285,11860925429286677127));
			return _ufle12jhs77_TribeType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_JobType;
	public static BansheeGz.BGDatabase.BGFieldEnum _JobType
	{
		get
		{
			if(_ufle12jhs77_JobType==null || _ufle12jhs77_JobType.IsDeleted) _ufle12jhs77_JobType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5264495606244297102,11368943299758142895));
			return _ufle12jhs77_JobType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_TargetDetectType;
	public static BansheeGz.BGDatabase.BGFieldEnum _TargetDetectType
	{
		get
		{
			if(_ufle12jhs77_TargetDetectType==null || _ufle12jhs77_TargetDetectType.IsDeleted) _ufle12jhs77_TargetDetectType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5450532517728875891,16842976111622274186));
			return _ufle12jhs77_TargetDetectType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_AttackType;
	public static BansheeGz.BGDatabase.BGFieldEnum _AttackType
	{
		get
		{
			if(_ufle12jhs77_AttackType==null || _ufle12jhs77_AttackType.IsDeleted) _ufle12jhs77_AttackType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5518344795540777843,9295302816252562876));
			return _ufle12jhs77_AttackType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Damage;
	public static BansheeGz.BGDatabase.BGFieldInt _Damage
	{
		get
		{
			if(_ufle12jhs77_Damage==null || _ufle12jhs77_Damage.IsDeleted) _ufle12jhs77_Damage=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5389467934627165617,17068544836651537078));
			return _ufle12jhs77_Damage;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_IncreaseDamage;
	public static BansheeGz.BGDatabase.BGFieldInt _IncreaseDamage
	{
		get
		{
			if(_ufle12jhs77_IncreaseDamage==null || _ufle12jhs77_IncreaseDamage.IsDeleted) _ufle12jhs77_IncreaseDamage=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5594751214168897649,2143134189319776946));
			return _ufle12jhs77_IncreaseDamage;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Health;
	public static BansheeGz.BGDatabase.BGFieldInt _Health
	{
		get
		{
			if(_ufle12jhs77_Health==null || _ufle12jhs77_Health.IsDeleted) _ufle12jhs77_Health=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4835013640429364850,7398375618925701525));
			return _ufle12jhs77_Health;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_IncreaseHealth;
	public static BansheeGz.BGDatabase.BGFieldInt _IncreaseHealth
	{
		get
		{
			if(_ufle12jhs77_IncreaseHealth==null || _ufle12jhs77_IncreaseHealth.IsDeleted) _ufle12jhs77_IncreaseHealth=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4939563936911188006,17321865353349331845));
			return _ufle12jhs77_IncreaseHealth;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_MoveSpeed;
	public static BansheeGz.BGDatabase.BGFieldInt _MoveSpeed
	{
		get
		{
			if(_ufle12jhs77_MoveSpeed==null || _ufle12jhs77_MoveSpeed.IsDeleted) _ufle12jhs77_MoveSpeed=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4730270639856442794,3881578575276639911));
			return _ufle12jhs77_MoveSpeed;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_AttackSpeed;
	public static BansheeGz.BGDatabase.BGFieldInt _AttackSpeed
	{
		get
		{
			if(_ufle12jhs77_AttackSpeed==null || _ufle12jhs77_AttackSpeed.IsDeleted) _ufle12jhs77_AttackSpeed=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5491176334222112427,15174230842387503234));
			return _ufle12jhs77_AttackSpeed;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_AttackRange;
	public static BansheeGz.BGDatabase.BGFieldFloat _AttackRange
	{
		get
		{
			if(_ufle12jhs77_AttackRange==null || _ufle12jhs77_AttackRange.IsDeleted) _ufle12jhs77_AttackRange=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4642849438896022242,5436018002234391733));
			return _ufle12jhs77_AttackRange;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_AttackSplash;
	public static BansheeGz.BGDatabase.BGFieldFloat _AttackSplash
	{
		get
		{
			if(_ufle12jhs77_AttackSplash==null || _ufle12jhs77_AttackSplash.IsDeleted) _ufle12jhs77_AttackSplash=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5221637868593908349,8916157608695613875));
			return _ufle12jhs77_AttackSplash;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_PhyscialDefense;
	public static BansheeGz.BGDatabase.BGFieldInt _PhyscialDefense
	{
		get
		{
			if(_ufle12jhs77_PhyscialDefense==null || _ufle12jhs77_PhyscialDefense.IsDeleted) _ufle12jhs77_PhyscialDefense=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5020297872050108254,13246216737057201578));
			return _ufle12jhs77_PhyscialDefense;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_MagicDefense;
	public static BansheeGz.BGDatabase.BGFieldInt _MagicDefense
	{
		get
		{
			if(_ufle12jhs77_MagicDefense==null || _ufle12jhs77_MagicDefense.IsDeleted) _ufle12jhs77_MagicDefense=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5576726277051074746,10860989879987412405));
			return _ufle12jhs77_MagicDefense;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Gold;
	public static BansheeGz.BGDatabase.BGFieldInt _Gold
	{
		get
		{
			if(_ufle12jhs77_Gold==null || _ufle12jhs77_Gold.IsDeleted) _ufle12jhs77_Gold=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5271085686427749795,6115439495183773588));
			return _ufle12jhs77_Gold;
		}
	}
	private static readonly List<BGEntity> _tugjbyuhfv_reusableList = new List<BGEntity>();
	public List<TBL_MONSTER_GROUP> RelatedTBL_MONSTER_GROUPListUsingMonsterRow1Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_MONSTER_GROUP._MonsterRow1.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_MONSTER_GROUP>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_MONSTER_GROUP) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_MONSTER_GROUP> RelatedTBL_MONSTER_GROUPListUsingMonsterRow2Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_MONSTER_GROUP._MonsterRow2.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_MONSTER_GROUP>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_MONSTER_GROUP) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_MONSTER_GROUP> RelatedTBL_MONSTER_GROUPListUsingMonsterRow3Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_MONSTER_GROUP._MonsterRow3.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_MONSTER_GROUP>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_MONSTER_GROUP) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_MONSTER_GROUP> RelatedTBL_MONSTER_GROUPListUsingMonsterRow4Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_MONSTER_GROUP._MonsterRow4.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_MONSTER_GROUP>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_MONSTER_GROUP) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_MONSTER_GROUP> RelatedTBL_MONSTER_GROUPListUsingMonsterRow5Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_MONSTER_GROUP._MonsterRow5.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_MONSTER_GROUP>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_MONSTER_GROUP) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON1_MONSTER_GROUP> RelatedTBL_DUNGEON1_MONSTER_GROUPListUsingMonsterRow1Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON1_MONSTER_GROUP._MonsterRow1.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON1_MONSTER_GROUP>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON1_MONSTER_GROUP) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON1_MONSTER_GROUP> RelatedTBL_DUNGEON1_MONSTER_GROUPListUsingMonsterRow2Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON1_MONSTER_GROUP._MonsterRow2.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON1_MONSTER_GROUP>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON1_MONSTER_GROUP) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON1_MONSTER_GROUP> RelatedTBL_DUNGEON1_MONSTER_GROUPListUsingMonsterRow3Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON1_MONSTER_GROUP._MonsterRow3.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON1_MONSTER_GROUP>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON1_MONSTER_GROUP) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON1_MONSTER_GROUP> RelatedTBL_DUNGEON1_MONSTER_GROUPListUsingMonsterRow4Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON1_MONSTER_GROUP._MonsterRow4.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON1_MONSTER_GROUP>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON1_MONSTER_GROUP) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON1_MONSTER_GROUP> RelatedTBL_DUNGEON1_MONSTER_GROUPListUsingMonsterRow5Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON1_MONSTER_GROUP._MonsterRow5.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON1_MONSTER_GROUP>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON1_MONSTER_GROUP) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON2_MONSTER_GROUP> RelatedTBL_DUNGEON2_MONSTER_GROUPListUsingMonsterRow1Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON2_MONSTER_GROUP._MonsterRow1.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON2_MONSTER_GROUP>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON2_MONSTER_GROUP) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON2_MONSTER_GROUP> RelatedTBL_DUNGEON2_MONSTER_GROUPListUsingMonsterRow2Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON2_MONSTER_GROUP._MonsterRow2.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON2_MONSTER_GROUP>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON2_MONSTER_GROUP) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON2_MONSTER_GROUP> RelatedTBL_DUNGEON2_MONSTER_GROUPListUsingMonsterRow3Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON2_MONSTER_GROUP._MonsterRow3.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON2_MONSTER_GROUP>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON2_MONSTER_GROUP) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON2_MONSTER_GROUP> RelatedTBL_DUNGEON2_MONSTER_GROUPListUsingMonsterRow4Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON2_MONSTER_GROUP._MonsterRow4.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON2_MONSTER_GROUP>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON2_MONSTER_GROUP) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON2_MONSTER_GROUP> RelatedTBL_DUNGEON2_MONSTER_GROUPListUsingMonsterRow5Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON2_MONSTER_GROUP._MonsterRow5.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON2_MONSTER_GROUP>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON2_MONSTER_GROUP) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON3_MONSTER_GROUP> RelatedTBL_DUNGEON3_MONSTER_GROUPListUsingMonsterRow1Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON3_MONSTER_GROUP._MonsterRow1.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON3_MONSTER_GROUP>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON3_MONSTER_GROUP) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON3_MONSTER_GROUP> RelatedTBL_DUNGEON3_MONSTER_GROUPListUsingMonsterRow2Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON3_MONSTER_GROUP._MonsterRow2.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON3_MONSTER_GROUP>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON3_MONSTER_GROUP) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON3_MONSTER_GROUP> RelatedTBL_DUNGEON3_MONSTER_GROUPListUsingMonsterRow3Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON3_MONSTER_GROUP._MonsterRow3.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON3_MONSTER_GROUP>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON3_MONSTER_GROUP) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON3_MONSTER_GROUP> RelatedTBL_DUNGEON3_MONSTER_GROUPListUsingMonsterRow4Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON3_MONSTER_GROUP._MonsterRow4.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON3_MONSTER_GROUP>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON3_MONSTER_GROUP) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON3_MONSTER_GROUP> RelatedTBL_DUNGEON3_MONSTER_GROUPListUsingMonsterRow5Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON3_MONSTER_GROUP._MonsterRow5.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON3_MONSTER_GROUP>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON3_MONSTER_GROUP) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON4_MONSTER_GROUP> RelatedTBL_DUNGEON4_MONSTER_GROUPListUsingMonsterRow1Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON4_MONSTER_GROUP._MonsterRow1.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON4_MONSTER_GROUP>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON4_MONSTER_GROUP) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON4_MONSTER_GROUP> RelatedTBL_DUNGEON4_MONSTER_GROUPListUsingMonsterRow2Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON4_MONSTER_GROUP._MonsterRow2.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON4_MONSTER_GROUP>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON4_MONSTER_GROUP) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON4_MONSTER_GROUP> RelatedTBL_DUNGEON4_MONSTER_GROUPListUsingMonsterRow3Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON4_MONSTER_GROUP._MonsterRow3.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON4_MONSTER_GROUP>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON4_MONSTER_GROUP) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON4_MONSTER_GROUP> RelatedTBL_DUNGEON4_MONSTER_GROUPListUsingMonsterRow4Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON4_MONSTER_GROUP._MonsterRow4.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON4_MONSTER_GROUP>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON4_MONSTER_GROUP) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON4_MONSTER_GROUP> RelatedTBL_DUNGEON4_MONSTER_GROUPListUsingMonsterRow5Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON4_MONSTER_GROUP._MonsterRow5.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON4_MONSTER_GROUP>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON4_MONSTER_GROUP) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_KING_CLASS_MONSTER_GROUP> RelatedTBL_KING_CLASS_MONSTER_GROUPListUsingMonsterRow1Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_KING_CLASS_MONSTER_GROUP._MonsterRow1.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_KING_CLASS_MONSTER_GROUP>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_KING_CLASS_MONSTER_GROUP) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_KING_CLASS_MONSTER_GROUP> RelatedTBL_KING_CLASS_MONSTER_GROUPListUsingMonsterRow2Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_KING_CLASS_MONSTER_GROUP._MonsterRow2.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_KING_CLASS_MONSTER_GROUP>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_KING_CLASS_MONSTER_GROUP) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_KING_CLASS_MONSTER_GROUP> RelatedTBL_KING_CLASS_MONSTER_GROUPListUsingMonsterRow3Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_KING_CLASS_MONSTER_GROUP._MonsterRow3.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_KING_CLASS_MONSTER_GROUP>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_KING_CLASS_MONSTER_GROUP) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_KING_CLASS_MONSTER_GROUP> RelatedTBL_KING_CLASS_MONSTER_GROUPListUsingMonsterRow4Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_KING_CLASS_MONSTER_GROUP._MonsterRow4.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_KING_CLASS_MONSTER_GROUP>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_KING_CLASS_MONSTER_GROUP) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_KING_CLASS_MONSTER_GROUP> RelatedTBL_KING_CLASS_MONSTER_GROUPListUsingMonsterRow5Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_KING_CLASS_MONSTER_GROUP._MonsterRow5.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_KING_CLASS_MONSTER_GROUP>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_KING_CLASS_MONSTER_GROUP) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_BOSS_RAID> RelatedTBL_BOSS_RAIDListUsingWave1Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_BOSS_RAID._Wave1.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_BOSS_RAID>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_BOSS_RAID) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_BOSS_RAID> RelatedTBL_BOSS_RAIDListUsingWave2Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_BOSS_RAID._Wave2.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_BOSS_RAID>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_BOSS_RAID) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_BOSS_RAID> RelatedTBL_BOSS_RAIDListUsingWave3Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_BOSS_RAID._Wave3.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_BOSS_RAID>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_BOSS_RAID) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_BOSS_RAID> RelatedTBL_BOSS_RAIDListUsingWave4Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_BOSS_RAID._Wave4.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_BOSS_RAID>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_BOSS_RAID) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_BOSS_RAID> RelatedTBL_BOSS_RAIDListUsingWave5Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_BOSS_RAID._Wave5.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_BOSS_RAID>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_BOSS_RAID) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_MONSTER() : base(MetaDefault)
	{
	}
	private TBL_MONSTER(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_MONSTER(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_MONSTER(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_MONSTER FindEntity(Predicate<TBL_MONSTER> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_MONSTER) entity)) as TBL_MONSTER;
	}
	public static List<TBL_MONSTER> FindEntities(Predicate<TBL_MONSTER> filter, List<TBL_MONSTER> result=null, Comparison<TBL_MONSTER> sort=null)
	{
		result = result ?? new List<TBL_MONSTER>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_MONSTER) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_MONSTER) e1, (TBL_MONSTER) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_MONSTER) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_MONSTER> action, Predicate<TBL_MONSTER> filter=null, Comparison<TBL_MONSTER> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_MONSTER) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_MONSTER) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_MONSTER)e1,(TBL_MONSTER)e2));
	}
	public static TBL_MONSTER GetEntity(BGId entityId)
	{
		return (TBL_MONSTER) MetaDefault.GetEntity(entityId);
	}
	public static TBL_MONSTER GetEntity(int index)
	{
		return (TBL_MONSTER) MetaDefault[index];
	}
	public static TBL_MONSTER GetEntity(string entityName)
	{
		return (TBL_MONSTER) MetaDefault.GetEntity(entityName);
	}
	public static TBL_MONSTER NewEntity()
	{
		return (TBL_MONSTER) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_SKILL : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_SKILL(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_SKILL(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4694800490803654166,980251405016328624));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public SkillType SkillType
	{
		get
		{
			return (SkillType) _SkillType[Index];
		}
		set
		{
			_SkillType[Index] = value;
		}
	}
	public TBL_SKILL_GRADE SkillGrade
	{
		get
		{
			return (TBL_SKILL_GRADE) _SkillGrade[Index];
		}
		set
		{
			_SkillGrade[Index] = value;
		}
	}
	public AttackType AttackType
	{
		get
		{
			return (AttackType) _AttackType[Index];
		}
		set
		{
			_AttackType[Index] = value;
		}
	}
	public System.Single Value
	{
		get
		{
			return _Value[Index];
		}
		set
		{
			_Value[Index] = value;
		}
	}
	public System.Single IncreaseValue
	{
		get
		{
			return _IncreaseValue[Index];
		}
		set
		{
			_IncreaseValue[Index] = value;
		}
	}
	public System.Single CoolTime
	{
		get
		{
			return _CoolTime[Index];
		}
		set
		{
			_CoolTime[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5450511217045133028,1534831260943557524));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_SkillType;
	public static BansheeGz.BGDatabase.BGFieldEnum _SkillType
	{
		get
		{
			if(_ufle12jhs77_SkillType==null || _ufle12jhs77_SkillType.IsDeleted) _ufle12jhs77_SkillType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4906265187218299320,8256477299138777984));
			return _ufle12jhs77_SkillType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_SkillGrade;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _SkillGrade
	{
		get
		{
			if(_ufle12jhs77_SkillGrade==null || _ufle12jhs77_SkillGrade.IsDeleted) _ufle12jhs77_SkillGrade=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5496669055474853260,11700667241453761717));
			return _ufle12jhs77_SkillGrade;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_AttackType;
	public static BansheeGz.BGDatabase.BGFieldEnum _AttackType
	{
		get
		{
			if(_ufle12jhs77_AttackType==null || _ufle12jhs77_AttackType.IsDeleted) _ufle12jhs77_AttackType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4712379724242784575,18405307642975686299));
			return _ufle12jhs77_AttackType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Value;
	public static BansheeGz.BGDatabase.BGFieldFloat _Value
	{
		get
		{
			if(_ufle12jhs77_Value==null || _ufle12jhs77_Value.IsDeleted) _ufle12jhs77_Value=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4799154805528818524,1830960030846217874));
			return _ufle12jhs77_Value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_IncreaseValue;
	public static BansheeGz.BGDatabase.BGFieldFloat _IncreaseValue
	{
		get
		{
			if(_ufle12jhs77_IncreaseValue==null || _ufle12jhs77_IncreaseValue.IsDeleted) _ufle12jhs77_IncreaseValue=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5484682534203116903,454047794088685753));
			return _ufle12jhs77_IncreaseValue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_CoolTime;
	public static BansheeGz.BGDatabase.BGFieldFloat _CoolTime
	{
		get
		{
			if(_ufle12jhs77_CoolTime==null || _ufle12jhs77_CoolTime.IsDeleted) _ufle12jhs77_CoolTime=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5232186021110550383,8926376847671037837));
			return _ufle12jhs77_CoolTime;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_SKILL() : base(MetaDefault)
	{
	}
	private TBL_SKILL(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_SKILL(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_SKILL(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_SKILL FindEntity(Predicate<TBL_SKILL> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_SKILL) entity)) as TBL_SKILL;
	}
	public static List<TBL_SKILL> FindEntities(Predicate<TBL_SKILL> filter, List<TBL_SKILL> result=null, Comparison<TBL_SKILL> sort=null)
	{
		result = result ?? new List<TBL_SKILL>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_SKILL) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_SKILL) e1, (TBL_SKILL) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_SKILL) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_SKILL> action, Predicate<TBL_SKILL> filter=null, Comparison<TBL_SKILL> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_SKILL) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_SKILL) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_SKILL)e1,(TBL_SKILL)e2));
	}
	public static TBL_SKILL GetEntity(BGId entityId)
	{
		return (TBL_SKILL) MetaDefault.GetEntity(entityId);
	}
	public static TBL_SKILL GetEntity(int index)
	{
		return (TBL_SKILL) MetaDefault[index];
	}
	public static TBL_SKILL GetEntity(string entityName)
	{
		return (TBL_SKILL) MetaDefault.GetEntity(entityName);
	}
	public static TBL_SKILL NewEntity()
	{
		return (TBL_SKILL) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_STAGE : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_STAGE(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_STAGE(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4619127150903805892,12791219803539330178));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public TBL_WORLD World
	{
		get
		{
			return (TBL_WORLD) _World[Index];
		}
		set
		{
			_World[Index] = value;
		}
	}
	public TBL_MONSTER_GROUP Wave1
	{
		get
		{
			return (TBL_MONSTER_GROUP) _Wave1[Index];
		}
		set
		{
			_Wave1[Index] = value;
		}
	}
	public TBL_MONSTER_GROUP Wave2
	{
		get
		{
			return (TBL_MONSTER_GROUP) _Wave2[Index];
		}
		set
		{
			_Wave2[Index] = value;
		}
	}
	public TBL_MONSTER_GROUP Wave3
	{
		get
		{
			return (TBL_MONSTER_GROUP) _Wave3[Index];
		}
		set
		{
			_Wave3[Index] = value;
		}
	}
	public TBL_MONSTER_GROUP Wave4
	{
		get
		{
			return (TBL_MONSTER_GROUP) _Wave4[Index];
		}
		set
		{
			_Wave4[Index] = value;
		}
	}
	public TBL_MONSTER_GROUP Wave5
	{
		get
		{
			return (TBL_MONSTER_GROUP) _Wave5[Index];
		}
		set
		{
			_Wave5[Index] = value;
		}
	}
	public System.Double DamageFactor
	{
		get
		{
			return _DamageFactor[Index];
		}
		set
		{
			_DamageFactor[Index] = value;
		}
	}
	public System.Double HealthFactor
	{
		get
		{
			return _HealthFactor[Index];
		}
		set
		{
			_HealthFactor[Index] = value;
		}
	}
	public ArtifactGrade ArtifactGrade1
	{
		get
		{
			return (ArtifactGrade) _ArtifactGrade1[Index];
		}
		set
		{
			_ArtifactGrade1[Index] = value;
		}
	}
	public System.Single ArtifactChance1
	{
		get
		{
			return _ArtifactChance1[Index];
		}
		set
		{
			_ArtifactChance1[Index] = value;
		}
	}
	public ArtifactGrade ArtifactGrade2
	{
		get
		{
			return (ArtifactGrade) _ArtifactGrade2[Index];
		}
		set
		{
			_ArtifactGrade2[Index] = value;
		}
	}
	public System.Single ArtifactChance2
	{
		get
		{
			return _ArtifactChance2[Index];
		}
		set
		{
			_ArtifactChance2[Index] = value;
		}
	}
	public ArtifactGrade ArtifactGrade3
	{
		get
		{
			return (ArtifactGrade) _ArtifactGrade3[Index];
		}
		set
		{
			_ArtifactGrade3[Index] = value;
		}
	}
	public System.Single ArtifactChance3
	{
		get
		{
			return _ArtifactChance3[Index];
		}
		set
		{
			_ArtifactChance3[Index] = value;
		}
	}
	public ArtifactGrade ArtifactGrade4
	{
		get
		{
			return (ArtifactGrade) _ArtifactGrade4[Index];
		}
		set
		{
			_ArtifactGrade4[Index] = value;
		}
	}
	public System.Single ArtifactChance4
	{
		get
		{
			return _ArtifactChance4[Index];
		}
		set
		{
			_ArtifactChance4[Index] = value;
		}
	}
	public ArtifactGrade ArtifactGrade5
	{
		get
		{
			return (ArtifactGrade) _ArtifactGrade5[Index];
		}
		set
		{
			_ArtifactGrade5[Index] = value;
		}
	}
	public System.Single ArtifactChance5
	{
		get
		{
			return _ArtifactChance5[Index];
		}
		set
		{
			_ArtifactChance5[Index] = value;
		}
	}
	public ArtifactGrade ArtifactGrade6
	{
		get
		{
			return (ArtifactGrade) _ArtifactGrade6[Index];
		}
		set
		{
			_ArtifactGrade6[Index] = value;
		}
	}
	public System.Single ArtifactChance6
	{
		get
		{
			return _ArtifactChance6[Index];
		}
		set
		{
			_ArtifactChance6[Index] = value;
		}
	}
	public ArtifactGrade ArtifactGrade7
	{
		get
		{
			return (ArtifactGrade) _ArtifactGrade7[Index];
		}
		set
		{
			_ArtifactGrade7[Index] = value;
		}
	}
	public System.Single ArtifactChance7
	{
		get
		{
			return _ArtifactChance7[Index];
		}
		set
		{
			_ArtifactChance7[Index] = value;
		}
	}
	public ArtifactGrade ArtifactGrade8
	{
		get
		{
			return (ArtifactGrade) _ArtifactGrade8[Index];
		}
		set
		{
			_ArtifactGrade8[Index] = value;
		}
	}
	public System.Single ArtifactChance8
	{
		get
		{
			return _ArtifactChance8[Index];
		}
		set
		{
			_ArtifactChance8[Index] = value;
		}
	}
	public ArtifactGrade ArtifactGrade9
	{
		get
		{
			return (ArtifactGrade) _ArtifactGrade9[Index];
		}
		set
		{
			_ArtifactGrade9[Index] = value;
		}
	}
	public System.Single ArtifactChance9
	{
		get
		{
			return _ArtifactChance9[Index];
		}
		set
		{
			_ArtifactChance9[Index] = value;
		}
	}
	public ArtifactGrade ArtifactGrade10
	{
		get
		{
			return (ArtifactGrade) _ArtifactGrade10[Index];
		}
		set
		{
			_ArtifactGrade10[Index] = value;
		}
	}
	public System.Single ArtifactChance10
	{
		get
		{
			return _ArtifactChance10[Index];
		}
		set
		{
			_ArtifactChance10[Index] = value;
		}
	}
	public ArtifactGrade ArtifactGrade11
	{
		get
		{
			return (ArtifactGrade) _ArtifactGrade11[Index];
		}
		set
		{
			_ArtifactGrade11[Index] = value;
		}
	}
	public ArtifactGrade ArtifactGrade12
	{
		get
		{
			return (ArtifactGrade) _ArtifactGrade12[Index];
		}
		set
		{
			_ArtifactGrade12[Index] = value;
		}
	}
	public ArtifactGrade ArtifactGrade13
	{
		get
		{
			return (ArtifactGrade) _ArtifactGrade13[Index];
		}
		set
		{
			_ArtifactGrade13[Index] = value;
		}
	}
	public ArtifactGrade ArtifactGrade14
	{
		get
		{
			return (ArtifactGrade) _ArtifactGrade14[Index];
		}
		set
		{
			_ArtifactGrade14[Index] = value;
		}
	}
	public ArtifactGrade ArtifactGrade15
	{
		get
		{
			return (ArtifactGrade) _ArtifactGrade15[Index];
		}
		set
		{
			_ArtifactGrade15[Index] = value;
		}
	}
	public ArtifactGrade ArtifactGrade16
	{
		get
		{
			return (ArtifactGrade) _ArtifactGrade16[Index];
		}
		set
		{
			_ArtifactGrade16[Index] = value;
		}
	}
	public ArtifactGrade ArtifactGrade17
	{
		get
		{
			return (ArtifactGrade) _ArtifactGrade17[Index];
		}
		set
		{
			_ArtifactGrade17[Index] = value;
		}
	}
	public ArtifactGrade ArtifactGrade18
	{
		get
		{
			return (ArtifactGrade) _ArtifactGrade18[Index];
		}
		set
		{
			_ArtifactGrade18[Index] = value;
		}
	}
	public ArtifactGrade ArtifactGrade19
	{
		get
		{
			return (ArtifactGrade) _ArtifactGrade19[Index];
		}
		set
		{
			_ArtifactGrade19[Index] = value;
		}
	}
	public ArtifactGrade ArtifactGrade20
	{
		get
		{
			return (ArtifactGrade) _ArtifactGrade20[Index];
		}
		set
		{
			_ArtifactGrade20[Index] = value;
		}
	}
	public System.Single ArtifactChance11
	{
		get
		{
			return _ArtifactChance11[Index];
		}
		set
		{
			_ArtifactChance11[Index] = value;
		}
	}
	public System.Single ArtifactChance12
	{
		get
		{
			return _ArtifactChance12[Index];
		}
		set
		{
			_ArtifactChance12[Index] = value;
		}
	}
	public System.Single ArtifactChance13
	{
		get
		{
			return _ArtifactChance13[Index];
		}
		set
		{
			_ArtifactChance13[Index] = value;
		}
	}
	public System.Single ArtifactChance14
	{
		get
		{
			return _ArtifactChance14[Index];
		}
		set
		{
			_ArtifactChance14[Index] = value;
		}
	}
	public System.Single ArtifactChance15
	{
		get
		{
			return _ArtifactChance15[Index];
		}
		set
		{
			_ArtifactChance15[Index] = value;
		}
	}
	public System.Single ArtifactChance16
	{
		get
		{
			return _ArtifactChance16[Index];
		}
		set
		{
			_ArtifactChance16[Index] = value;
		}
	}
	public System.Single ArtifactChance17
	{
		get
		{
			return _ArtifactChance17[Index];
		}
		set
		{
			_ArtifactChance17[Index] = value;
		}
	}
	public System.Single ArtifactChance18
	{
		get
		{
			return _ArtifactChance18[Index];
		}
		set
		{
			_ArtifactChance18[Index] = value;
		}
	}
	public System.Single ArtifactChance19
	{
		get
		{
			return _ArtifactChance19[Index];
		}
		set
		{
			_ArtifactChance19[Index] = value;
		}
	}
	public System.Single ArtifactChance20
	{
		get
		{
			return _ArtifactChance20[Index];
		}
		set
		{
			_ArtifactChance20[Index] = value;
		}
	}
	public System.Int32 FirstClearRewardSoul
	{
		get
		{
			return _FirstClearRewardSoul[Index];
		}
		set
		{
			_FirstClearRewardSoul[Index] = value;
		}
	}
	public System.Single DamageFactor_old
	{
		get
		{
			return _DamageFactor_old[Index];
		}
		set
		{
			_DamageFactor_old[Index] = value;
		}
	}
	public System.Single HealthFactor_old
	{
		get
		{
			return _HealthFactor_old[Index];
		}
		set
		{
			_HealthFactor_old[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5731979043626385482,8026395805994244028));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_World;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _World
	{
		get
		{
			if(_ufle12jhs77_World==null || _ufle12jhs77_World.IsDeleted) _ufle12jhs77_World=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5687530471150743818,4121390855455003540));
			return _ufle12jhs77_World;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave1;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave1
	{
		get
		{
			if(_ufle12jhs77_Wave1==null || _ufle12jhs77_Wave1.IsDeleted) _ufle12jhs77_Wave1=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5535150242470428871,13546870590116365953));
			return _ufle12jhs77_Wave1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave2;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave2
	{
		get
		{
			if(_ufle12jhs77_Wave2==null || _ufle12jhs77_Wave2.IsDeleted) _ufle12jhs77_Wave2=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4685265456071919327,11663862974421810623));
			return _ufle12jhs77_Wave2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave3;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave3
	{
		get
		{
			if(_ufle12jhs77_Wave3==null || _ufle12jhs77_Wave3.IsDeleted) _ufle12jhs77_Wave3=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5366310193431991324,13718754008893508763));
			return _ufle12jhs77_Wave3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave4;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave4
	{
		get
		{
			if(_ufle12jhs77_Wave4==null || _ufle12jhs77_Wave4.IsDeleted) _ufle12jhs77_Wave4=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5151994302357407381,16140644313404606889));
			return _ufle12jhs77_Wave4;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave5;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave5
	{
		get
		{
			if(_ufle12jhs77_Wave5==null || _ufle12jhs77_Wave5.IsDeleted) _ufle12jhs77_Wave5=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5339895306114383359,11855029316513355652));
			return _ufle12jhs77_Wave5;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_DamageFactor;
	public static BansheeGz.BGDatabase.BGFieldDouble _DamageFactor
	{
		get
		{
			if(_ufle12jhs77_DamageFactor==null || _ufle12jhs77_DamageFactor.IsDeleted) _ufle12jhs77_DamageFactor=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(4753143083224261742,5352373669393919156));
			return _ufle12jhs77_DamageFactor;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_HealthFactor;
	public static BansheeGz.BGDatabase.BGFieldDouble _HealthFactor
	{
		get
		{
			if(_ufle12jhs77_HealthFactor==null || _ufle12jhs77_HealthFactor.IsDeleted) _ufle12jhs77_HealthFactor=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5208410471630889475,15639402363075143842));
			return _ufle12jhs77_HealthFactor;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ArtifactGrade1;
	public static BansheeGz.BGDatabase.BGFieldEnum _ArtifactGrade1
	{
		get
		{
			if(_ufle12jhs77_ArtifactGrade1==null || _ufle12jhs77_ArtifactGrade1.IsDeleted) _ufle12jhs77_ArtifactGrade1=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5334932085538581770,13234533422679224217));
			return _ufle12jhs77_ArtifactGrade1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_ArtifactChance1;
	public static BansheeGz.BGDatabase.BGFieldFloat _ArtifactChance1
	{
		get
		{
			if(_ufle12jhs77_ArtifactChance1==null || _ufle12jhs77_ArtifactChance1.IsDeleted) _ufle12jhs77_ArtifactChance1=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5514095509845644285,3686414394370392235));
			return _ufle12jhs77_ArtifactChance1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ArtifactGrade2;
	public static BansheeGz.BGDatabase.BGFieldEnum _ArtifactGrade2
	{
		get
		{
			if(_ufle12jhs77_ArtifactGrade2==null || _ufle12jhs77_ArtifactGrade2.IsDeleted) _ufle12jhs77_ArtifactGrade2=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4662924767229794605,14533750644095285694));
			return _ufle12jhs77_ArtifactGrade2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_ArtifactChance2;
	public static BansheeGz.BGDatabase.BGFieldFloat _ArtifactChance2
	{
		get
		{
			if(_ufle12jhs77_ArtifactChance2==null || _ufle12jhs77_ArtifactChance2.IsDeleted) _ufle12jhs77_ArtifactChance2=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5440177274240917505,8713833979820387983));
			return _ufle12jhs77_ArtifactChance2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ArtifactGrade3;
	public static BansheeGz.BGDatabase.BGFieldEnum _ArtifactGrade3
	{
		get
		{
			if(_ufle12jhs77_ArtifactGrade3==null || _ufle12jhs77_ArtifactGrade3.IsDeleted) _ufle12jhs77_ArtifactGrade3=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4634700235733025472,18194567154122624915));
			return _ufle12jhs77_ArtifactGrade3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_ArtifactChance3;
	public static BansheeGz.BGDatabase.BGFieldFloat _ArtifactChance3
	{
		get
		{
			if(_ufle12jhs77_ArtifactChance3==null || _ufle12jhs77_ArtifactChance3.IsDeleted) _ufle12jhs77_ArtifactChance3=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4833048002842045676,4067373158273181366));
			return _ufle12jhs77_ArtifactChance3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ArtifactGrade4;
	public static BansheeGz.BGDatabase.BGFieldEnum _ArtifactGrade4
	{
		get
		{
			if(_ufle12jhs77_ArtifactGrade4==null || _ufle12jhs77_ArtifactGrade4.IsDeleted) _ufle12jhs77_ArtifactGrade4=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5239182241464136995,13978548694288393364));
			return _ufle12jhs77_ArtifactGrade4;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_ArtifactChance4;
	public static BansheeGz.BGDatabase.BGFieldFloat _ArtifactChance4
	{
		get
		{
			if(_ufle12jhs77_ArtifactChance4==null || _ufle12jhs77_ArtifactChance4.IsDeleted) _ufle12jhs77_ArtifactChance4=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5434571515266586251,9081527238674699698));
			return _ufle12jhs77_ArtifactChance4;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ArtifactGrade5;
	public static BansheeGz.BGDatabase.BGFieldEnum _ArtifactGrade5
	{
		get
		{
			if(_ufle12jhs77_ArtifactGrade5==null || _ufle12jhs77_ArtifactGrade5.IsDeleted) _ufle12jhs77_ArtifactGrade5=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4662086322748986590,5276482455821874847));
			return _ufle12jhs77_ArtifactGrade5;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_ArtifactChance5;
	public static BansheeGz.BGDatabase.BGFieldFloat _ArtifactChance5
	{
		get
		{
			if(_ufle12jhs77_ArtifactChance5==null || _ufle12jhs77_ArtifactChance5.IsDeleted) _ufle12jhs77_ArtifactChance5=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4862718597664529844,16047674954997939340));
			return _ufle12jhs77_ArtifactChance5;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ArtifactGrade6;
	public static BansheeGz.BGDatabase.BGFieldEnum _ArtifactGrade6
	{
		get
		{
			if(_ufle12jhs77_ArtifactGrade6==null || _ufle12jhs77_ArtifactGrade6.IsDeleted) _ufle12jhs77_ArtifactGrade6=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5441707394226302043,14329031908800524717));
			return _ufle12jhs77_ArtifactGrade6;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_ArtifactChance6;
	public static BansheeGz.BGDatabase.BGFieldFloat _ArtifactChance6
	{
		get
		{
			if(_ufle12jhs77_ArtifactChance6==null || _ufle12jhs77_ArtifactChance6.IsDeleted) _ufle12jhs77_ArtifactChance6=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5515053605000279799,3994466189621934993));
			return _ufle12jhs77_ArtifactChance6;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ArtifactGrade7;
	public static BansheeGz.BGDatabase.BGFieldEnum _ArtifactGrade7
	{
		get
		{
			if(_ufle12jhs77_ArtifactGrade7==null || _ufle12jhs77_ArtifactGrade7.IsDeleted) _ufle12jhs77_ArtifactGrade7=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4708225247753924871,3491895426467508107));
			return _ufle12jhs77_ArtifactGrade7;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_ArtifactChance7;
	public static BansheeGz.BGDatabase.BGFieldFloat _ArtifactChance7
	{
		get
		{
			if(_ufle12jhs77_ArtifactChance7==null || _ufle12jhs77_ArtifactChance7.IsDeleted) _ufle12jhs77_ArtifactChance7=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5761816823766684580,229694039741618064));
			return _ufle12jhs77_ArtifactChance7;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ArtifactGrade8;
	public static BansheeGz.BGDatabase.BGFieldEnum _ArtifactGrade8
	{
		get
		{
			if(_ufle12jhs77_ArtifactGrade8==null || _ufle12jhs77_ArtifactGrade8.IsDeleted) _ufle12jhs77_ArtifactGrade8=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4857150287240280804,5609141822139918248));
			return _ufle12jhs77_ArtifactGrade8;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_ArtifactChance8;
	public static BansheeGz.BGDatabase.BGFieldFloat _ArtifactChance8
	{
		get
		{
			if(_ufle12jhs77_ArtifactChance8==null || _ufle12jhs77_ArtifactChance8.IsDeleted) _ufle12jhs77_ArtifactChance8=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4954321846715334979,17209908694548813234));
			return _ufle12jhs77_ArtifactChance8;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ArtifactGrade9;
	public static BansheeGz.BGDatabase.BGFieldEnum _ArtifactGrade9
	{
		get
		{
			if(_ufle12jhs77_ArtifactGrade9==null || _ufle12jhs77_ArtifactGrade9.IsDeleted) _ufle12jhs77_ArtifactGrade9=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4949513403405720591,5069584463562673822));
			return _ufle12jhs77_ArtifactGrade9;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_ArtifactChance9;
	public static BansheeGz.BGDatabase.BGFieldFloat _ArtifactChance9
	{
		get
		{
			if(_ufle12jhs77_ArtifactChance9==null || _ufle12jhs77_ArtifactChance9.IsDeleted) _ufle12jhs77_ArtifactChance9=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5132079505544138153,11129109470844044467));
			return _ufle12jhs77_ArtifactChance9;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ArtifactGrade10;
	public static BansheeGz.BGDatabase.BGFieldEnum _ArtifactGrade10
	{
		get
		{
			if(_ufle12jhs77_ArtifactGrade10==null || _ufle12jhs77_ArtifactGrade10.IsDeleted) _ufle12jhs77_ArtifactGrade10=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5108742339070729445,3889166524978305412));
			return _ufle12jhs77_ArtifactGrade10;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_ArtifactChance10;
	public static BansheeGz.BGDatabase.BGFieldFloat _ArtifactChance10
	{
		get
		{
			if(_ufle12jhs77_ArtifactChance10==null || _ufle12jhs77_ArtifactChance10.IsDeleted) _ufle12jhs77_ArtifactChance10=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5396147895651623014,16601613901623211428));
			return _ufle12jhs77_ArtifactChance10;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ArtifactGrade11;
	public static BansheeGz.BGDatabase.BGFieldEnum _ArtifactGrade11
	{
		get
		{
			if(_ufle12jhs77_ArtifactGrade11==null || _ufle12jhs77_ArtifactGrade11.IsDeleted) _ufle12jhs77_ArtifactGrade11=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5451773893875737078,10752390276000698269));
			return _ufle12jhs77_ArtifactGrade11;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ArtifactGrade12;
	public static BansheeGz.BGDatabase.BGFieldEnum _ArtifactGrade12
	{
		get
		{
			if(_ufle12jhs77_ArtifactGrade12==null || _ufle12jhs77_ArtifactGrade12.IsDeleted) _ufle12jhs77_ArtifactGrade12=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5049640527580616825,4618535429438749876));
			return _ufle12jhs77_ArtifactGrade12;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ArtifactGrade13;
	public static BansheeGz.BGDatabase.BGFieldEnum _ArtifactGrade13
	{
		get
		{
			if(_ufle12jhs77_ArtifactGrade13==null || _ufle12jhs77_ArtifactGrade13.IsDeleted) _ufle12jhs77_ArtifactGrade13=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5510524421788131698,10768831039310558084));
			return _ufle12jhs77_ArtifactGrade13;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ArtifactGrade14;
	public static BansheeGz.BGDatabase.BGFieldEnum _ArtifactGrade14
	{
		get
		{
			if(_ufle12jhs77_ArtifactGrade14==null || _ufle12jhs77_ArtifactGrade14.IsDeleted) _ufle12jhs77_ArtifactGrade14=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4881073324215343225,10293130040703316625));
			return _ufle12jhs77_ArtifactGrade14;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ArtifactGrade15;
	public static BansheeGz.BGDatabase.BGFieldEnum _ArtifactGrade15
	{
		get
		{
			if(_ufle12jhs77_ArtifactGrade15==null || _ufle12jhs77_ArtifactGrade15.IsDeleted) _ufle12jhs77_ArtifactGrade15=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5430724884573844738,3690514849894406048));
			return _ufle12jhs77_ArtifactGrade15;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ArtifactGrade16;
	public static BansheeGz.BGDatabase.BGFieldEnum _ArtifactGrade16
	{
		get
		{
			if(_ufle12jhs77_ArtifactGrade16==null || _ufle12jhs77_ArtifactGrade16.IsDeleted) _ufle12jhs77_ArtifactGrade16=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5389024856230792240,5740627880005945486));
			return _ufle12jhs77_ArtifactGrade16;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ArtifactGrade17;
	public static BansheeGz.BGDatabase.BGFieldEnum _ArtifactGrade17
	{
		get
		{
			if(_ufle12jhs77_ArtifactGrade17==null || _ufle12jhs77_ArtifactGrade17.IsDeleted) _ufle12jhs77_ArtifactGrade17=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4792049014316878596,16252920939889834151));
			return _ufle12jhs77_ArtifactGrade17;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ArtifactGrade18;
	public static BansheeGz.BGDatabase.BGFieldEnum _ArtifactGrade18
	{
		get
		{
			if(_ufle12jhs77_ArtifactGrade18==null || _ufle12jhs77_ArtifactGrade18.IsDeleted) _ufle12jhs77_ArtifactGrade18=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5011216074126142360,35858808654116259));
			return _ufle12jhs77_ArtifactGrade18;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ArtifactGrade19;
	public static BansheeGz.BGDatabase.BGFieldEnum _ArtifactGrade19
	{
		get
		{
			if(_ufle12jhs77_ArtifactGrade19==null || _ufle12jhs77_ArtifactGrade19.IsDeleted) _ufle12jhs77_ArtifactGrade19=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5379418644147709445,12880919312142659762));
			return _ufle12jhs77_ArtifactGrade19;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ArtifactGrade20;
	public static BansheeGz.BGDatabase.BGFieldEnum _ArtifactGrade20
	{
		get
		{
			if(_ufle12jhs77_ArtifactGrade20==null || _ufle12jhs77_ArtifactGrade20.IsDeleted) _ufle12jhs77_ArtifactGrade20=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4670553150631535925,1969646676589198733));
			return _ufle12jhs77_ArtifactGrade20;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_ArtifactChance11;
	public static BansheeGz.BGDatabase.BGFieldFloat _ArtifactChance11
	{
		get
		{
			if(_ufle12jhs77_ArtifactChance11==null || _ufle12jhs77_ArtifactChance11.IsDeleted) _ufle12jhs77_ArtifactChance11=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4979162778866473201,10448305891852723617));
			return _ufle12jhs77_ArtifactChance11;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_ArtifactChance12;
	public static BansheeGz.BGDatabase.BGFieldFloat _ArtifactChance12
	{
		get
		{
			if(_ufle12jhs77_ArtifactChance12==null || _ufle12jhs77_ArtifactChance12.IsDeleted) _ufle12jhs77_ArtifactChance12=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5130689173657566226,13388462579163304064));
			return _ufle12jhs77_ArtifactChance12;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_ArtifactChance13;
	public static BansheeGz.BGDatabase.BGFieldFloat _ArtifactChance13
	{
		get
		{
			if(_ufle12jhs77_ArtifactChance13==null || _ufle12jhs77_ArtifactChance13.IsDeleted) _ufle12jhs77_ArtifactChance13=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4779109639053493797,17216870684945442734));
			return _ufle12jhs77_ArtifactChance13;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_ArtifactChance14;
	public static BansheeGz.BGDatabase.BGFieldFloat _ArtifactChance14
	{
		get
		{
			if(_ufle12jhs77_ArtifactChance14==null || _ufle12jhs77_ArtifactChance14.IsDeleted) _ufle12jhs77_ArtifactChance14=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4854266326319354887,4908917222981126822));
			return _ufle12jhs77_ArtifactChance14;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_ArtifactChance15;
	public static BansheeGz.BGDatabase.BGFieldFloat _ArtifactChance15
	{
		get
		{
			if(_ufle12jhs77_ArtifactChance15==null || _ufle12jhs77_ArtifactChance15.IsDeleted) _ufle12jhs77_ArtifactChance15=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5102341548386612992,482675953962639548));
			return _ufle12jhs77_ArtifactChance15;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_ArtifactChance16;
	public static BansheeGz.BGDatabase.BGFieldFloat _ArtifactChance16
	{
		get
		{
			if(_ufle12jhs77_ArtifactChance16==null || _ufle12jhs77_ArtifactChance16.IsDeleted) _ufle12jhs77_ArtifactChance16=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5325460456617729062,14826609886418967940));
			return _ufle12jhs77_ArtifactChance16;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_ArtifactChance17;
	public static BansheeGz.BGDatabase.BGFieldFloat _ArtifactChance17
	{
		get
		{
			if(_ufle12jhs77_ArtifactChance17==null || _ufle12jhs77_ArtifactChance17.IsDeleted) _ufle12jhs77_ArtifactChance17=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5237891714453453104,15009307670424985019));
			return _ufle12jhs77_ArtifactChance17;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_ArtifactChance18;
	public static BansheeGz.BGDatabase.BGFieldFloat _ArtifactChance18
	{
		get
		{
			if(_ufle12jhs77_ArtifactChance18==null || _ufle12jhs77_ArtifactChance18.IsDeleted) _ufle12jhs77_ArtifactChance18=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5295057740185932953,9639326759800797825));
			return _ufle12jhs77_ArtifactChance18;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_ArtifactChance19;
	public static BansheeGz.BGDatabase.BGFieldFloat _ArtifactChance19
	{
		get
		{
			if(_ufle12jhs77_ArtifactChance19==null || _ufle12jhs77_ArtifactChance19.IsDeleted) _ufle12jhs77_ArtifactChance19=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5235573527782498023,17370597271585407886));
			return _ufle12jhs77_ArtifactChance19;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_ArtifactChance20;
	public static BansheeGz.BGDatabase.BGFieldFloat _ArtifactChance20
	{
		get
		{
			if(_ufle12jhs77_ArtifactChance20==null || _ufle12jhs77_ArtifactChance20.IsDeleted) _ufle12jhs77_ArtifactChance20=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5480084306875248903,17490593437498269836));
			return _ufle12jhs77_ArtifactChance20;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_FirstClearRewardSoul;
	public static BansheeGz.BGDatabase.BGFieldInt _FirstClearRewardSoul
	{
		get
		{
			if(_ufle12jhs77_FirstClearRewardSoul==null || _ufle12jhs77_FirstClearRewardSoul.IsDeleted) _ufle12jhs77_FirstClearRewardSoul=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5540719764508613459,10853276955023536807));
			return _ufle12jhs77_FirstClearRewardSoul;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_DamageFactor_old;
	public static BansheeGz.BGDatabase.BGFieldFloat _DamageFactor_old
	{
		get
		{
			if(_ufle12jhs77_DamageFactor_old==null || _ufle12jhs77_DamageFactor_old.IsDeleted) _ufle12jhs77_DamageFactor_old=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4864263447615327528,977767083521373069));
			return _ufle12jhs77_DamageFactor_old;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_HealthFactor_old;
	public static BansheeGz.BGDatabase.BGFieldFloat _HealthFactor_old
	{
		get
		{
			if(_ufle12jhs77_HealthFactor_old==null || _ufle12jhs77_HealthFactor_old.IsDeleted) _ufle12jhs77_HealthFactor_old=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5476168446898959572,9695893196546606505));
			return _ufle12jhs77_HealthFactor_old;
		}
	}
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_GetWithWorld;
	public static BansheeGz.BGDatabase.BGKey _GetWithWorld
	{
		get
		{
			if(_edeht3sdad33_GetWithWorld==null || _edeht3sdad33_GetWithWorld.IsDeleted) _edeht3sdad33_GetWithWorld= MetaDefault.GetKey(new BGId(4611911692296675216,11081870039006384791));
			return _edeht3sdad33_GetWithWorld;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_STAGE() : base(MetaDefault)
	{
	}
	private TBL_STAGE(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_STAGE(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_STAGE(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_STAGE FindEntity(Predicate<TBL_STAGE> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_STAGE) entity)) as TBL_STAGE;
	}
	public static List<TBL_STAGE> FindEntities(Predicate<TBL_STAGE> filter, List<TBL_STAGE> result=null, Comparison<TBL_STAGE> sort=null)
	{
		result = result ?? new List<TBL_STAGE>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_STAGE) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_STAGE) e1, (TBL_STAGE) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_STAGE) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_STAGE> action, Predicate<TBL_STAGE> filter=null, Comparison<TBL_STAGE> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_STAGE) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_STAGE) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_STAGE)e1,(TBL_STAGE)e2));
	}
	public static TBL_STAGE GetEntity(BGId entityId)
	{
		return (TBL_STAGE) MetaDefault.GetEntity(entityId);
	}
	public static TBL_STAGE GetEntity(int index)
	{
		return (TBL_STAGE) MetaDefault[index];
	}
	public static TBL_STAGE GetEntity(string entityName)
	{
		return (TBL_STAGE) MetaDefault.GetEntity(entityName);
	}
	public static TBL_STAGE NewEntity()
	{
		return (TBL_STAGE) MetaDefault.NewEntity();
	}
	public static TBL_STAGE GetEntityByKeyGetWithWorld(TBL_WORLD World)
	{
		return (TBL_STAGE) _GetWithWorld.GetEntityByKey(World);
	}
	public static List<TBL_STAGE> GetEntitiesByKeyGetWithWorld(TBL_WORLD World)
	{
		var result = _GetWithWorld.GetEntitiesByKey(World);
		if(result==null || result.Count==0) return null;
		var list = new List<TBL_STAGE>(result.Count);
		for(var i = 0 ; i < result.Count ; i++) list.Add((TBL_STAGE) result[i]);
		return list;
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_MONSTER_GROUP : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_MONSTER_GROUP(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_MONSTER_GROUP(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5194366577471807289,15121577144909160881));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Boolean> Row1
	{
		get
		{
			return _Row1[Index];
		}
		set
		{
			_Row1[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Boolean> Row2
	{
		get
		{
			return _Row2[Index];
		}
		set
		{
			_Row2[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Boolean> Row3
	{
		get
		{
			return _Row3[Index];
		}
		set
		{
			_Row3[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Boolean> Row4
	{
		get
		{
			return _Row4[Index];
		}
		set
		{
			_Row4[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Boolean> Row5
	{
		get
		{
			return _Row5[Index];
		}
		set
		{
			_Row5[Index] = value;
		}
	}
	public TBL_MONSTER MonsterRow1
	{
		get
		{
			return (TBL_MONSTER) _MonsterRow1[Index];
		}
		set
		{
			_MonsterRow1[Index] = value;
		}
	}
	public TBL_MONSTER MonsterRow2
	{
		get
		{
			return (TBL_MONSTER) _MonsterRow2[Index];
		}
		set
		{
			_MonsterRow2[Index] = value;
		}
	}
	public TBL_MONSTER MonsterRow3
	{
		get
		{
			return (TBL_MONSTER) _MonsterRow3[Index];
		}
		set
		{
			_MonsterRow3[Index] = value;
		}
	}
	public TBL_MONSTER MonsterRow4
	{
		get
		{
			return (TBL_MONSTER) _MonsterRow4[Index];
		}
		set
		{
			_MonsterRow4[Index] = value;
		}
	}
	public TBL_MONSTER MonsterRow5
	{
		get
		{
			return (TBL_MONSTER) _MonsterRow5[Index];
		}
		set
		{
			_MonsterRow5[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5162168346304922164,8683869338718240144));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListBool _ufle12jhs77_Row1;
	public static BansheeGz.BGDatabase.BGFieldListBool _Row1
	{
		get
		{
			if(_ufle12jhs77_Row1==null || _ufle12jhs77_Row1.IsDeleted) _ufle12jhs77_Row1=(BansheeGz.BGDatabase.BGFieldListBool) MetaDefault.GetField(new BGId(5457691886121889283,16562572721346884009));
			return _ufle12jhs77_Row1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListBool _ufle12jhs77_Row2;
	public static BansheeGz.BGDatabase.BGFieldListBool _Row2
	{
		get
		{
			if(_ufle12jhs77_Row2==null || _ufle12jhs77_Row2.IsDeleted) _ufle12jhs77_Row2=(BansheeGz.BGDatabase.BGFieldListBool) MetaDefault.GetField(new BGId(4755131259813009311,6441308616084688315));
			return _ufle12jhs77_Row2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListBool _ufle12jhs77_Row3;
	public static BansheeGz.BGDatabase.BGFieldListBool _Row3
	{
		get
		{
			if(_ufle12jhs77_Row3==null || _ufle12jhs77_Row3.IsDeleted) _ufle12jhs77_Row3=(BansheeGz.BGDatabase.BGFieldListBool) MetaDefault.GetField(new BGId(5125608984068856756,16578033893852724403));
			return _ufle12jhs77_Row3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListBool _ufle12jhs77_Row4;
	public static BansheeGz.BGDatabase.BGFieldListBool _Row4
	{
		get
		{
			if(_ufle12jhs77_Row4==null || _ufle12jhs77_Row4.IsDeleted) _ufle12jhs77_Row4=(BansheeGz.BGDatabase.BGFieldListBool) MetaDefault.GetField(new BGId(5607426744349483688,334340724886271878));
			return _ufle12jhs77_Row4;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListBool _ufle12jhs77_Row5;
	public static BansheeGz.BGDatabase.BGFieldListBool _Row5
	{
		get
		{
			if(_ufle12jhs77_Row5==null || _ufle12jhs77_Row5.IsDeleted) _ufle12jhs77_Row5=(BansheeGz.BGDatabase.BGFieldListBool) MetaDefault.GetField(new BGId(5732691814449975466,14908822587429796236));
			return _ufle12jhs77_Row5;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_MonsterRow1;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _MonsterRow1
	{
		get
		{
			if(_ufle12jhs77_MonsterRow1==null || _ufle12jhs77_MonsterRow1.IsDeleted) _ufle12jhs77_MonsterRow1=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5342169207119696809,11939984253729589133));
			return _ufle12jhs77_MonsterRow1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_MonsterRow2;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _MonsterRow2
	{
		get
		{
			if(_ufle12jhs77_MonsterRow2==null || _ufle12jhs77_MonsterRow2.IsDeleted) _ufle12jhs77_MonsterRow2=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5607198975794553987,6460592872014831746));
			return _ufle12jhs77_MonsterRow2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_MonsterRow3;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _MonsterRow3
	{
		get
		{
			if(_ufle12jhs77_MonsterRow3==null || _ufle12jhs77_MonsterRow3.IsDeleted) _ufle12jhs77_MonsterRow3=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5223731467536974682,15085936959188681138));
			return _ufle12jhs77_MonsterRow3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_MonsterRow4;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _MonsterRow4
	{
		get
		{
			if(_ufle12jhs77_MonsterRow4==null || _ufle12jhs77_MonsterRow4.IsDeleted) _ufle12jhs77_MonsterRow4=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5127080820057698312,1711258782717730963));
			return _ufle12jhs77_MonsterRow4;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_MonsterRow5;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _MonsterRow5
	{
		get
		{
			if(_ufle12jhs77_MonsterRow5==null || _ufle12jhs77_MonsterRow5.IsDeleted) _ufle12jhs77_MonsterRow5=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4709842824662796109,554540698954558907));
			return _ufle12jhs77_MonsterRow5;
		}
	}
	private static readonly List<BGEntity> _tugjbyuhfv_reusableList = new List<BGEntity>();
	public List<TBL_STAGE> RelatedTBL_STAGEListUsingWave1Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_STAGE._Wave1.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_STAGE>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_STAGE) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_STAGE> RelatedTBL_STAGEListUsingWave2Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_STAGE._Wave2.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_STAGE>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_STAGE) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_STAGE> RelatedTBL_STAGEListUsingWave3Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_STAGE._Wave3.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_STAGE>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_STAGE) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_STAGE> RelatedTBL_STAGEListUsingWave4Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_STAGE._Wave4.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_STAGE>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_STAGE) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_STAGE> RelatedTBL_STAGEListUsingWave5Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_STAGE._Wave5.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_STAGE>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_STAGE) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_MONSTER_GROUP() : base(MetaDefault)
	{
	}
	private TBL_MONSTER_GROUP(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_MONSTER_GROUP(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_MONSTER_GROUP(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_MONSTER_GROUP FindEntity(Predicate<TBL_MONSTER_GROUP> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_MONSTER_GROUP) entity)) as TBL_MONSTER_GROUP;
	}
	public static List<TBL_MONSTER_GROUP> FindEntities(Predicate<TBL_MONSTER_GROUP> filter, List<TBL_MONSTER_GROUP> result=null, Comparison<TBL_MONSTER_GROUP> sort=null)
	{
		result = result ?? new List<TBL_MONSTER_GROUP>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_MONSTER_GROUP) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_MONSTER_GROUP) e1, (TBL_MONSTER_GROUP) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_MONSTER_GROUP) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_MONSTER_GROUP> action, Predicate<TBL_MONSTER_GROUP> filter=null, Comparison<TBL_MONSTER_GROUP> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_MONSTER_GROUP) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_MONSTER_GROUP) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_MONSTER_GROUP)e1,(TBL_MONSTER_GROUP)e2));
	}
	public static TBL_MONSTER_GROUP GetEntity(BGId entityId)
	{
		return (TBL_MONSTER_GROUP) MetaDefault.GetEntity(entityId);
	}
	public static TBL_MONSTER_GROUP GetEntity(int index)
	{
		return (TBL_MONSTER_GROUP) MetaDefault[index];
	}
	public static TBL_MONSTER_GROUP GetEntity(string entityName)
	{
		return (TBL_MONSTER_GROUP) MetaDefault.GetEntity(entityName);
	}
	public static TBL_MONSTER_GROUP NewEntity()
	{
		return (TBL_MONSTER_GROUP) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_UPGRADE_KING : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_UPGRADE_KING(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_UPGRADE_KING(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5601299785320660505,17523078557307415477));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public KingUpgradeType KingUpgradeType
	{
		get
		{
			return (KingUpgradeType) _KingUpgradeType[Index];
		}
		set
		{
			_KingUpgradeType[Index] = value;
		}
	}
	public System.Int32 Value
	{
		get
		{
			return _Value[Index];
		}
		set
		{
			_Value[Index] = value;
		}
	}
	public System.Single IncreaseValue
	{
		get
		{
			return _IncreaseValue[Index];
		}
		set
		{
			_IncreaseValue[Index] = value;
		}
	}
	public System.Int32 GoldCost
	{
		get
		{
			return _GoldCost[Index];
		}
		set
		{
			_GoldCost[Index] = value;
		}
	}
	public System.Int32 IncreaseGoldCost
	{
		get
		{
			return _IncreaseGoldCost[Index];
		}
		set
		{
			_IncreaseGoldCost[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5648051528464325904,10469811450426889872));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_KingUpgradeType;
	public static BansheeGz.BGDatabase.BGFieldEnum _KingUpgradeType
	{
		get
		{
			if(_ufle12jhs77_KingUpgradeType==null || _ufle12jhs77_KingUpgradeType.IsDeleted) _ufle12jhs77_KingUpgradeType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5305558587697189434,5235676377004260278));
			return _ufle12jhs77_KingUpgradeType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Value;
	public static BansheeGz.BGDatabase.BGFieldInt _Value
	{
		get
		{
			if(_ufle12jhs77_Value==null || _ufle12jhs77_Value.IsDeleted) _ufle12jhs77_Value=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4915538662950771157,8545376599331069349));
			return _ufle12jhs77_Value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_IncreaseValue;
	public static BansheeGz.BGDatabase.BGFieldFloat _IncreaseValue
	{
		get
		{
			if(_ufle12jhs77_IncreaseValue==null || _ufle12jhs77_IncreaseValue.IsDeleted) _ufle12jhs77_IncreaseValue=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4919427555162654292,6601637984274890414));
			return _ufle12jhs77_IncreaseValue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_GoldCost;
	public static BansheeGz.BGDatabase.BGFieldInt _GoldCost
	{
		get
		{
			if(_ufle12jhs77_GoldCost==null || _ufle12jhs77_GoldCost.IsDeleted) _ufle12jhs77_GoldCost=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4945340846008844857,7584340830752107150));
			return _ufle12jhs77_GoldCost;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_IncreaseGoldCost;
	public static BansheeGz.BGDatabase.BGFieldInt _IncreaseGoldCost
	{
		get
		{
			if(_ufle12jhs77_IncreaseGoldCost==null || _ufle12jhs77_IncreaseGoldCost.IsDeleted) _ufle12jhs77_IncreaseGoldCost=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5676774758861250415,2818324055938919554));
			return _ufle12jhs77_IncreaseGoldCost;
		}
	}
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_WithKingUpgradeType;
	public static BansheeGz.BGDatabase.BGKey _WithKingUpgradeType
	{
		get
		{
			if(_edeht3sdad33_WithKingUpgradeType==null || _edeht3sdad33_WithKingUpgradeType.IsDeleted) _edeht3sdad33_WithKingUpgradeType= MetaDefault.GetKey(new BGId(5489236118865620078,951620871404929942));
			return _edeht3sdad33_WithKingUpgradeType;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_UPGRADE_KING() : base(MetaDefault)
	{
	}
	private TBL_UPGRADE_KING(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_UPGRADE_KING(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_UPGRADE_KING(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_UPGRADE_KING FindEntity(Predicate<TBL_UPGRADE_KING> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_UPGRADE_KING) entity)) as TBL_UPGRADE_KING;
	}
	public static List<TBL_UPGRADE_KING> FindEntities(Predicate<TBL_UPGRADE_KING> filter, List<TBL_UPGRADE_KING> result=null, Comparison<TBL_UPGRADE_KING> sort=null)
	{
		result = result ?? new List<TBL_UPGRADE_KING>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_UPGRADE_KING) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_UPGRADE_KING) e1, (TBL_UPGRADE_KING) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_UPGRADE_KING) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_UPGRADE_KING> action, Predicate<TBL_UPGRADE_KING> filter=null, Comparison<TBL_UPGRADE_KING> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_UPGRADE_KING) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_UPGRADE_KING) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_UPGRADE_KING)e1,(TBL_UPGRADE_KING)e2));
	}
	public static TBL_UPGRADE_KING GetEntity(BGId entityId)
	{
		return (TBL_UPGRADE_KING) MetaDefault.GetEntity(entityId);
	}
	public static TBL_UPGRADE_KING GetEntity(int index)
	{
		return (TBL_UPGRADE_KING) MetaDefault[index];
	}
	public static TBL_UPGRADE_KING GetEntity(string entityName)
	{
		return (TBL_UPGRADE_KING) MetaDefault.GetEntity(entityName);
	}
	public static TBL_UPGRADE_KING NewEntity()
	{
		return (TBL_UPGRADE_KING) MetaDefault.NewEntity();
	}
	public static TBL_UPGRADE_KING GetEntityByKeyWithKingUpgradeType(KingUpgradeType KingUpgradeType)
	{
		return (TBL_UPGRADE_KING) _WithKingUpgradeType.GetEntityByKey(KingUpgradeType);
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_SHADOW : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_SHADOW(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_SHADOW(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4738956522189790961,6040649710849421228));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public ShadowGrade ShadowGrade
	{
		get
		{
			return (ShadowGrade) _ShadowGrade[Index];
		}
		set
		{
			_ShadowGrade[Index] = value;
		}
	}
	public TBL_SHADOW_GRADE Grade
	{
		get
		{
			return (TBL_SHADOW_GRADE) _Grade[Index];
		}
		set
		{
			_Grade[Index] = value;
		}
	}
	public TribeType TribeType
	{
		get
		{
			return (TribeType) _TribeType[Index];
		}
		set
		{
			_TribeType[Index] = value;
		}
	}
	public JobType JobType
	{
		get
		{
			return (JobType) _JobType[Index];
		}
		set
		{
			_JobType[Index] = value;
		}
	}
	public TargetDetectType TargetDetectType
	{
		get
		{
			return (TargetDetectType) _TargetDetectType[Index];
		}
		set
		{
			_TargetDetectType[Index] = value;
		}
	}
	public AttackType AttackType
	{
		get
		{
			return (AttackType) _AttackType[Index];
		}
		set
		{
			_AttackType[Index] = value;
		}
	}
	public System.Int32 MaxLevel
	{
		get
		{
			return _MaxLevel[Index];
		}
		set
		{
			_MaxLevel[Index] = value;
		}
	}
	public System.Int32 Cost
	{
		get
		{
			return _Cost[Index];
		}
		set
		{
			_Cost[Index] = value;
		}
	}
	public System.Int32 IncreaseCost
	{
		get
		{
			return _IncreaseCost[Index];
		}
		set
		{
			_IncreaseCost[Index] = value;
		}
	}
	public System.Single Damage
	{
		get
		{
			return _Damage[Index];
		}
		set
		{
			_Damage[Index] = value;
		}
	}
	public System.Single IncreaseDamage
	{
		get
		{
			return _IncreaseDamage[Index];
		}
		set
		{
			_IncreaseDamage[Index] = value;
		}
	}
	public System.Single Health
	{
		get
		{
			return _Health[Index];
		}
		set
		{
			_Health[Index] = value;
		}
	}
	public System.Single IncreaseHealth
	{
		get
		{
			return _IncreaseHealth[Index];
		}
		set
		{
			_IncreaseHealth[Index] = value;
		}
	}
	public System.Int32 MoveSpeed
	{
		get
		{
			return _MoveSpeed[Index];
		}
		set
		{
			_MoveSpeed[Index] = value;
		}
	}
	public System.Int32 AttackSpeed
	{
		get
		{
			return _AttackSpeed[Index];
		}
		set
		{
			_AttackSpeed[Index] = value;
		}
	}
	public System.Single AttackRange
	{
		get
		{
			return _AttackRange[Index];
		}
		set
		{
			_AttackRange[Index] = value;
		}
	}
	public System.Single AttackSplash
	{
		get
		{
			return _AttackSplash[Index];
		}
		set
		{
			_AttackSplash[Index] = value;
		}
	}
	public System.Int32 PhysicalDefense
	{
		get
		{
			return _PhysicalDefense[Index];
		}
		set
		{
			_PhysicalDefense[Index] = value;
		}
	}
	public System.Int32 MagicDefense
	{
		get
		{
			return _MagicDefense[Index];
		}
		set
		{
			_MagicDefense[Index] = value;
		}
	}
	public System.Int32 MaxMana
	{
		get
		{
			return _MaxMana[Index];
		}
		set
		{
			_MaxMana[Index] = value;
		}
	}
	public System.Int32 AttackMana
	{
		get
		{
			return _AttackMana[Index];
		}
		set
		{
			_AttackMana[Index] = value;
		}
	}
	public System.Int32 KillMana
	{
		get
		{
			return _KillMana[Index];
		}
		set
		{
			_KillMana[Index] = value;
		}
	}
	public System.Int32 Soul
	{
		get
		{
			return _Soul[Index];
		}
		set
		{
			_Soul[Index] = value;
		}
	}
	public System.Int32 TobeolPower
	{
		get
		{
			return _TobeolPower[Index];
		}
		set
		{
			_TobeolPower[Index] = value;
		}
	}
	public TBL_SHADOW_SKILL Skill
	{
		get
		{
			return (TBL_SHADOW_SKILL) _Skill[Index];
		}
		set
		{
			_Skill[Index] = value;
		}
	}
	public TBL_SHADOW_PASSIVE Passive1
	{
		get
		{
			return (TBL_SHADOW_PASSIVE) _Passive1[Index];
		}
		set
		{
			_Passive1[Index] = value;
		}
	}
	public TBL_SHADOW_PASSIVE Passive2
	{
		get
		{
			return (TBL_SHADOW_PASSIVE) _Passive2[Index];
		}
		set
		{
			_Passive2[Index] = value;
		}
	}
	public TBL_SHADOW_PASSIVE Passive3
	{
		get
		{
			return (TBL_SHADOW_PASSIVE) _Passive3[Index];
		}
		set
		{
			_Passive3[Index] = value;
		}
	}
	public TBL_SHADOW_PASSIVE Passive4
	{
		get
		{
			return (TBL_SHADOW_PASSIVE) _Passive4[Index];
		}
		set
		{
			_Passive4[Index] = value;
		}
	}
	public TBL_SHADOW_PASSIVE Passive5
	{
		get
		{
			return (TBL_SHADOW_PASSIVE) _Passive5[Index];
		}
		set
		{
			_Passive5[Index] = value;
		}
	}
	public TBL_SHADOW_PROMOTION Promotion
	{
		get
		{
			return (TBL_SHADOW_PROMOTION) _Promotion[Index];
		}
		set
		{
			_Promotion[Index] = value;
		}
	}
	public System.Single RespawnTime
	{
		get
		{
			return _RespawnTime[Index];
		}
		set
		{
			_RespawnTime[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5672558946928123274,14957904325687760287));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ShadowGrade;
	public static BansheeGz.BGDatabase.BGFieldEnum _ShadowGrade
	{
		get
		{
			if(_ufle12jhs77_ShadowGrade==null || _ufle12jhs77_ShadowGrade.IsDeleted) _ufle12jhs77_ShadowGrade=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5309542547811414002,17137588620774828218));
			return _ufle12jhs77_ShadowGrade;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Grade;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Grade
	{
		get
		{
			if(_ufle12jhs77_Grade==null || _ufle12jhs77_Grade.IsDeleted) _ufle12jhs77_Grade=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4616425121218615463,15637049712019698342));
			return _ufle12jhs77_Grade;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_TribeType;
	public static BansheeGz.BGDatabase.BGFieldEnum _TribeType
	{
		get
		{
			if(_ufle12jhs77_TribeType==null || _ufle12jhs77_TribeType.IsDeleted) _ufle12jhs77_TribeType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5162740110970167092,8011025891500621706));
			return _ufle12jhs77_TribeType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_JobType;
	public static BansheeGz.BGDatabase.BGFieldEnum _JobType
	{
		get
		{
			if(_ufle12jhs77_JobType==null || _ufle12jhs77_JobType.IsDeleted) _ufle12jhs77_JobType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4980389251001789638,16335798367971924144));
			return _ufle12jhs77_JobType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_TargetDetectType;
	public static BansheeGz.BGDatabase.BGFieldEnum _TargetDetectType
	{
		get
		{
			if(_ufle12jhs77_TargetDetectType==null || _ufle12jhs77_TargetDetectType.IsDeleted) _ufle12jhs77_TargetDetectType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5671332871536745331,12243146054793088944));
			return _ufle12jhs77_TargetDetectType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_AttackType;
	public static BansheeGz.BGDatabase.BGFieldEnum _AttackType
	{
		get
		{
			if(_ufle12jhs77_AttackType==null || _ufle12jhs77_AttackType.IsDeleted) _ufle12jhs77_AttackType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5547209149551198834,980362306320338052));
			return _ufle12jhs77_AttackType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_MaxLevel;
	public static BansheeGz.BGDatabase.BGFieldInt _MaxLevel
	{
		get
		{
			if(_ufle12jhs77_MaxLevel==null || _ufle12jhs77_MaxLevel.IsDeleted) _ufle12jhs77_MaxLevel=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5521749137640374692,824220646961271681));
			return _ufle12jhs77_MaxLevel;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Cost;
	public static BansheeGz.BGDatabase.BGFieldInt _Cost
	{
		get
		{
			if(_ufle12jhs77_Cost==null || _ufle12jhs77_Cost.IsDeleted) _ufle12jhs77_Cost=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5567260695486593131,11149589959144576682));
			return _ufle12jhs77_Cost;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_IncreaseCost;
	public static BansheeGz.BGDatabase.BGFieldInt _IncreaseCost
	{
		get
		{
			if(_ufle12jhs77_IncreaseCost==null || _ufle12jhs77_IncreaseCost.IsDeleted) _ufle12jhs77_IncreaseCost=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4693440703591357621,10950775067783903364));
			return _ufle12jhs77_IncreaseCost;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Damage;
	public static BansheeGz.BGDatabase.BGFieldFloat _Damage
	{
		get
		{
			if(_ufle12jhs77_Damage==null || _ufle12jhs77_Damage.IsDeleted) _ufle12jhs77_Damage=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5332143533629816202,4567700399137636011));
			return _ufle12jhs77_Damage;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_IncreaseDamage;
	public static BansheeGz.BGDatabase.BGFieldFloat _IncreaseDamage
	{
		get
		{
			if(_ufle12jhs77_IncreaseDamage==null || _ufle12jhs77_IncreaseDamage.IsDeleted) _ufle12jhs77_IncreaseDamage=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5569398232748729172,3228366282199821487));
			return _ufle12jhs77_IncreaseDamage;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Health;
	public static BansheeGz.BGDatabase.BGFieldFloat _Health
	{
		get
		{
			if(_ufle12jhs77_Health==null || _ufle12jhs77_Health.IsDeleted) _ufle12jhs77_Health=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5064168405756231352,6359075324889441453));
			return _ufle12jhs77_Health;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_IncreaseHealth;
	public static BansheeGz.BGDatabase.BGFieldFloat _IncreaseHealth
	{
		get
		{
			if(_ufle12jhs77_IncreaseHealth==null || _ufle12jhs77_IncreaseHealth.IsDeleted) _ufle12jhs77_IncreaseHealth=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5637408604206242243,18436188220085548684));
			return _ufle12jhs77_IncreaseHealth;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_MoveSpeed;
	public static BansheeGz.BGDatabase.BGFieldInt _MoveSpeed
	{
		get
		{
			if(_ufle12jhs77_MoveSpeed==null || _ufle12jhs77_MoveSpeed.IsDeleted) _ufle12jhs77_MoveSpeed=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4852777582723820592,12742177633551238817));
			return _ufle12jhs77_MoveSpeed;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_AttackSpeed;
	public static BansheeGz.BGDatabase.BGFieldInt _AttackSpeed
	{
		get
		{
			if(_ufle12jhs77_AttackSpeed==null || _ufle12jhs77_AttackSpeed.IsDeleted) _ufle12jhs77_AttackSpeed=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5107933691091081709,16426188194372928446));
			return _ufle12jhs77_AttackSpeed;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_AttackRange;
	public static BansheeGz.BGDatabase.BGFieldFloat _AttackRange
	{
		get
		{
			if(_ufle12jhs77_AttackRange==null || _ufle12jhs77_AttackRange.IsDeleted) _ufle12jhs77_AttackRange=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5003991898267739223,18311814031099165114));
			return _ufle12jhs77_AttackRange;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_AttackSplash;
	public static BansheeGz.BGDatabase.BGFieldFloat _AttackSplash
	{
		get
		{
			if(_ufle12jhs77_AttackSplash==null || _ufle12jhs77_AttackSplash.IsDeleted) _ufle12jhs77_AttackSplash=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4763741145521522067,12241785029521208740));
			return _ufle12jhs77_AttackSplash;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_PhysicalDefense;
	public static BansheeGz.BGDatabase.BGFieldInt _PhysicalDefense
	{
		get
		{
			if(_ufle12jhs77_PhysicalDefense==null || _ufle12jhs77_PhysicalDefense.IsDeleted) _ufle12jhs77_PhysicalDefense=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5232913258279151292,7257225060010528397));
			return _ufle12jhs77_PhysicalDefense;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_MagicDefense;
	public static BansheeGz.BGDatabase.BGFieldInt _MagicDefense
	{
		get
		{
			if(_ufle12jhs77_MagicDefense==null || _ufle12jhs77_MagicDefense.IsDeleted) _ufle12jhs77_MagicDefense=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5740733559415218472,9531092197667367041));
			return _ufle12jhs77_MagicDefense;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_MaxMana;
	public static BansheeGz.BGDatabase.BGFieldInt _MaxMana
	{
		get
		{
			if(_ufle12jhs77_MaxMana==null || _ufle12jhs77_MaxMana.IsDeleted) _ufle12jhs77_MaxMana=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5309095995778611654,8898882609318390409));
			return _ufle12jhs77_MaxMana;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_AttackMana;
	public static BansheeGz.BGDatabase.BGFieldInt _AttackMana
	{
		get
		{
			if(_ufle12jhs77_AttackMana==null || _ufle12jhs77_AttackMana.IsDeleted) _ufle12jhs77_AttackMana=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5132358448878542252,17100230412059395969));
			return _ufle12jhs77_AttackMana;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_KillMana;
	public static BansheeGz.BGDatabase.BGFieldInt _KillMana
	{
		get
		{
			if(_ufle12jhs77_KillMana==null || _ufle12jhs77_KillMana.IsDeleted) _ufle12jhs77_KillMana=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5100747736763813976,7942948500488059528));
			return _ufle12jhs77_KillMana;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Soul;
	public static BansheeGz.BGDatabase.BGFieldInt _Soul
	{
		get
		{
			if(_ufle12jhs77_Soul==null || _ufle12jhs77_Soul.IsDeleted) _ufle12jhs77_Soul=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4672497033549697179,14729305695857834144));
			return _ufle12jhs77_Soul;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_TobeolPower;
	public static BansheeGz.BGDatabase.BGFieldInt _TobeolPower
	{
		get
		{
			if(_ufle12jhs77_TobeolPower==null || _ufle12jhs77_TobeolPower.IsDeleted) _ufle12jhs77_TobeolPower=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5612827776201013478,1996141010229357969));
			return _ufle12jhs77_TobeolPower;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Skill;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Skill
	{
		get
		{
			if(_ufle12jhs77_Skill==null || _ufle12jhs77_Skill.IsDeleted) _ufle12jhs77_Skill=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5119242064085753966,2316554536221033625));
			return _ufle12jhs77_Skill;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Passive1;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Passive1
	{
		get
		{
			if(_ufle12jhs77_Passive1==null || _ufle12jhs77_Passive1.IsDeleted) _ufle12jhs77_Passive1=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4928283032428485543,14593246806362365064));
			return _ufle12jhs77_Passive1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Passive2;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Passive2
	{
		get
		{
			if(_ufle12jhs77_Passive2==null || _ufle12jhs77_Passive2.IsDeleted) _ufle12jhs77_Passive2=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4974795022711471623,3451892900646883508));
			return _ufle12jhs77_Passive2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Passive3;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Passive3
	{
		get
		{
			if(_ufle12jhs77_Passive3==null || _ufle12jhs77_Passive3.IsDeleted) _ufle12jhs77_Passive3=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4684149361269517051,90764733167052685));
			return _ufle12jhs77_Passive3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Passive4;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Passive4
	{
		get
		{
			if(_ufle12jhs77_Passive4==null || _ufle12jhs77_Passive4.IsDeleted) _ufle12jhs77_Passive4=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5412231124162965854,5938908928528375938));
			return _ufle12jhs77_Passive4;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Passive5;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Passive5
	{
		get
		{
			if(_ufle12jhs77_Passive5==null || _ufle12jhs77_Passive5.IsDeleted) _ufle12jhs77_Passive5=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5262980628302255950,10311821498904210322));
			return _ufle12jhs77_Passive5;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Promotion;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Promotion
	{
		get
		{
			if(_ufle12jhs77_Promotion==null || _ufle12jhs77_Promotion.IsDeleted) _ufle12jhs77_Promotion=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4729068500872975004,820770232899909270));
			return _ufle12jhs77_Promotion;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_RespawnTime;
	public static BansheeGz.BGDatabase.BGFieldFloat _RespawnTime
	{
		get
		{
			if(_ufle12jhs77_RespawnTime==null || _ufle12jhs77_RespawnTime.IsDeleted) _ufle12jhs77_RespawnTime=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5718637539439792987,15124713472209489073));
			return _ufle12jhs77_RespawnTime;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_SHADOW() : base(MetaDefault)
	{
	}
	private TBL_SHADOW(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_SHADOW(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_SHADOW(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_SHADOW FindEntity(Predicate<TBL_SHADOW> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_SHADOW) entity)) as TBL_SHADOW;
	}
	public static List<TBL_SHADOW> FindEntities(Predicate<TBL_SHADOW> filter, List<TBL_SHADOW> result=null, Comparison<TBL_SHADOW> sort=null)
	{
		result = result ?? new List<TBL_SHADOW>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_SHADOW) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_SHADOW) e1, (TBL_SHADOW) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_SHADOW) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_SHADOW> action, Predicate<TBL_SHADOW> filter=null, Comparison<TBL_SHADOW> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_SHADOW) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_SHADOW) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_SHADOW)e1,(TBL_SHADOW)e2));
	}
	public static TBL_SHADOW GetEntity(BGId entityId)
	{
		return (TBL_SHADOW) MetaDefault.GetEntity(entityId);
	}
	public static TBL_SHADOW GetEntity(int index)
	{
		return (TBL_SHADOW) MetaDefault[index];
	}
	public static TBL_SHADOW GetEntity(string entityName)
	{
		return (TBL_SHADOW) MetaDefault.GetEntity(entityName);
	}
	public static TBL_SHADOW NewEntity()
	{
		return (TBL_SHADOW) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_ARTIFACT : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_ARTIFACT(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_ARTIFACT(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5340559622159802992,3474126168379111300));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public ArtifactType ArtifactType
	{
		get
		{
			return (ArtifactType) _ArtifactType[Index];
		}
		set
		{
			_ArtifactType[Index] = value;
		}
	}
	public ArtifactGrade ArtifactGrade
	{
		get
		{
			return (ArtifactGrade) _ArtifactGrade[Index];
		}
		set
		{
			_ArtifactGrade[Index] = value;
		}
	}
	public System.Int32 LevelUpCost
	{
		get
		{
			return _LevelUpCost[Index];
		}
		set
		{
			_LevelUpCost[Index] = value;
		}
	}
	public System.Int32 LevelUpIncreaseCost
	{
		get
		{
			return _LevelUpIncreaseCost[Index];
		}
		set
		{
			_LevelUpIncreaseCost[Index] = value;
		}
	}
	public System.Int32 GradeUpCost
	{
		get
		{
			return _GradeUpCost[Index];
		}
		set
		{
			_GradeUpCost[Index] = value;
		}
	}
	public System.Single BuffValue
	{
		get
		{
			return _BuffValue[Index];
		}
		set
		{
			_BuffValue[Index] = value;
		}
	}
	public System.Single BuffIncreaseValue
	{
		get
		{
			return _BuffIncreaseValue[Index];
		}
		set
		{
			_BuffIncreaseValue[Index] = value;
		}
	}
	public StatType StatType
	{
		get
		{
			return (StatType) _StatType[Index];
		}
		set
		{
			_StatType[Index] = value;
		}
	}
	public System.Single SubValue
	{
		get
		{
			return _SubValue[Index];
		}
		set
		{
			_SubValue[Index] = value;
		}
	}
	public System.Single SubIncreseValue
	{
		get
		{
			return _SubIncreseValue[Index];
		}
		set
		{
			_SubIncreseValue[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4846404678112638170,5672120994898769569));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ArtifactType;
	public static BansheeGz.BGDatabase.BGFieldEnum _ArtifactType
	{
		get
		{
			if(_ufle12jhs77_ArtifactType==null || _ufle12jhs77_ArtifactType.IsDeleted) _ufle12jhs77_ArtifactType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5056001052833658143,290397205722834839));
			return _ufle12jhs77_ArtifactType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ArtifactGrade;
	public static BansheeGz.BGDatabase.BGFieldEnum _ArtifactGrade
	{
		get
		{
			if(_ufle12jhs77_ArtifactGrade==null || _ufle12jhs77_ArtifactGrade.IsDeleted) _ufle12jhs77_ArtifactGrade=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5497003238199914232,17388052269497477052));
			return _ufle12jhs77_ArtifactGrade;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_LevelUpCost;
	public static BansheeGz.BGDatabase.BGFieldInt _LevelUpCost
	{
		get
		{
			if(_ufle12jhs77_LevelUpCost==null || _ufle12jhs77_LevelUpCost.IsDeleted) _ufle12jhs77_LevelUpCost=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5200180736311224550,16086950599142531222));
			return _ufle12jhs77_LevelUpCost;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_LevelUpIncreaseCost;
	public static BansheeGz.BGDatabase.BGFieldInt _LevelUpIncreaseCost
	{
		get
		{
			if(_ufle12jhs77_LevelUpIncreaseCost==null || _ufle12jhs77_LevelUpIncreaseCost.IsDeleted) _ufle12jhs77_LevelUpIncreaseCost=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4706939332832002317,13187414862185368448));
			return _ufle12jhs77_LevelUpIncreaseCost;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_GradeUpCost;
	public static BansheeGz.BGDatabase.BGFieldInt _GradeUpCost
	{
		get
		{
			if(_ufle12jhs77_GradeUpCost==null || _ufle12jhs77_GradeUpCost.IsDeleted) _ufle12jhs77_GradeUpCost=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5688045894915638895,17541482235117507978));
			return _ufle12jhs77_GradeUpCost;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_BuffValue;
	public static BansheeGz.BGDatabase.BGFieldFloat _BuffValue
	{
		get
		{
			if(_ufle12jhs77_BuffValue==null || _ufle12jhs77_BuffValue.IsDeleted) _ufle12jhs77_BuffValue=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5321203265443117209,4511669058795576212));
			return _ufle12jhs77_BuffValue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_BuffIncreaseValue;
	public static BansheeGz.BGDatabase.BGFieldFloat _BuffIncreaseValue
	{
		get
		{
			if(_ufle12jhs77_BuffIncreaseValue==null || _ufle12jhs77_BuffIncreaseValue.IsDeleted) _ufle12jhs77_BuffIncreaseValue=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5695224462410470539,8425775324236239784));
			return _ufle12jhs77_BuffIncreaseValue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_StatType;
	public static BansheeGz.BGDatabase.BGFieldEnum _StatType
	{
		get
		{
			if(_ufle12jhs77_StatType==null || _ufle12jhs77_StatType.IsDeleted) _ufle12jhs77_StatType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5616336994697297207,17543245596690161324));
			return _ufle12jhs77_StatType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_SubValue;
	public static BansheeGz.BGDatabase.BGFieldFloat _SubValue
	{
		get
		{
			if(_ufle12jhs77_SubValue==null || _ufle12jhs77_SubValue.IsDeleted) _ufle12jhs77_SubValue=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5724426396010759561,2805425286165086352));
			return _ufle12jhs77_SubValue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_SubIncreseValue;
	public static BansheeGz.BGDatabase.BGFieldFloat _SubIncreseValue
	{
		get
		{
			if(_ufle12jhs77_SubIncreseValue==null || _ufle12jhs77_SubIncreseValue.IsDeleted) _ufle12jhs77_SubIncreseValue=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5713546400060523164,10822820729478532542));
			return _ufle12jhs77_SubIncreseValue;
		}
	}
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_WithArtifactGrade;
	public static BansheeGz.BGDatabase.BGKey _WithArtifactGrade
	{
		get
		{
			if(_edeht3sdad33_WithArtifactGrade==null || _edeht3sdad33_WithArtifactGrade.IsDeleted) _edeht3sdad33_WithArtifactGrade= MetaDefault.GetKey(new BGId(4878193008942936436,16022006081721917886));
			return _edeht3sdad33_WithArtifactGrade;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_ARTIFACT() : base(MetaDefault)
	{
	}
	private TBL_ARTIFACT(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_ARTIFACT(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_ARTIFACT(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_ARTIFACT FindEntity(Predicate<TBL_ARTIFACT> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_ARTIFACT) entity)) as TBL_ARTIFACT;
	}
	public static List<TBL_ARTIFACT> FindEntities(Predicate<TBL_ARTIFACT> filter, List<TBL_ARTIFACT> result=null, Comparison<TBL_ARTIFACT> sort=null)
	{
		result = result ?? new List<TBL_ARTIFACT>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_ARTIFACT) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_ARTIFACT) e1, (TBL_ARTIFACT) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_ARTIFACT) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_ARTIFACT> action, Predicate<TBL_ARTIFACT> filter=null, Comparison<TBL_ARTIFACT> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_ARTIFACT) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_ARTIFACT) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_ARTIFACT)e1,(TBL_ARTIFACT)e2));
	}
	public static TBL_ARTIFACT GetEntity(BGId entityId)
	{
		return (TBL_ARTIFACT) MetaDefault.GetEntity(entityId);
	}
	public static TBL_ARTIFACT GetEntity(int index)
	{
		return (TBL_ARTIFACT) MetaDefault[index];
	}
	public static TBL_ARTIFACT GetEntity(string entityName)
	{
		return (TBL_ARTIFACT) MetaDefault.GetEntity(entityName);
	}
	public static TBL_ARTIFACT NewEntity()
	{
		return (TBL_ARTIFACT) MetaDefault.NewEntity();
	}
	public static TBL_ARTIFACT GetEntityByKeyWithArtifactGrade(ArtifactGrade ArtifactGrade)
	{
		return (TBL_ARTIFACT) _WithArtifactGrade.GetEntityByKey(ArtifactGrade);
	}
	public static List<TBL_ARTIFACT> GetEntitiesByKeyWithArtifactGrade(ArtifactGrade ArtifactGrade)
	{
		var result = _WithArtifactGrade.GetEntitiesByKey(ArtifactGrade);
		if(result==null || result.Count==0) return null;
		var list = new List<TBL_ARTIFACT>(result.Count);
		for(var i = 0 ; i < result.Count ; i++) list.Add((TBL_ARTIFACT) result[i]);
		return list;
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_QUEST : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_QUEST(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_QUEST(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4737641918431865773,10349296186385438391));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public QuestType QuestType
	{
		get
		{
			return (QuestType) _QuestType[Index];
		}
		set
		{
			_QuestType[Index] = value;
		}
	}
	public System.Int32 CompleteCount
	{
		get
		{
			return _CompleteCount[Index];
		}
		set
		{
			_CompleteCount[Index] = value;
		}
	}
	public System.Int32 RewardCount
	{
		get
		{
			return _RewardCount[Index];
		}
		set
		{
			_RewardCount[Index] = value;
		}
	}
	public System.Boolean Loop
	{
		get
		{
			return _Loop[Index];
		}
		set
		{
			_Loop[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5242044307787969527,17121037268218249909));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_QuestType;
	public static BansheeGz.BGDatabase.BGFieldEnum _QuestType
	{
		get
		{
			if(_ufle12jhs77_QuestType==null || _ufle12jhs77_QuestType.IsDeleted) _ufle12jhs77_QuestType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5381300206191287634,4274782657743871377));
			return _ufle12jhs77_QuestType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_CompleteCount;
	public static BansheeGz.BGDatabase.BGFieldInt _CompleteCount
	{
		get
		{
			if(_ufle12jhs77_CompleteCount==null || _ufle12jhs77_CompleteCount.IsDeleted) _ufle12jhs77_CompleteCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5171258453771690651,9473974429354179968));
			return _ufle12jhs77_CompleteCount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardCount;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardCount
	{
		get
		{
			if(_ufle12jhs77_RewardCount==null || _ufle12jhs77_RewardCount.IsDeleted) _ufle12jhs77_RewardCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5363417728403555008,16444959942312130947));
			return _ufle12jhs77_RewardCount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldBool _ufle12jhs77_Loop;
	public static BansheeGz.BGDatabase.BGFieldBool _Loop
	{
		get
		{
			if(_ufle12jhs77_Loop==null || _ufle12jhs77_Loop.IsDeleted) _ufle12jhs77_Loop=(BansheeGz.BGDatabase.BGFieldBool) MetaDefault.GetField(new BGId(5055133272924195571,3649291919773869728));
			return _ufle12jhs77_Loop;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_QUEST() : base(MetaDefault)
	{
	}
	private TBL_QUEST(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_QUEST(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_QUEST(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_QUEST FindEntity(Predicate<TBL_QUEST> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_QUEST) entity)) as TBL_QUEST;
	}
	public static List<TBL_QUEST> FindEntities(Predicate<TBL_QUEST> filter, List<TBL_QUEST> result=null, Comparison<TBL_QUEST> sort=null)
	{
		result = result ?? new List<TBL_QUEST>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_QUEST) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_QUEST) e1, (TBL_QUEST) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_QUEST) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_QUEST> action, Predicate<TBL_QUEST> filter=null, Comparison<TBL_QUEST> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_QUEST) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_QUEST) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_QUEST)e1,(TBL_QUEST)e2));
	}
	public static TBL_QUEST GetEntity(BGId entityId)
	{
		return (TBL_QUEST) MetaDefault.GetEntity(entityId);
	}
	public static TBL_QUEST GetEntity(int index)
	{
		return (TBL_QUEST) MetaDefault[index];
	}
	public static TBL_QUEST GetEntity(string entityName)
	{
		return (TBL_QUEST) MetaDefault.GetEntity(entityName);
	}
	public static TBL_QUEST NewEntity()
	{
		return (TBL_QUEST) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_ACHIEVEMENT : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_ACHIEVEMENT(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_ACHIEVEMENT(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5570082819208947132,1549598080158959258));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public AchievementKind AchievementKind
	{
		get
		{
			return (AchievementKind) _AchievementKind[Index];
		}
		set
		{
			_AchievementKind[Index] = value;
		}
	}
	public System.Int32 Order
	{
		get
		{
			return _Order[Index];
		}
		set
		{
			_Order[Index] = value;
		}
	}
	public AchievementType AchievementType
	{
		get
		{
			return (AchievementType) _AchievementType[Index];
		}
		set
		{
			_AchievementType[Index] = value;
		}
	}
	public System.Double CompleteCount
	{
		get
		{
			return _CompleteCount[Index];
		}
		set
		{
			_CompleteCount[Index] = value;
		}
	}
	public System.Int32 RewardCount
	{
		get
		{
			return _RewardCount[Index];
		}
		set
		{
			_RewardCount[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5094898722444273120,13953906469606858886));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_AchievementKind;
	public static BansheeGz.BGDatabase.BGFieldEnum _AchievementKind
	{
		get
		{
			if(_ufle12jhs77_AchievementKind==null || _ufle12jhs77_AchievementKind.IsDeleted) _ufle12jhs77_AchievementKind=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4733953057463769264,14408357974958245531));
			return _ufle12jhs77_AchievementKind;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Order;
	public static BansheeGz.BGDatabase.BGFieldInt _Order
	{
		get
		{
			if(_ufle12jhs77_Order==null || _ufle12jhs77_Order.IsDeleted) _ufle12jhs77_Order=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4629272143882213731,16698501600695322299));
			return _ufle12jhs77_Order;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_AchievementType;
	public static BansheeGz.BGDatabase.BGFieldEnum _AchievementType
	{
		get
		{
			if(_ufle12jhs77_AchievementType==null || _ufle12jhs77_AchievementType.IsDeleted) _ufle12jhs77_AchievementType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4929253528140667737,8282060114930064776));
			return _ufle12jhs77_AchievementType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_CompleteCount;
	public static BansheeGz.BGDatabase.BGFieldDouble _CompleteCount
	{
		get
		{
			if(_ufle12jhs77_CompleteCount==null || _ufle12jhs77_CompleteCount.IsDeleted) _ufle12jhs77_CompleteCount=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5220672282114016254,8833762879931125680));
			return _ufle12jhs77_CompleteCount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardCount;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardCount
	{
		get
		{
			if(_ufle12jhs77_RewardCount==null || _ufle12jhs77_RewardCount.IsDeleted) _ufle12jhs77_RewardCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5647614378556127850,12424824126235993218));
			return _ufle12jhs77_RewardCount;
		}
	}
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_WithAchievementType;
	public static BansheeGz.BGDatabase.BGKey _WithAchievementType
	{
		get
		{
			if(_edeht3sdad33_WithAchievementType==null || _edeht3sdad33_WithAchievementType.IsDeleted) _edeht3sdad33_WithAchievementType= MetaDefault.GetKey(new BGId(5266385704596959266,12708790514198179226));
			return _edeht3sdad33_WithAchievementType;
		}
	}
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_WithAchievementKind;
	public static BansheeGz.BGDatabase.BGKey _WithAchievementKind
	{
		get
		{
			if(_edeht3sdad33_WithAchievementKind==null || _edeht3sdad33_WithAchievementKind.IsDeleted) _edeht3sdad33_WithAchievementKind= MetaDefault.GetKey(new BGId(5533217581247026311,5037882815249944455));
			return _edeht3sdad33_WithAchievementKind;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_ACHIEVEMENT() : base(MetaDefault)
	{
	}
	private TBL_ACHIEVEMENT(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_ACHIEVEMENT(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_ACHIEVEMENT(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_ACHIEVEMENT FindEntity(Predicate<TBL_ACHIEVEMENT> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_ACHIEVEMENT) entity)) as TBL_ACHIEVEMENT;
	}
	public static List<TBL_ACHIEVEMENT> FindEntities(Predicate<TBL_ACHIEVEMENT> filter, List<TBL_ACHIEVEMENT> result=null, Comparison<TBL_ACHIEVEMENT> sort=null)
	{
		result = result ?? new List<TBL_ACHIEVEMENT>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_ACHIEVEMENT) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_ACHIEVEMENT) e1, (TBL_ACHIEVEMENT) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_ACHIEVEMENT) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_ACHIEVEMENT> action, Predicate<TBL_ACHIEVEMENT> filter=null, Comparison<TBL_ACHIEVEMENT> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_ACHIEVEMENT) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_ACHIEVEMENT) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_ACHIEVEMENT)e1,(TBL_ACHIEVEMENT)e2));
	}
	public static TBL_ACHIEVEMENT GetEntity(BGId entityId)
	{
		return (TBL_ACHIEVEMENT) MetaDefault.GetEntity(entityId);
	}
	public static TBL_ACHIEVEMENT GetEntity(int index)
	{
		return (TBL_ACHIEVEMENT) MetaDefault[index];
	}
	public static TBL_ACHIEVEMENT GetEntity(string entityName)
	{
		return (TBL_ACHIEVEMENT) MetaDefault.GetEntity(entityName);
	}
	public static TBL_ACHIEVEMENT NewEntity()
	{
		return (TBL_ACHIEVEMENT) MetaDefault.NewEntity();
	}
	public static TBL_ACHIEVEMENT GetEntityByKeyWithAchievementType(AchievementType AchievementType)
	{
		return (TBL_ACHIEVEMENT) _WithAchievementType.GetEntityByKey(AchievementType);
	}
	public static List<TBL_ACHIEVEMENT> GetEntitiesByKeyWithAchievementType(AchievementType AchievementType)
	{
		var result = _WithAchievementType.GetEntitiesByKey(AchievementType);
		if(result==null || result.Count==0) return null;
		var list = new List<TBL_ACHIEVEMENT>(result.Count);
		for(var i = 0 ; i < result.Count ; i++) list.Add((TBL_ACHIEVEMENT) result[i]);
		return list;
	}
	public static TBL_ACHIEVEMENT GetEntityByKeyWithAchievementKind(AchievementKind AchievementKind)
	{
		return (TBL_ACHIEVEMENT) _WithAchievementKind.GetEntityByKey(AchievementKind);
	}
	public static List<TBL_ACHIEVEMENT> GetEntitiesByKeyWithAchievementKind(AchievementKind AchievementKind)
	{
		var result = _WithAchievementKind.GetEntitiesByKey(AchievementKind);
		if(result==null || result.Count==0) return null;
		var list = new List<TBL_ACHIEVEMENT>(result.Count);
		for(var i = 0 ; i < result.Count ; i++) list.Add((TBL_ACHIEVEMENT) result[i]);
		return list;
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_PLAYER_LEVEL : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_PLAYER_LEVEL(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_PLAYER_LEVEL(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5711595766574668661,10580375940355850162));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Int32 NextLevelExperience
	{
		get
		{
			return _NextLevelExperience[Index];
		}
		set
		{
			_NextLevelExperience[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5034399491879620143,5369051100259268511));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_NextLevelExperience;
	public static BansheeGz.BGDatabase.BGFieldInt _NextLevelExperience
	{
		get
		{
			if(_ufle12jhs77_NextLevelExperience==null || _ufle12jhs77_NextLevelExperience.IsDeleted) _ufle12jhs77_NextLevelExperience=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4874231127070153800,15760061189898679442));
			return _ufle12jhs77_NextLevelExperience;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_PLAYER_LEVEL() : base(MetaDefault)
	{
	}
	private TBL_PLAYER_LEVEL(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_PLAYER_LEVEL(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_PLAYER_LEVEL(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_PLAYER_LEVEL FindEntity(Predicate<TBL_PLAYER_LEVEL> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_PLAYER_LEVEL) entity)) as TBL_PLAYER_LEVEL;
	}
	public static List<TBL_PLAYER_LEVEL> FindEntities(Predicate<TBL_PLAYER_LEVEL> filter, List<TBL_PLAYER_LEVEL> result=null, Comparison<TBL_PLAYER_LEVEL> sort=null)
	{
		result = result ?? new List<TBL_PLAYER_LEVEL>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_PLAYER_LEVEL) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_PLAYER_LEVEL) e1, (TBL_PLAYER_LEVEL) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_PLAYER_LEVEL) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_PLAYER_LEVEL> action, Predicate<TBL_PLAYER_LEVEL> filter=null, Comparison<TBL_PLAYER_LEVEL> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_PLAYER_LEVEL) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_PLAYER_LEVEL) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_PLAYER_LEVEL)e1,(TBL_PLAYER_LEVEL)e2));
	}
	public static TBL_PLAYER_LEVEL GetEntity(BGId entityId)
	{
		return (TBL_PLAYER_LEVEL) MetaDefault.GetEntity(entityId);
	}
	public static TBL_PLAYER_LEVEL GetEntity(int index)
	{
		return (TBL_PLAYER_LEVEL) MetaDefault[index];
	}
	public static TBL_PLAYER_LEVEL GetEntity(string entityName)
	{
		return (TBL_PLAYER_LEVEL) MetaDefault.GetEntity(entityName);
	}
	public static TBL_PLAYER_LEVEL NewEntity()
	{
		return (TBL_PLAYER_LEVEL) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_MASTERY : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_MASTERY(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_MASTERY(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5103487260832731233,2043315269140507545));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public MasteryType MasteryType
	{
		get
		{
			return (MasteryType) _MasteryType[Index];
		}
		set
		{
			_MasteryType[Index] = value;
		}
	}
	public MasteryUnlockCondition UnlockCondition
	{
		get
		{
			return (MasteryUnlockCondition) _UnlockCondition[Index];
		}
		set
		{
			_UnlockCondition[Index] = value;
		}
	}
	public System.Int32 UnlockIndex
	{
		get
		{
			return _UnlockIndex[Index];
		}
		set
		{
			_UnlockIndex[Index] = value;
		}
	}
	public System.Int32 MaxLevel
	{
		get
		{
			return _MaxLevel[Index];
		}
		set
		{
			_MaxLevel[Index] = value;
		}
	}
	public System.Int32 Value
	{
		get
		{
			return _Value[Index];
		}
		set
		{
			_Value[Index] = value;
		}
	}
	public System.Int32 IncreaseValue
	{
		get
		{
			return _IncreaseValue[Index];
		}
		set
		{
			_IncreaseValue[Index] = value;
		}
	}
	public System.Int32 Cost
	{
		get
		{
			return _Cost[Index];
		}
		set
		{
			_Cost[Index] = value;
		}
	}
	public System.Int32 IncreaseCost
	{
		get
		{
			return _IncreaseCost[Index];
		}
		set
		{
			_IncreaseCost[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4611912276146768695,15123868128119372223));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_MasteryType;
	public static BansheeGz.BGDatabase.BGFieldEnum _MasteryType
	{
		get
		{
			if(_ufle12jhs77_MasteryType==null || _ufle12jhs77_MasteryType.IsDeleted) _ufle12jhs77_MasteryType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4820297500245736803,7303534334109203602));
			return _ufle12jhs77_MasteryType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_UnlockCondition;
	public static BansheeGz.BGDatabase.BGFieldEnum _UnlockCondition
	{
		get
		{
			if(_ufle12jhs77_UnlockCondition==null || _ufle12jhs77_UnlockCondition.IsDeleted) _ufle12jhs77_UnlockCondition=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4724104243359736929,4604253502674263459));
			return _ufle12jhs77_UnlockCondition;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_UnlockIndex;
	public static BansheeGz.BGDatabase.BGFieldInt _UnlockIndex
	{
		get
		{
			if(_ufle12jhs77_UnlockIndex==null || _ufle12jhs77_UnlockIndex.IsDeleted) _ufle12jhs77_UnlockIndex=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5513231459295108738,12770475209442669460));
			return _ufle12jhs77_UnlockIndex;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_MaxLevel;
	public static BansheeGz.BGDatabase.BGFieldInt _MaxLevel
	{
		get
		{
			if(_ufle12jhs77_MaxLevel==null || _ufle12jhs77_MaxLevel.IsDeleted) _ufle12jhs77_MaxLevel=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5170248787967545646,7849488555782210237));
			return _ufle12jhs77_MaxLevel;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Value;
	public static BansheeGz.BGDatabase.BGFieldInt _Value
	{
		get
		{
			if(_ufle12jhs77_Value==null || _ufle12jhs77_Value.IsDeleted) _ufle12jhs77_Value=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5131450213683630665,2164153301162361265));
			return _ufle12jhs77_Value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_IncreaseValue;
	public static BansheeGz.BGDatabase.BGFieldInt _IncreaseValue
	{
		get
		{
			if(_ufle12jhs77_IncreaseValue==null || _ufle12jhs77_IncreaseValue.IsDeleted) _ufle12jhs77_IncreaseValue=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5362713896080005269,10410080656188721591));
			return _ufle12jhs77_IncreaseValue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Cost;
	public static BansheeGz.BGDatabase.BGFieldInt _Cost
	{
		get
		{
			if(_ufle12jhs77_Cost==null || _ufle12jhs77_Cost.IsDeleted) _ufle12jhs77_Cost=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5699664126757979530,6061149746926842041));
			return _ufle12jhs77_Cost;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_IncreaseCost;
	public static BansheeGz.BGDatabase.BGFieldInt _IncreaseCost
	{
		get
		{
			if(_ufle12jhs77_IncreaseCost==null || _ufle12jhs77_IncreaseCost.IsDeleted) _ufle12jhs77_IncreaseCost=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5191914183494483343,10142074219308963495));
			return _ufle12jhs77_IncreaseCost;
		}
	}
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_WithMasteryType;
	public static BansheeGz.BGDatabase.BGKey _WithMasteryType
	{
		get
		{
			if(_edeht3sdad33_WithMasteryType==null || _edeht3sdad33_WithMasteryType.IsDeleted) _edeht3sdad33_WithMasteryType= MetaDefault.GetKey(new BGId(4910500243530704639,11679422644130600588));
			return _edeht3sdad33_WithMasteryType;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_MASTERY() : base(MetaDefault)
	{
	}
	private TBL_MASTERY(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_MASTERY(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_MASTERY(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_MASTERY FindEntity(Predicate<TBL_MASTERY> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_MASTERY) entity)) as TBL_MASTERY;
	}
	public static List<TBL_MASTERY> FindEntities(Predicate<TBL_MASTERY> filter, List<TBL_MASTERY> result=null, Comparison<TBL_MASTERY> sort=null)
	{
		result = result ?? new List<TBL_MASTERY>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_MASTERY) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_MASTERY) e1, (TBL_MASTERY) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_MASTERY) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_MASTERY> action, Predicate<TBL_MASTERY> filter=null, Comparison<TBL_MASTERY> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_MASTERY) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_MASTERY) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_MASTERY)e1,(TBL_MASTERY)e2));
	}
	public static TBL_MASTERY GetEntity(BGId entityId)
	{
		return (TBL_MASTERY) MetaDefault.GetEntity(entityId);
	}
	public static TBL_MASTERY GetEntity(int index)
	{
		return (TBL_MASTERY) MetaDefault[index];
	}
	public static TBL_MASTERY GetEntity(string entityName)
	{
		return (TBL_MASTERY) MetaDefault.GetEntity(entityName);
	}
	public static TBL_MASTERY NewEntity()
	{
		return (TBL_MASTERY) MetaDefault.NewEntity();
	}
	public static TBL_MASTERY GetEntityByKeyWithMasteryType(MasteryType MasteryType)
	{
		return (TBL_MASTERY) _WithMasteryType.GetEntityByKey(MasteryType);
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_GACHA_SKILL : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_GACHA_SKILL(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_GACHA_SKILL(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5673564986734287595,12614868378497427860));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Int32 RequireCount
	{
		get
		{
			return _RequireCount[Index];
		}
		set
		{
			_RequireCount[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Single> Percents
	{
		get
		{
			return _Percents[Index];
		}
		set
		{
			_Percents[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4966823784821469143,14501400591860155320));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RequireCount;
	public static BansheeGz.BGDatabase.BGFieldInt _RequireCount
	{
		get
		{
			if(_ufle12jhs77_RequireCount==null || _ufle12jhs77_RequireCount.IsDeleted) _ufle12jhs77_RequireCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5337216806674160557,7903332434961767814));
			return _ufle12jhs77_RequireCount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListFloat _ufle12jhs77_Percents;
	public static BansheeGz.BGDatabase.BGFieldListFloat _Percents
	{
		get
		{
			if(_ufle12jhs77_Percents==null || _ufle12jhs77_Percents.IsDeleted) _ufle12jhs77_Percents=(BansheeGz.BGDatabase.BGFieldListFloat) MetaDefault.GetField(new BGId(4740424394979344077,15668941769102263225));
			return _ufle12jhs77_Percents;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_GACHA_SKILL() : base(MetaDefault)
	{
	}
	private TBL_GACHA_SKILL(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_GACHA_SKILL(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_GACHA_SKILL(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_GACHA_SKILL FindEntity(Predicate<TBL_GACHA_SKILL> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_GACHA_SKILL) entity)) as TBL_GACHA_SKILL;
	}
	public static List<TBL_GACHA_SKILL> FindEntities(Predicate<TBL_GACHA_SKILL> filter, List<TBL_GACHA_SKILL> result=null, Comparison<TBL_GACHA_SKILL> sort=null)
	{
		result = result ?? new List<TBL_GACHA_SKILL>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_GACHA_SKILL) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_GACHA_SKILL) e1, (TBL_GACHA_SKILL) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_GACHA_SKILL) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_GACHA_SKILL> action, Predicate<TBL_GACHA_SKILL> filter=null, Comparison<TBL_GACHA_SKILL> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_GACHA_SKILL) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_GACHA_SKILL) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_GACHA_SKILL)e1,(TBL_GACHA_SKILL)e2));
	}
	public static TBL_GACHA_SKILL GetEntity(BGId entityId)
	{
		return (TBL_GACHA_SKILL) MetaDefault.GetEntity(entityId);
	}
	public static TBL_GACHA_SKILL GetEntity(int index)
	{
		return (TBL_GACHA_SKILL) MetaDefault[index];
	}
	public static TBL_GACHA_SKILL GetEntity(string entityName)
	{
		return (TBL_GACHA_SKILL) MetaDefault.GetEntity(entityName);
	}
	public static TBL_GACHA_SKILL NewEntity()
	{
		return (TBL_GACHA_SKILL) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_TOBEOL_UPGRADE : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_TOBEOL_UPGRADE(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_TOBEOL_UPGRADE(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4723858661087141617,16036924848183348133));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Int32 Value
	{
		get
		{
			return _Value[Index];
		}
		set
		{
			_Value[Index] = value;
		}
	}
	public System.Int32 IncreaseValue
	{
		get
		{
			return _IncreaseValue[Index];
		}
		set
		{
			_IncreaseValue[Index] = value;
		}
	}
	public System.Int32 Cost
	{
		get
		{
			return _Cost[Index];
		}
		set
		{
			_Cost[Index] = value;
		}
	}
	public System.Int32 IncreaseCost
	{
		get
		{
			return _IncreaseCost[Index];
		}
		set
		{
			_IncreaseCost[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5595403270448344472,12283609757642252207));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Value;
	public static BansheeGz.BGDatabase.BGFieldInt _Value
	{
		get
		{
			if(_ufle12jhs77_Value==null || _ufle12jhs77_Value.IsDeleted) _ufle12jhs77_Value=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5362118233528404329,11762991855018804906));
			return _ufle12jhs77_Value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_IncreaseValue;
	public static BansheeGz.BGDatabase.BGFieldInt _IncreaseValue
	{
		get
		{
			if(_ufle12jhs77_IncreaseValue==null || _ufle12jhs77_IncreaseValue.IsDeleted) _ufle12jhs77_IncreaseValue=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5019351472313417287,10068191815874486679));
			return _ufle12jhs77_IncreaseValue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Cost;
	public static BansheeGz.BGDatabase.BGFieldInt _Cost
	{
		get
		{
			if(_ufle12jhs77_Cost==null || _ufle12jhs77_Cost.IsDeleted) _ufle12jhs77_Cost=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4891108161390750652,12658206678922519231));
			return _ufle12jhs77_Cost;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_IncreaseCost;
	public static BansheeGz.BGDatabase.BGFieldInt _IncreaseCost
	{
		get
		{
			if(_ufle12jhs77_IncreaseCost==null || _ufle12jhs77_IncreaseCost.IsDeleted) _ufle12jhs77_IncreaseCost=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5166195618231979406,11518040959144719805));
			return _ufle12jhs77_IncreaseCost;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_TOBEOL_UPGRADE() : base(MetaDefault)
	{
	}
	private TBL_TOBEOL_UPGRADE(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_TOBEOL_UPGRADE(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_TOBEOL_UPGRADE(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_TOBEOL_UPGRADE FindEntity(Predicate<TBL_TOBEOL_UPGRADE> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_TOBEOL_UPGRADE) entity)) as TBL_TOBEOL_UPGRADE;
	}
	public static List<TBL_TOBEOL_UPGRADE> FindEntities(Predicate<TBL_TOBEOL_UPGRADE> filter, List<TBL_TOBEOL_UPGRADE> result=null, Comparison<TBL_TOBEOL_UPGRADE> sort=null)
	{
		result = result ?? new List<TBL_TOBEOL_UPGRADE>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_TOBEOL_UPGRADE) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_TOBEOL_UPGRADE) e1, (TBL_TOBEOL_UPGRADE) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_TOBEOL_UPGRADE) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_TOBEOL_UPGRADE> action, Predicate<TBL_TOBEOL_UPGRADE> filter=null, Comparison<TBL_TOBEOL_UPGRADE> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_TOBEOL_UPGRADE) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_TOBEOL_UPGRADE) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_TOBEOL_UPGRADE)e1,(TBL_TOBEOL_UPGRADE)e2));
	}
	public static TBL_TOBEOL_UPGRADE GetEntity(BGId entityId)
	{
		return (TBL_TOBEOL_UPGRADE) MetaDefault.GetEntity(entityId);
	}
	public static TBL_TOBEOL_UPGRADE GetEntity(int index)
	{
		return (TBL_TOBEOL_UPGRADE) MetaDefault[index];
	}
	public static TBL_TOBEOL_UPGRADE GetEntity(string entityName)
	{
		return (TBL_TOBEOL_UPGRADE) MetaDefault.GetEntity(entityName);
	}
	public static TBL_TOBEOL_UPGRADE NewEntity()
	{
		return (TBL_TOBEOL_UPGRADE) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_TOBEOL_LEVEL : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_TOBEOL_LEVEL(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_TOBEOL_LEVEL(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4798470571031267647,17316820227568371892));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Double Health
	{
		get
		{
			return _Health[Index];
		}
		set
		{
			_Health[Index] = value;
		}
	}
	public System.Int32 BuffExp
	{
		get
		{
			return _BuffExp[Index];
		}
		set
		{
			_BuffExp[Index] = value;
		}
	}
	public System.Int32 Artifact1
	{
		get
		{
			return _Artifact1[Index];
		}
		set
		{
			_Artifact1[Index] = value;
		}
	}
	public System.Int32 Artifact2
	{
		get
		{
			return _Artifact2[Index];
		}
		set
		{
			_Artifact2[Index] = value;
		}
	}
	public System.Int32 Artifact3
	{
		get
		{
			return _Artifact3[Index];
		}
		set
		{
			_Artifact3[Index] = value;
		}
	}
	public System.Int32 Artifact4
	{
		get
		{
			return _Artifact4[Index];
		}
		set
		{
			_Artifact4[Index] = value;
		}
	}
	public System.Int32 Artifact5
	{
		get
		{
			return _Artifact5[Index];
		}
		set
		{
			_Artifact5[Index] = value;
		}
	}
	public System.Int32 Artifact6
	{
		get
		{
			return _Artifact6[Index];
		}
		set
		{
			_Artifact6[Index] = value;
		}
	}
	public System.Int32 Artifact7
	{
		get
		{
			return _Artifact7[Index];
		}
		set
		{
			_Artifact7[Index] = value;
		}
	}
	public System.Int32 Artifact8
	{
		get
		{
			return _Artifact8[Index];
		}
		set
		{
			_Artifact8[Index] = value;
		}
	}
	public System.Single C_Percent
	{
		get
		{
			return _C_Percent[Index];
		}
		set
		{
			_C_Percent[Index] = value;
		}
	}
	public System.Single B_Percent
	{
		get
		{
			return _B_Percent[Index];
		}
		set
		{
			_B_Percent[Index] = value;
		}
	}
	public System.Single A_Percent
	{
		get
		{
			return _A_Percent[Index];
		}
		set
		{
			_A_Percent[Index] = value;
		}
	}
	public System.Single S_Percent
	{
		get
		{
			return _S_Percent[Index];
		}
		set
		{
			_S_Percent[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5686963593607102864,2210710741521533861));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_Health;
	public static BansheeGz.BGDatabase.BGFieldDouble _Health
	{
		get
		{
			if(_ufle12jhs77_Health==null || _ufle12jhs77_Health.IsDeleted) _ufle12jhs77_Health=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5596028015640291536,7631119290458305948));
			return _ufle12jhs77_Health;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_BuffExp;
	public static BansheeGz.BGDatabase.BGFieldInt _BuffExp
	{
		get
		{
			if(_ufle12jhs77_BuffExp==null || _ufle12jhs77_BuffExp.IsDeleted) _ufle12jhs77_BuffExp=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5456728645406673370,13194023447489787317));
			return _ufle12jhs77_BuffExp;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Artifact1;
	public static BansheeGz.BGDatabase.BGFieldInt _Artifact1
	{
		get
		{
			if(_ufle12jhs77_Artifact1==null || _ufle12jhs77_Artifact1.IsDeleted) _ufle12jhs77_Artifact1=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4954032108664114785,15506912027087153836));
			return _ufle12jhs77_Artifact1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Artifact2;
	public static BansheeGz.BGDatabase.BGFieldInt _Artifact2
	{
		get
		{
			if(_ufle12jhs77_Artifact2==null || _ufle12jhs77_Artifact2.IsDeleted) _ufle12jhs77_Artifact2=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4986884309756408181,5511780011703431556));
			return _ufle12jhs77_Artifact2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Artifact3;
	public static BansheeGz.BGDatabase.BGFieldInt _Artifact3
	{
		get
		{
			if(_ufle12jhs77_Artifact3==null || _ufle12jhs77_Artifact3.IsDeleted) _ufle12jhs77_Artifact3=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5730763957400938759,4646647520525484698));
			return _ufle12jhs77_Artifact3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Artifact4;
	public static BansheeGz.BGDatabase.BGFieldInt _Artifact4
	{
		get
		{
			if(_ufle12jhs77_Artifact4==null || _ufle12jhs77_Artifact4.IsDeleted) _ufle12jhs77_Artifact4=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5011156747563555250,15087642294143385495));
			return _ufle12jhs77_Artifact4;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Artifact5;
	public static BansheeGz.BGDatabase.BGFieldInt _Artifact5
	{
		get
		{
			if(_ufle12jhs77_Artifact5==null || _ufle12jhs77_Artifact5.IsDeleted) _ufle12jhs77_Artifact5=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5072883542466471797,14818196629170051254));
			return _ufle12jhs77_Artifact5;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Artifact6;
	public static BansheeGz.BGDatabase.BGFieldInt _Artifact6
	{
		get
		{
			if(_ufle12jhs77_Artifact6==null || _ufle12jhs77_Artifact6.IsDeleted) _ufle12jhs77_Artifact6=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4840860565467494348,7361234432022966693));
			return _ufle12jhs77_Artifact6;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Artifact7;
	public static BansheeGz.BGDatabase.BGFieldInt _Artifact7
	{
		get
		{
			if(_ufle12jhs77_Artifact7==null || _ufle12jhs77_Artifact7.IsDeleted) _ufle12jhs77_Artifact7=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4955812085658329213,17029168283683071925));
			return _ufle12jhs77_Artifact7;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Artifact8;
	public static BansheeGz.BGDatabase.BGFieldInt _Artifact8
	{
		get
		{
			if(_ufle12jhs77_Artifact8==null || _ufle12jhs77_Artifact8.IsDeleted) _ufle12jhs77_Artifact8=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5172117756902346551,4420068327682051508));
			return _ufle12jhs77_Artifact8;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_C_Percent;
	public static BansheeGz.BGDatabase.BGFieldFloat _C_Percent
	{
		get
		{
			if(_ufle12jhs77_C_Percent==null || _ufle12jhs77_C_Percent.IsDeleted) _ufle12jhs77_C_Percent=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4841935943848236456,9216558151634531221));
			return _ufle12jhs77_C_Percent;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_B_Percent;
	public static BansheeGz.BGDatabase.BGFieldFloat _B_Percent
	{
		get
		{
			if(_ufle12jhs77_B_Percent==null || _ufle12jhs77_B_Percent.IsDeleted) _ufle12jhs77_B_Percent=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5492660522736742872,8586433156281956748));
			return _ufle12jhs77_B_Percent;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_A_Percent;
	public static BansheeGz.BGDatabase.BGFieldFloat _A_Percent
	{
		get
		{
			if(_ufle12jhs77_A_Percent==null || _ufle12jhs77_A_Percent.IsDeleted) _ufle12jhs77_A_Percent=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5388626963356408239,6428523280546083472));
			return _ufle12jhs77_A_Percent;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_S_Percent;
	public static BansheeGz.BGDatabase.BGFieldFloat _S_Percent
	{
		get
		{
			if(_ufle12jhs77_S_Percent==null || _ufle12jhs77_S_Percent.IsDeleted) _ufle12jhs77_S_Percent=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5570274685376669662,9859304974507205010));
			return _ufle12jhs77_S_Percent;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_TOBEOL_LEVEL() : base(MetaDefault)
	{
	}
	private TBL_TOBEOL_LEVEL(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_TOBEOL_LEVEL(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_TOBEOL_LEVEL(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_TOBEOL_LEVEL FindEntity(Predicate<TBL_TOBEOL_LEVEL> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_TOBEOL_LEVEL) entity)) as TBL_TOBEOL_LEVEL;
	}
	public static List<TBL_TOBEOL_LEVEL> FindEntities(Predicate<TBL_TOBEOL_LEVEL> filter, List<TBL_TOBEOL_LEVEL> result=null, Comparison<TBL_TOBEOL_LEVEL> sort=null)
	{
		result = result ?? new List<TBL_TOBEOL_LEVEL>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_TOBEOL_LEVEL) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_TOBEOL_LEVEL) e1, (TBL_TOBEOL_LEVEL) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_TOBEOL_LEVEL) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_TOBEOL_LEVEL> action, Predicate<TBL_TOBEOL_LEVEL> filter=null, Comparison<TBL_TOBEOL_LEVEL> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_TOBEOL_LEVEL) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_TOBEOL_LEVEL) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_TOBEOL_LEVEL)e1,(TBL_TOBEOL_LEVEL)e2));
	}
	public static TBL_TOBEOL_LEVEL GetEntity(BGId entityId)
	{
		return (TBL_TOBEOL_LEVEL) MetaDefault.GetEntity(entityId);
	}
	public static TBL_TOBEOL_LEVEL GetEntity(int index)
	{
		return (TBL_TOBEOL_LEVEL) MetaDefault[index];
	}
	public static TBL_TOBEOL_LEVEL GetEntity(string entityName)
	{
		return (TBL_TOBEOL_LEVEL) MetaDefault.GetEntity(entityName);
	}
	public static TBL_TOBEOL_LEVEL NewEntity()
	{
		return (TBL_TOBEOL_LEVEL) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class SYSTEM_VALUE : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new SYSTEM_VALUE(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new SYSTEM_VALUE(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5297420937762523849,7693237527399371171));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Single Value
	{
		get
		{
			return _Value[Index];
		}
		set
		{
			_Value[Index] = value;
		}
	}
	public System.String Comment
	{
		get
		{
			return _Comment[Index];
		}
		set
		{
			_Comment[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4652473282154805339,13568585937771526296));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Value;
	public static BansheeGz.BGDatabase.BGFieldFloat _Value
	{
		get
		{
			if(_ufle12jhs77_Value==null || _ufle12jhs77_Value.IsDeleted) _ufle12jhs77_Value=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5339808213594297786,18119556056744813994));
			return _ufle12jhs77_Value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Comment;
	public static BansheeGz.BGDatabase.BGFieldString _Comment
	{
		get
		{
			if(_ufle12jhs77_Comment==null || _ufle12jhs77_Comment.IsDeleted) _ufle12jhs77_Comment=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5299389361611145551,6775893413026004391));
			return _ufle12jhs77_Comment;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private SYSTEM_VALUE() : base(MetaDefault)
	{
	}
	private SYSTEM_VALUE(BGId id) : base(MetaDefault, id)
	{
	}
	private SYSTEM_VALUE(BGMetaEntity meta) : base(meta)
	{
	}
	private SYSTEM_VALUE(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static SYSTEM_VALUE FindEntity(Predicate<SYSTEM_VALUE> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((SYSTEM_VALUE) entity)) as SYSTEM_VALUE;
	}
	public static List<SYSTEM_VALUE> FindEntities(Predicate<SYSTEM_VALUE> filter, List<SYSTEM_VALUE> result=null, Comparison<SYSTEM_VALUE> sort=null)
	{
		result = result ?? new List<SYSTEM_VALUE>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((SYSTEM_VALUE) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((SYSTEM_VALUE) e1, (SYSTEM_VALUE) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((SYSTEM_VALUE) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<SYSTEM_VALUE> action, Predicate<SYSTEM_VALUE> filter=null, Comparison<SYSTEM_VALUE> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((SYSTEM_VALUE) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((SYSTEM_VALUE) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((SYSTEM_VALUE)e1,(SYSTEM_VALUE)e2));
	}
	public static SYSTEM_VALUE GetEntity(BGId entityId)
	{
		return (SYSTEM_VALUE) MetaDefault.GetEntity(entityId);
	}
	public static SYSTEM_VALUE GetEntity(int index)
	{
		return (SYSTEM_VALUE) MetaDefault[index];
	}
	public static SYSTEM_VALUE GetEntity(string entityName)
	{
		return (SYSTEM_VALUE) MetaDefault.GetEntity(entityName);
	}
	public static SYSTEM_VALUE NewEntity()
	{
		return (SYSTEM_VALUE) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_DUNGEON1_MONSTER_GROUP : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_DUNGEON1_MONSTER_GROUP(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_DUNGEON1_MONSTER_GROUP(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5388557347569941968,701781625701742756));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Boolean> Row1
	{
		get
		{
			return _Row1[Index];
		}
		set
		{
			_Row1[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Boolean> Row2
	{
		get
		{
			return _Row2[Index];
		}
		set
		{
			_Row2[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Boolean> Row3
	{
		get
		{
			return _Row3[Index];
		}
		set
		{
			_Row3[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Boolean> Row4
	{
		get
		{
			return _Row4[Index];
		}
		set
		{
			_Row4[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Boolean> Row5
	{
		get
		{
			return _Row5[Index];
		}
		set
		{
			_Row5[Index] = value;
		}
	}
	public TBL_MONSTER MonsterRow1
	{
		get
		{
			return (TBL_MONSTER) _MonsterRow1[Index];
		}
		set
		{
			_MonsterRow1[Index] = value;
		}
	}
	public TBL_MONSTER MonsterRow2
	{
		get
		{
			return (TBL_MONSTER) _MonsterRow2[Index];
		}
		set
		{
			_MonsterRow2[Index] = value;
		}
	}
	public TBL_MONSTER MonsterRow3
	{
		get
		{
			return (TBL_MONSTER) _MonsterRow3[Index];
		}
		set
		{
			_MonsterRow3[Index] = value;
		}
	}
	public TBL_MONSTER MonsterRow4
	{
		get
		{
			return (TBL_MONSTER) _MonsterRow4[Index];
		}
		set
		{
			_MonsterRow4[Index] = value;
		}
	}
	public TBL_MONSTER MonsterRow5
	{
		get
		{
			return (TBL_MONSTER) _MonsterRow5[Index];
		}
		set
		{
			_MonsterRow5[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5634874614125082556,841326837535530669));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListBool _ufle12jhs77_Row1;
	public static BansheeGz.BGDatabase.BGFieldListBool _Row1
	{
		get
		{
			if(_ufle12jhs77_Row1==null || _ufle12jhs77_Row1.IsDeleted) _ufle12jhs77_Row1=(BansheeGz.BGDatabase.BGFieldListBool) MetaDefault.GetField(new BGId(4936030152633023537,16040165815137112732));
			return _ufle12jhs77_Row1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListBool _ufle12jhs77_Row2;
	public static BansheeGz.BGDatabase.BGFieldListBool _Row2
	{
		get
		{
			if(_ufle12jhs77_Row2==null || _ufle12jhs77_Row2.IsDeleted) _ufle12jhs77_Row2=(BansheeGz.BGDatabase.BGFieldListBool) MetaDefault.GetField(new BGId(5262210735684546187,11222864337167897479));
			return _ufle12jhs77_Row2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListBool _ufle12jhs77_Row3;
	public static BansheeGz.BGDatabase.BGFieldListBool _Row3
	{
		get
		{
			if(_ufle12jhs77_Row3==null || _ufle12jhs77_Row3.IsDeleted) _ufle12jhs77_Row3=(BansheeGz.BGDatabase.BGFieldListBool) MetaDefault.GetField(new BGId(4990598074630062732,11289851080834516105));
			return _ufle12jhs77_Row3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListBool _ufle12jhs77_Row4;
	public static BansheeGz.BGDatabase.BGFieldListBool _Row4
	{
		get
		{
			if(_ufle12jhs77_Row4==null || _ufle12jhs77_Row4.IsDeleted) _ufle12jhs77_Row4=(BansheeGz.BGDatabase.BGFieldListBool) MetaDefault.GetField(new BGId(4671142192138727818,324212141664564406));
			return _ufle12jhs77_Row4;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListBool _ufle12jhs77_Row5;
	public static BansheeGz.BGDatabase.BGFieldListBool _Row5
	{
		get
		{
			if(_ufle12jhs77_Row5==null || _ufle12jhs77_Row5.IsDeleted) _ufle12jhs77_Row5=(BansheeGz.BGDatabase.BGFieldListBool) MetaDefault.GetField(new BGId(4745793011033896782,2273300838288987013));
			return _ufle12jhs77_Row5;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_MonsterRow1;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _MonsterRow1
	{
		get
		{
			if(_ufle12jhs77_MonsterRow1==null || _ufle12jhs77_MonsterRow1.IsDeleted) _ufle12jhs77_MonsterRow1=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5309076043621162331,16550839331190123137));
			return _ufle12jhs77_MonsterRow1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_MonsterRow2;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _MonsterRow2
	{
		get
		{
			if(_ufle12jhs77_MonsterRow2==null || _ufle12jhs77_MonsterRow2.IsDeleted) _ufle12jhs77_MonsterRow2=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5366545453943433379,14872504743048764823));
			return _ufle12jhs77_MonsterRow2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_MonsterRow3;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _MonsterRow3
	{
		get
		{
			if(_ufle12jhs77_MonsterRow3==null || _ufle12jhs77_MonsterRow3.IsDeleted) _ufle12jhs77_MonsterRow3=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4864816999766182961,9071753271225920405));
			return _ufle12jhs77_MonsterRow3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_MonsterRow4;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _MonsterRow4
	{
		get
		{
			if(_ufle12jhs77_MonsterRow4==null || _ufle12jhs77_MonsterRow4.IsDeleted) _ufle12jhs77_MonsterRow4=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4666412041224519630,191550895019975337));
			return _ufle12jhs77_MonsterRow4;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_MonsterRow5;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _MonsterRow5
	{
		get
		{
			if(_ufle12jhs77_MonsterRow5==null || _ufle12jhs77_MonsterRow5.IsDeleted) _ufle12jhs77_MonsterRow5=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4841059032274003061,6356874548074100113));
			return _ufle12jhs77_MonsterRow5;
		}
	}
	private static readonly List<BGEntity> _tugjbyuhfv_reusableList = new List<BGEntity>();
	public List<TBL_DUNGEON1> RelatedTBL_DUNGEON1ListUsingWave1Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON1._Wave1.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON1>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON1) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON1> RelatedTBL_DUNGEON1ListUsingWave2Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON1._Wave2.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON1>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON1) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON1> RelatedTBL_DUNGEON1ListUsingWave3Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON1._Wave3.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON1>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON1) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON1> RelatedTBL_DUNGEON1ListUsingWave4Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON1._Wave4.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON1>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON1) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON1> RelatedTBL_DUNGEON1ListUsingWave5Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON1._Wave5.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON1>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON1) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_DUNGEON1_MONSTER_GROUP() : base(MetaDefault)
	{
	}
	private TBL_DUNGEON1_MONSTER_GROUP(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_DUNGEON1_MONSTER_GROUP(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_DUNGEON1_MONSTER_GROUP(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_DUNGEON1_MONSTER_GROUP FindEntity(Predicate<TBL_DUNGEON1_MONSTER_GROUP> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_DUNGEON1_MONSTER_GROUP) entity)) as TBL_DUNGEON1_MONSTER_GROUP;
	}
	public static List<TBL_DUNGEON1_MONSTER_GROUP> FindEntities(Predicate<TBL_DUNGEON1_MONSTER_GROUP> filter, List<TBL_DUNGEON1_MONSTER_GROUP> result=null, Comparison<TBL_DUNGEON1_MONSTER_GROUP> sort=null)
	{
		result = result ?? new List<TBL_DUNGEON1_MONSTER_GROUP>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_DUNGEON1_MONSTER_GROUP) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_DUNGEON1_MONSTER_GROUP) e1, (TBL_DUNGEON1_MONSTER_GROUP) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_DUNGEON1_MONSTER_GROUP) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_DUNGEON1_MONSTER_GROUP> action, Predicate<TBL_DUNGEON1_MONSTER_GROUP> filter=null, Comparison<TBL_DUNGEON1_MONSTER_GROUP> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_DUNGEON1_MONSTER_GROUP) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_DUNGEON1_MONSTER_GROUP) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_DUNGEON1_MONSTER_GROUP)e1,(TBL_DUNGEON1_MONSTER_GROUP)e2));
	}
	public static TBL_DUNGEON1_MONSTER_GROUP GetEntity(BGId entityId)
	{
		return (TBL_DUNGEON1_MONSTER_GROUP) MetaDefault.GetEntity(entityId);
	}
	public static TBL_DUNGEON1_MONSTER_GROUP GetEntity(int index)
	{
		return (TBL_DUNGEON1_MONSTER_GROUP) MetaDefault[index];
	}
	public static TBL_DUNGEON1_MONSTER_GROUP GetEntity(string entityName)
	{
		return (TBL_DUNGEON1_MONSTER_GROUP) MetaDefault.GetEntity(entityName);
	}
	public static TBL_DUNGEON1_MONSTER_GROUP NewEntity()
	{
		return (TBL_DUNGEON1_MONSTER_GROUP) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_DUNGEON1 : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_DUNGEON1(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_DUNGEON1(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5337089662072089933,11370460493514870953));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public TBL_DUNGEON1_MONSTER_GROUP Wave1
	{
		get
		{
			return (TBL_DUNGEON1_MONSTER_GROUP) _Wave1[Index];
		}
		set
		{
			_Wave1[Index] = value;
		}
	}
	public TBL_DUNGEON1_MONSTER_GROUP Wave2
	{
		get
		{
			return (TBL_DUNGEON1_MONSTER_GROUP) _Wave2[Index];
		}
		set
		{
			_Wave2[Index] = value;
		}
	}
	public TBL_DUNGEON1_MONSTER_GROUP Wave3
	{
		get
		{
			return (TBL_DUNGEON1_MONSTER_GROUP) _Wave3[Index];
		}
		set
		{
			_Wave3[Index] = value;
		}
	}
	public TBL_DUNGEON1_MONSTER_GROUP Wave4
	{
		get
		{
			return (TBL_DUNGEON1_MONSTER_GROUP) _Wave4[Index];
		}
		set
		{
			_Wave4[Index] = value;
		}
	}
	public TBL_DUNGEON1_MONSTER_GROUP Wave5
	{
		get
		{
			return (TBL_DUNGEON1_MONSTER_GROUP) _Wave5[Index];
		}
		set
		{
			_Wave5[Index] = value;
		}
	}
	public System.Double DamageFactor
	{
		get
		{
			return _DamageFactor[Index];
		}
		set
		{
			_DamageFactor[Index] = value;
		}
	}
	public System.Double HealthFactor
	{
		get
		{
			return _HealthFactor[Index];
		}
		set
		{
			_HealthFactor[Index] = value;
		}
	}
	public RewardType RewardType1
	{
		get
		{
			return (RewardType) _RewardType1[Index];
		}
		set
		{
			_RewardType1[Index] = value;
		}
	}
	public System.Int32 RewardValue1
	{
		get
		{
			return _RewardValue1[Index];
		}
		set
		{
			_RewardValue1[Index] = value;
		}
	}
	public System.Int32 RewardCount1
	{
		get
		{
			return _RewardCount1[Index];
		}
		set
		{
			_RewardCount1[Index] = value;
		}
	}
	public RewardType RewardType2
	{
		get
		{
			return (RewardType) _RewardType2[Index];
		}
		set
		{
			_RewardType2[Index] = value;
		}
	}
	public System.Int32 RewardValue2
	{
		get
		{
			return _RewardValue2[Index];
		}
		set
		{
			_RewardValue2[Index] = value;
		}
	}
	public System.Int32 RewardCount2
	{
		get
		{
			return _RewardCount2[Index];
		}
		set
		{
			_RewardCount2[Index] = value;
		}
	}
	public RewardType RewardType3
	{
		get
		{
			return (RewardType) _RewardType3[Index];
		}
		set
		{
			_RewardType3[Index] = value;
		}
	}
	public System.Int32 RewardValue3
	{
		get
		{
			return _RewardValue3[Index];
		}
		set
		{
			_RewardValue3[Index] = value;
		}
	}
	public System.Int32 RewardCount3
	{
		get
		{
			return _RewardCount3[Index];
		}
		set
		{
			_RewardCount3[Index] = value;
		}
	}
	public System.Single DamageFactor_old
	{
		get
		{
			return _DamageFactor_old[Index];
		}
		set
		{
			_DamageFactor_old[Index] = value;
		}
	}
	public System.Single HealthFactor_old
	{
		get
		{
			return _HealthFactor_old[Index];
		}
		set
		{
			_HealthFactor_old[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5721221940879028537,10702027952630598826));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave1;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave1
	{
		get
		{
			if(_ufle12jhs77_Wave1==null || _ufle12jhs77_Wave1.IsDeleted) _ufle12jhs77_Wave1=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5332432811527232017,15856462532001231238));
			return _ufle12jhs77_Wave1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave2;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave2
	{
		get
		{
			if(_ufle12jhs77_Wave2==null || _ufle12jhs77_Wave2.IsDeleted) _ufle12jhs77_Wave2=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5674584236673900341,11696961081652791972));
			return _ufle12jhs77_Wave2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave3;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave3
	{
		get
		{
			if(_ufle12jhs77_Wave3==null || _ufle12jhs77_Wave3.IsDeleted) _ufle12jhs77_Wave3=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5712354890053207664,4710511215164125085));
			return _ufle12jhs77_Wave3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave4;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave4
	{
		get
		{
			if(_ufle12jhs77_Wave4==null || _ufle12jhs77_Wave4.IsDeleted) _ufle12jhs77_Wave4=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5463765012250217932,3162285590231393215));
			return _ufle12jhs77_Wave4;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave5;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave5
	{
		get
		{
			if(_ufle12jhs77_Wave5==null || _ufle12jhs77_Wave5.IsDeleted) _ufle12jhs77_Wave5=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5337616371505802634,508196899787090563));
			return _ufle12jhs77_Wave5;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_DamageFactor;
	public static BansheeGz.BGDatabase.BGFieldDouble _DamageFactor
	{
		get
		{
			if(_ufle12jhs77_DamageFactor==null || _ufle12jhs77_DamageFactor.IsDeleted) _ufle12jhs77_DamageFactor=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5520716901797263698,7335696348459596196));
			return _ufle12jhs77_DamageFactor;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_HealthFactor;
	public static BansheeGz.BGDatabase.BGFieldDouble _HealthFactor
	{
		get
		{
			if(_ufle12jhs77_HealthFactor==null || _ufle12jhs77_HealthFactor.IsDeleted) _ufle12jhs77_HealthFactor=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5490233892788364966,10778048376551878298));
			return _ufle12jhs77_HealthFactor;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_RewardType1;
	public static BansheeGz.BGDatabase.BGFieldEnum _RewardType1
	{
		get
		{
			if(_ufle12jhs77_RewardType1==null || _ufle12jhs77_RewardType1.IsDeleted) _ufle12jhs77_RewardType1=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4881246462456801585,583567233064479153));
			return _ufle12jhs77_RewardType1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardValue1;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardValue1
	{
		get
		{
			if(_ufle12jhs77_RewardValue1==null || _ufle12jhs77_RewardValue1.IsDeleted) _ufle12jhs77_RewardValue1=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5654360020189625332,7938425482056000186));
			return _ufle12jhs77_RewardValue1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardCount1;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardCount1
	{
		get
		{
			if(_ufle12jhs77_RewardCount1==null || _ufle12jhs77_RewardCount1.IsDeleted) _ufle12jhs77_RewardCount1=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5302646650517658393,12886959592162150035));
			return _ufle12jhs77_RewardCount1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_RewardType2;
	public static BansheeGz.BGDatabase.BGFieldEnum _RewardType2
	{
		get
		{
			if(_ufle12jhs77_RewardType2==null || _ufle12jhs77_RewardType2.IsDeleted) _ufle12jhs77_RewardType2=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4990925159826686484,7007344521368193420));
			return _ufle12jhs77_RewardType2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardValue2;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardValue2
	{
		get
		{
			if(_ufle12jhs77_RewardValue2==null || _ufle12jhs77_RewardValue2.IsDeleted) _ufle12jhs77_RewardValue2=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5761031958498060688,8795651300765017525));
			return _ufle12jhs77_RewardValue2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardCount2;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardCount2
	{
		get
		{
			if(_ufle12jhs77_RewardCount2==null || _ufle12jhs77_RewardCount2.IsDeleted) _ufle12jhs77_RewardCount2=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4980964314662225057,5914093812312404402));
			return _ufle12jhs77_RewardCount2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_RewardType3;
	public static BansheeGz.BGDatabase.BGFieldEnum _RewardType3
	{
		get
		{
			if(_ufle12jhs77_RewardType3==null || _ufle12jhs77_RewardType3.IsDeleted) _ufle12jhs77_RewardType3=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5029948474078744911,763345216210468287));
			return _ufle12jhs77_RewardType3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardValue3;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardValue3
	{
		get
		{
			if(_ufle12jhs77_RewardValue3==null || _ufle12jhs77_RewardValue3.IsDeleted) _ufle12jhs77_RewardValue3=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4817955213349701887,10786307860230072215));
			return _ufle12jhs77_RewardValue3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardCount3;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardCount3
	{
		get
		{
			if(_ufle12jhs77_RewardCount3==null || _ufle12jhs77_RewardCount3.IsDeleted) _ufle12jhs77_RewardCount3=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5523503387366752600,9674165624526946690));
			return _ufle12jhs77_RewardCount3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_DamageFactor_old;
	public static BansheeGz.BGDatabase.BGFieldFloat _DamageFactor_old
	{
		get
		{
			if(_ufle12jhs77_DamageFactor_old==null || _ufle12jhs77_DamageFactor_old.IsDeleted) _ufle12jhs77_DamageFactor_old=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4818433109575462667,3919825435982801062));
			return _ufle12jhs77_DamageFactor_old;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_HealthFactor_old;
	public static BansheeGz.BGDatabase.BGFieldFloat _HealthFactor_old
	{
		get
		{
			if(_ufle12jhs77_HealthFactor_old==null || _ufle12jhs77_HealthFactor_old.IsDeleted) _ufle12jhs77_HealthFactor_old=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4875325029959895564,9513596587573647290));
			return _ufle12jhs77_HealthFactor_old;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_DUNGEON1() : base(MetaDefault)
	{
	}
	private TBL_DUNGEON1(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_DUNGEON1(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_DUNGEON1(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_DUNGEON1 FindEntity(Predicate<TBL_DUNGEON1> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_DUNGEON1) entity)) as TBL_DUNGEON1;
	}
	public static List<TBL_DUNGEON1> FindEntities(Predicate<TBL_DUNGEON1> filter, List<TBL_DUNGEON1> result=null, Comparison<TBL_DUNGEON1> sort=null)
	{
		result = result ?? new List<TBL_DUNGEON1>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_DUNGEON1) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_DUNGEON1) e1, (TBL_DUNGEON1) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_DUNGEON1) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_DUNGEON1> action, Predicate<TBL_DUNGEON1> filter=null, Comparison<TBL_DUNGEON1> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_DUNGEON1) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_DUNGEON1) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_DUNGEON1)e1,(TBL_DUNGEON1)e2));
	}
	public static TBL_DUNGEON1 GetEntity(BGId entityId)
	{
		return (TBL_DUNGEON1) MetaDefault.GetEntity(entityId);
	}
	public static TBL_DUNGEON1 GetEntity(int index)
	{
		return (TBL_DUNGEON1) MetaDefault[index];
	}
	public static TBL_DUNGEON1 GetEntity(string entityName)
	{
		return (TBL_DUNGEON1) MetaDefault.GetEntity(entityName);
	}
	public static TBL_DUNGEON1 NewEntity()
	{
		return (TBL_DUNGEON1) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_DUNGEON : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_DUNGEON(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_DUNGEON(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4697540971076702077,11908569761326721727));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public DungeonType DungeonType
	{
		get
		{
			return (DungeonType) _DungeonType[Index];
		}
		set
		{
			_DungeonType[Index] = value;
		}
	}
	public TribeType TribeType
	{
		get
		{
			return (TribeType) _TribeType[Index];
		}
		set
		{
			_TribeType[Index] = value;
		}
	}
	public BackgroundType BackgroundType
	{
		get
		{
			return (BackgroundType) _BackgroundType[Index];
		}
		set
		{
			_BackgroundType[Index] = value;
		}
	}
	public System.Single Wave1_HealthBuff
	{
		get
		{
			return _Wave1_HealthBuff[Index];
		}
		set
		{
			_Wave1_HealthBuff[Index] = value;
		}
	}
	public System.Single Wave2_HealthBuff
	{
		get
		{
			return _Wave2_HealthBuff[Index];
		}
		set
		{
			_Wave2_HealthBuff[Index] = value;
		}
	}
	public System.Single Wave3_HealthBuff
	{
		get
		{
			return _Wave3_HealthBuff[Index];
		}
		set
		{
			_Wave3_HealthBuff[Index] = value;
		}
	}
	public System.Single Wave4_HealthBuff
	{
		get
		{
			return _Wave4_HealthBuff[Index];
		}
		set
		{
			_Wave4_HealthBuff[Index] = value;
		}
	}
	public System.Single Wave5_HealthBuff
	{
		get
		{
			return _Wave5_HealthBuff[Index];
		}
		set
		{
			_Wave5_HealthBuff[Index] = value;
		}
	}
	public System.Single Wave1_DamageBuff
	{
		get
		{
			return _Wave1_DamageBuff[Index];
		}
		set
		{
			_Wave1_DamageBuff[Index] = value;
		}
	}
	public System.Single Wave2_DamageBuff
	{
		get
		{
			return _Wave2_DamageBuff[Index];
		}
		set
		{
			_Wave2_DamageBuff[Index] = value;
		}
	}
	public System.Single Wave3_DamageBuff
	{
		get
		{
			return _Wave3_DamageBuff[Index];
		}
		set
		{
			_Wave3_DamageBuff[Index] = value;
		}
	}
	public System.Single Wave4_DamageBuff
	{
		get
		{
			return _Wave4_DamageBuff[Index];
		}
		set
		{
			_Wave4_DamageBuff[Index] = value;
		}
	}
	public System.Single Wave5_DamageBuff
	{
		get
		{
			return _Wave5_DamageBuff[Index];
		}
		set
		{
			_Wave5_DamageBuff[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5515532441358272766,6072710970254601141));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_DungeonType;
	public static BansheeGz.BGDatabase.BGFieldEnum _DungeonType
	{
		get
		{
			if(_ufle12jhs77_DungeonType==null || _ufle12jhs77_DungeonType.IsDeleted) _ufle12jhs77_DungeonType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4997143195315660078,7551832767822437786));
			return _ufle12jhs77_DungeonType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_TribeType;
	public static BansheeGz.BGDatabase.BGFieldEnum _TribeType
	{
		get
		{
			if(_ufle12jhs77_TribeType==null || _ufle12jhs77_TribeType.IsDeleted) _ufle12jhs77_TribeType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5241160936602564767,11127898156902507961));
			return _ufle12jhs77_TribeType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_BackgroundType;
	public static BansheeGz.BGDatabase.BGFieldEnum _BackgroundType
	{
		get
		{
			if(_ufle12jhs77_BackgroundType==null || _ufle12jhs77_BackgroundType.IsDeleted) _ufle12jhs77_BackgroundType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4726212050186159323,9801538613253964448));
			return _ufle12jhs77_BackgroundType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Wave1_HealthBuff;
	public static BansheeGz.BGDatabase.BGFieldFloat _Wave1_HealthBuff
	{
		get
		{
			if(_ufle12jhs77_Wave1_HealthBuff==null || _ufle12jhs77_Wave1_HealthBuff.IsDeleted) _ufle12jhs77_Wave1_HealthBuff=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5198568895975338790,95134789721110453));
			return _ufle12jhs77_Wave1_HealthBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Wave2_HealthBuff;
	public static BansheeGz.BGDatabase.BGFieldFloat _Wave2_HealthBuff
	{
		get
		{
			if(_ufle12jhs77_Wave2_HealthBuff==null || _ufle12jhs77_Wave2_HealthBuff.IsDeleted) _ufle12jhs77_Wave2_HealthBuff=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5410595984636836845,505750852939291554));
			return _ufle12jhs77_Wave2_HealthBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Wave3_HealthBuff;
	public static BansheeGz.BGDatabase.BGFieldFloat _Wave3_HealthBuff
	{
		get
		{
			if(_ufle12jhs77_Wave3_HealthBuff==null || _ufle12jhs77_Wave3_HealthBuff.IsDeleted) _ufle12jhs77_Wave3_HealthBuff=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4742433982703199203,14367924733554266535));
			return _ufle12jhs77_Wave3_HealthBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Wave4_HealthBuff;
	public static BansheeGz.BGDatabase.BGFieldFloat _Wave4_HealthBuff
	{
		get
		{
			if(_ufle12jhs77_Wave4_HealthBuff==null || _ufle12jhs77_Wave4_HealthBuff.IsDeleted) _ufle12jhs77_Wave4_HealthBuff=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4732143793352492474,9409131879360359823));
			return _ufle12jhs77_Wave4_HealthBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Wave5_HealthBuff;
	public static BansheeGz.BGDatabase.BGFieldFloat _Wave5_HealthBuff
	{
		get
		{
			if(_ufle12jhs77_Wave5_HealthBuff==null || _ufle12jhs77_Wave5_HealthBuff.IsDeleted) _ufle12jhs77_Wave5_HealthBuff=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4821537418061149142,6690228220424183220));
			return _ufle12jhs77_Wave5_HealthBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Wave1_DamageBuff;
	public static BansheeGz.BGDatabase.BGFieldFloat _Wave1_DamageBuff
	{
		get
		{
			if(_ufle12jhs77_Wave1_DamageBuff==null || _ufle12jhs77_Wave1_DamageBuff.IsDeleted) _ufle12jhs77_Wave1_DamageBuff=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5170231873162293287,17004372458470390971));
			return _ufle12jhs77_Wave1_DamageBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Wave2_DamageBuff;
	public static BansheeGz.BGDatabase.BGFieldFloat _Wave2_DamageBuff
	{
		get
		{
			if(_ufle12jhs77_Wave2_DamageBuff==null || _ufle12jhs77_Wave2_DamageBuff.IsDeleted) _ufle12jhs77_Wave2_DamageBuff=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5620789455414623036,13474945012496812955));
			return _ufle12jhs77_Wave2_DamageBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Wave3_DamageBuff;
	public static BansheeGz.BGDatabase.BGFieldFloat _Wave3_DamageBuff
	{
		get
		{
			if(_ufle12jhs77_Wave3_DamageBuff==null || _ufle12jhs77_Wave3_DamageBuff.IsDeleted) _ufle12jhs77_Wave3_DamageBuff=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5472566283622457516,16089334216436631998));
			return _ufle12jhs77_Wave3_DamageBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Wave4_DamageBuff;
	public static BansheeGz.BGDatabase.BGFieldFloat _Wave4_DamageBuff
	{
		get
		{
			if(_ufle12jhs77_Wave4_DamageBuff==null || _ufle12jhs77_Wave4_DamageBuff.IsDeleted) _ufle12jhs77_Wave4_DamageBuff=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5749409533872929633,17717995536845383860));
			return _ufle12jhs77_Wave4_DamageBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Wave5_DamageBuff;
	public static BansheeGz.BGDatabase.BGFieldFloat _Wave5_DamageBuff
	{
		get
		{
			if(_ufle12jhs77_Wave5_DamageBuff==null || _ufle12jhs77_Wave5_DamageBuff.IsDeleted) _ufle12jhs77_Wave5_DamageBuff=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5330893385859311154,11131487884829781159));
			return _ufle12jhs77_Wave5_DamageBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_WithDungeonType;
	public static BansheeGz.BGDatabase.BGKey _WithDungeonType
	{
		get
		{
			if(_edeht3sdad33_WithDungeonType==null || _edeht3sdad33_WithDungeonType.IsDeleted) _edeht3sdad33_WithDungeonType= MetaDefault.GetKey(new BGId(5047213082917020872,16456405238310488230));
			return _edeht3sdad33_WithDungeonType;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_DUNGEON() : base(MetaDefault)
	{
	}
	private TBL_DUNGEON(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_DUNGEON(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_DUNGEON(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_DUNGEON FindEntity(Predicate<TBL_DUNGEON> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_DUNGEON) entity)) as TBL_DUNGEON;
	}
	public static List<TBL_DUNGEON> FindEntities(Predicate<TBL_DUNGEON> filter, List<TBL_DUNGEON> result=null, Comparison<TBL_DUNGEON> sort=null)
	{
		result = result ?? new List<TBL_DUNGEON>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_DUNGEON) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_DUNGEON) e1, (TBL_DUNGEON) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_DUNGEON) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_DUNGEON> action, Predicate<TBL_DUNGEON> filter=null, Comparison<TBL_DUNGEON> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_DUNGEON) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_DUNGEON) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_DUNGEON)e1,(TBL_DUNGEON)e2));
	}
	public static TBL_DUNGEON GetEntity(BGId entityId)
	{
		return (TBL_DUNGEON) MetaDefault.GetEntity(entityId);
	}
	public static TBL_DUNGEON GetEntity(int index)
	{
		return (TBL_DUNGEON) MetaDefault[index];
	}
	public static TBL_DUNGEON GetEntity(string entityName)
	{
		return (TBL_DUNGEON) MetaDefault.GetEntity(entityName);
	}
	public static TBL_DUNGEON NewEntity()
	{
		return (TBL_DUNGEON) MetaDefault.NewEntity();
	}
	public static TBL_DUNGEON GetEntityByKeyWithDungeonType(DungeonType DungeonType)
	{
		return (TBL_DUNGEON) _WithDungeonType.GetEntityByKey(DungeonType);
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_LOCK : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_LOCK(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_LOCK(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5389298826900998590,5410307225082486957));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public UIType UIType
	{
		get
		{
			return (UIType) _UIType[Index];
		}
		set
		{
			_UIType[Index] = value;
		}
	}
	public UnLockConditionType UnLockConditionType
	{
		get
		{
			return (UnLockConditionType) _UnLockConditionType[Index];
		}
		set
		{
			_UnLockConditionType[Index] = value;
		}
	}
	public System.Int32 Value
	{
		get
		{
			return _Value[Index];
		}
		set
		{
			_Value[Index] = value;
		}
	}
	public System.Boolean IgnorePopup
	{
		get
		{
			return _IgnorePopup[Index];
		}
		set
		{
			_IgnorePopup[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4847217886962972960,4584467199288798349));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_UIType;
	public static BansheeGz.BGDatabase.BGFieldEnum _UIType
	{
		get
		{
			if(_ufle12jhs77_UIType==null || _ufle12jhs77_UIType.IsDeleted) _ufle12jhs77_UIType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5410812658694901023,13183015632382769075));
			return _ufle12jhs77_UIType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_UnLockConditionType;
	public static BansheeGz.BGDatabase.BGFieldEnum _UnLockConditionType
	{
		get
		{
			if(_ufle12jhs77_UnLockConditionType==null || _ufle12jhs77_UnLockConditionType.IsDeleted) _ufle12jhs77_UnLockConditionType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5408139615676162952,16322390404616741262));
			return _ufle12jhs77_UnLockConditionType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Value;
	public static BansheeGz.BGDatabase.BGFieldInt _Value
	{
		get
		{
			if(_ufle12jhs77_Value==null || _ufle12jhs77_Value.IsDeleted) _ufle12jhs77_Value=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5664202261885673721,8787243030791959220));
			return _ufle12jhs77_Value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldBool _ufle12jhs77_IgnorePopup;
	public static BansheeGz.BGDatabase.BGFieldBool _IgnorePopup
	{
		get
		{
			if(_ufle12jhs77_IgnorePopup==null || _ufle12jhs77_IgnorePopup.IsDeleted) _ufle12jhs77_IgnorePopup=(BansheeGz.BGDatabase.BGFieldBool) MetaDefault.GetField(new BGId(5414700319657055788,843353078531643814));
			return _ufle12jhs77_IgnorePopup;
		}
	}
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_WithUIType;
	public static BansheeGz.BGDatabase.BGKey _WithUIType
	{
		get
		{
			if(_edeht3sdad33_WithUIType==null || _edeht3sdad33_WithUIType.IsDeleted) _edeht3sdad33_WithUIType= MetaDefault.GetKey(new BGId(5570707627417359052,16170260041821087412));
			return _edeht3sdad33_WithUIType;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_LOCK() : base(MetaDefault)
	{
	}
	private TBL_LOCK(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_LOCK(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_LOCK(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_LOCK FindEntity(Predicate<TBL_LOCK> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_LOCK) entity)) as TBL_LOCK;
	}
	public static List<TBL_LOCK> FindEntities(Predicate<TBL_LOCK> filter, List<TBL_LOCK> result=null, Comparison<TBL_LOCK> sort=null)
	{
		result = result ?? new List<TBL_LOCK>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_LOCK) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_LOCK) e1, (TBL_LOCK) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_LOCK) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_LOCK> action, Predicate<TBL_LOCK> filter=null, Comparison<TBL_LOCK> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_LOCK) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_LOCK) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_LOCK)e1,(TBL_LOCK)e2));
	}
	public static TBL_LOCK GetEntity(BGId entityId)
	{
		return (TBL_LOCK) MetaDefault.GetEntity(entityId);
	}
	public static TBL_LOCK GetEntity(int index)
	{
		return (TBL_LOCK) MetaDefault[index];
	}
	public static TBL_LOCK GetEntity(string entityName)
	{
		return (TBL_LOCK) MetaDefault.GetEntity(entityName);
	}
	public static TBL_LOCK NewEntity()
	{
		return (TBL_LOCK) MetaDefault.NewEntity();
	}
	public static TBL_LOCK GetEntityByKeyWithUIType(UIType UIType)
	{
		return (TBL_LOCK) _WithUIType.GetEntityByKey(UIType);
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_SHOP : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_SHOP(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_SHOP(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4684566333432306408,17965562135453926333));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public CurrencyType CurrencyType
	{
		get
		{
			return (CurrencyType) _CurrencyType[Index];
		}
		set
		{
			_CurrencyType[Index] = value;
		}
	}
	public System.Int32 Amount
	{
		get
		{
			return _Amount[Index];
		}
		set
		{
			_Amount[Index] = value;
		}
	}
	public System.Int32 Price
	{
		get
		{
			return _Price[Index];
		}
		set
		{
			_Price[Index] = value;
		}
	}
	public System.String IAP_ID
	{
		get
		{
			return _IAP_ID[Index];
		}
		set
		{
			_IAP_ID[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5015146778314310492,211189690921910954));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_CurrencyType;
	public static BansheeGz.BGDatabase.BGFieldEnum _CurrencyType
	{
		get
		{
			if(_ufle12jhs77_CurrencyType==null || _ufle12jhs77_CurrencyType.IsDeleted) _ufle12jhs77_CurrencyType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5282283725271368017,2766853676399747235));
			return _ufle12jhs77_CurrencyType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Amount;
	public static BansheeGz.BGDatabase.BGFieldInt _Amount
	{
		get
		{
			if(_ufle12jhs77_Amount==null || _ufle12jhs77_Amount.IsDeleted) _ufle12jhs77_Amount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5019581186300672159,17487394158043670460));
			return _ufle12jhs77_Amount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Price;
	public static BansheeGz.BGDatabase.BGFieldInt _Price
	{
		get
		{
			if(_ufle12jhs77_Price==null || _ufle12jhs77_Price.IsDeleted) _ufle12jhs77_Price=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4979236088614028172,2467190012989365934));
			return _ufle12jhs77_Price;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_IAP_ID;
	public static BansheeGz.BGDatabase.BGFieldString _IAP_ID
	{
		get
		{
			if(_ufle12jhs77_IAP_ID==null || _ufle12jhs77_IAP_ID.IsDeleted) _ufle12jhs77_IAP_ID=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5097602893912460859,12575174155250094256));
			return _ufle12jhs77_IAP_ID;
		}
	}
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_WithCurrencyType;
	public static BansheeGz.BGDatabase.BGKey _WithCurrencyType
	{
		get
		{
			if(_edeht3sdad33_WithCurrencyType==null || _edeht3sdad33_WithCurrencyType.IsDeleted) _edeht3sdad33_WithCurrencyType= MetaDefault.GetKey(new BGId(5699747233837814628,5654606245915552687));
			return _edeht3sdad33_WithCurrencyType;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_SHOP() : base(MetaDefault)
	{
	}
	private TBL_SHOP(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_SHOP(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_SHOP(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_SHOP FindEntity(Predicate<TBL_SHOP> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_SHOP) entity)) as TBL_SHOP;
	}
	public static List<TBL_SHOP> FindEntities(Predicate<TBL_SHOP> filter, List<TBL_SHOP> result=null, Comparison<TBL_SHOP> sort=null)
	{
		result = result ?? new List<TBL_SHOP>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_SHOP) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_SHOP) e1, (TBL_SHOP) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_SHOP) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_SHOP> action, Predicate<TBL_SHOP> filter=null, Comparison<TBL_SHOP> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_SHOP) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_SHOP) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_SHOP)e1,(TBL_SHOP)e2));
	}
	public static TBL_SHOP GetEntity(BGId entityId)
	{
		return (TBL_SHOP) MetaDefault.GetEntity(entityId);
	}
	public static TBL_SHOP GetEntity(int index)
	{
		return (TBL_SHOP) MetaDefault[index];
	}
	public static TBL_SHOP GetEntity(string entityName)
	{
		return (TBL_SHOP) MetaDefault.GetEntity(entityName);
	}
	public static TBL_SHOP NewEntity()
	{
		return (TBL_SHOP) MetaDefault.NewEntity();
	}
	public static TBL_SHOP GetEntityByKeyWithCurrencyType(CurrencyType CurrencyType)
	{
		return (TBL_SHOP) _WithCurrencyType.GetEntityByKey(CurrencyType);
	}
	public static List<TBL_SHOP> GetEntitiesByKeyWithCurrencyType(CurrencyType CurrencyType)
	{
		var result = _WithCurrencyType.GetEntitiesByKey(CurrencyType);
		if(result==null || result.Count==0) return null;
		var list = new List<TBL_SHOP>(result.Count);
		for(var i = 0 ; i < result.Count ; i++) list.Add((TBL_SHOP) result[i]);
		return list;
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_WORLD : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_WORLD(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_WORLD(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5318403813844293662,9715462610633701509));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.String NameText
	{
		get
		{
			return _NameText[Index];
		}
		set
		{
			_NameText[Index] = value;
		}
	}
	public System.String DescriptionText
	{
		get
		{
			return _DescriptionText[Index];
		}
		set
		{
			_DescriptionText[Index] = value;
		}
	}
	public System.String LockText
	{
		get
		{
			return _LockText[Index];
		}
		set
		{
			_LockText[Index] = value;
		}
	}
	public WorldType WorldType
	{
		get
		{
			return (WorldType) _WorldType[Index];
		}
		set
		{
			_WorldType[Index] = value;
		}
	}
	public System.Int32 StageCount
	{
		get
		{
			return _StageCount[Index];
		}
		set
		{
			_StageCount[Index] = value;
		}
	}
	public System.Int32 RebirthStoneBonus
	{
		get
		{
			return _RebirthStoneBonus[Index];
		}
		set
		{
			_RebirthStoneBonus[Index] = value;
		}
	}
	public TribeType BuffTribeType
	{
		get
		{
			return (TribeType) _BuffTribeType[Index];
		}
		set
		{
			_BuffTribeType[Index] = value;
		}
	}
	public StatType BuffStatType
	{
		get
		{
			return (StatType) _BuffStatType[Index];
		}
		set
		{
			_BuffStatType[Index] = value;
		}
	}
	public System.Single BuffStatValue
	{
		get
		{
			return _BuffStatValue[Index];
		}
		set
		{
			_BuffStatValue[Index] = value;
		}
	}
	public TribeType NuffTribeType
	{
		get
		{
			return (TribeType) _NuffTribeType[Index];
		}
		set
		{
			_NuffTribeType[Index] = value;
		}
	}
	public StatType NuffStatType
	{
		get
		{
			return (StatType) _NuffStatType[Index];
		}
		set
		{
			_NuffStatType[Index] = value;
		}
	}
	public System.Single NuffStatValue
	{
		get
		{
			return _NuffStatValue[Index];
		}
		set
		{
			_NuffStatValue[Index] = value;
		}
	}
	public BackgroundType BackgroundType
	{
		get
		{
			return (BackgroundType) _BackgroundType[Index];
		}
		set
		{
			_BackgroundType[Index] = value;
		}
	}
	public System.Single Wave1_HealthBuff
	{
		get
		{
			return _Wave1_HealthBuff[Index];
		}
		set
		{
			_Wave1_HealthBuff[Index] = value;
		}
	}
	public System.Single Wave2_HealthBuff
	{
		get
		{
			return _Wave2_HealthBuff[Index];
		}
		set
		{
			_Wave2_HealthBuff[Index] = value;
		}
	}
	public System.Single Wave3_HealthBuff
	{
		get
		{
			return _Wave3_HealthBuff[Index];
		}
		set
		{
			_Wave3_HealthBuff[Index] = value;
		}
	}
	public System.Single Wave4_HealthBuff
	{
		get
		{
			return _Wave4_HealthBuff[Index];
		}
		set
		{
			_Wave4_HealthBuff[Index] = value;
		}
	}
	public System.Single Wave5_HealthBuff
	{
		get
		{
			return _Wave5_HealthBuff[Index];
		}
		set
		{
			_Wave5_HealthBuff[Index] = value;
		}
	}
	public System.Single Wave1_DamageBuff
	{
		get
		{
			return _Wave1_DamageBuff[Index];
		}
		set
		{
			_Wave1_DamageBuff[Index] = value;
		}
	}
	public System.Single Wave2_DamageBuff
	{
		get
		{
			return _Wave2_DamageBuff[Index];
		}
		set
		{
			_Wave2_DamageBuff[Index] = value;
		}
	}
	public System.Single Wave3_DamageBuff
	{
		get
		{
			return _Wave3_DamageBuff[Index];
		}
		set
		{
			_Wave3_DamageBuff[Index] = value;
		}
	}
	public System.Single Wave4_DamageBuff
	{
		get
		{
			return _Wave4_DamageBuff[Index];
		}
		set
		{
			_Wave4_DamageBuff[Index] = value;
		}
	}
	public System.Single Wave5_DamageBuff
	{
		get
		{
			return _Wave5_DamageBuff[Index];
		}
		set
		{
			_Wave5_DamageBuff[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Int32> RecommendedShadowIndexList
	{
		get
		{
			return _RecommendedShadowIndexList[Index];
		}
		set
		{
			_RecommendedShadowIndexList[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Int32> AppearanceShadowIndexList
	{
		get
		{
			return _AppearanceShadowIndexList[Index];
		}
		set
		{
			_AppearanceShadowIndexList[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5408824298978608478,258439185428404639));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_NameText;
	public static BansheeGz.BGDatabase.BGFieldString _NameText
	{
		get
		{
			if(_ufle12jhs77_NameText==null || _ufle12jhs77_NameText.IsDeleted) _ufle12jhs77_NameText=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5468883621750324394,17115477056484401039));
			return _ufle12jhs77_NameText;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_DescriptionText;
	public static BansheeGz.BGDatabase.BGFieldString _DescriptionText
	{
		get
		{
			if(_ufle12jhs77_DescriptionText==null || _ufle12jhs77_DescriptionText.IsDeleted) _ufle12jhs77_DescriptionText=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5581632081858210639,12856889257899761314));
			return _ufle12jhs77_DescriptionText;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_LockText;
	public static BansheeGz.BGDatabase.BGFieldString _LockText
	{
		get
		{
			if(_ufle12jhs77_LockText==null || _ufle12jhs77_LockText.IsDeleted) _ufle12jhs77_LockText=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(4921349169618976135,17056013297967665543));
			return _ufle12jhs77_LockText;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_WorldType;
	public static BansheeGz.BGDatabase.BGFieldEnum _WorldType
	{
		get
		{
			if(_ufle12jhs77_WorldType==null || _ufle12jhs77_WorldType.IsDeleted) _ufle12jhs77_WorldType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4940162519468851883,5032026557389254312));
			return _ufle12jhs77_WorldType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_StageCount;
	public static BansheeGz.BGDatabase.BGFieldInt _StageCount
	{
		get
		{
			if(_ufle12jhs77_StageCount==null || _ufle12jhs77_StageCount.IsDeleted) _ufle12jhs77_StageCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4984927215018500609,4685013632391351949));
			return _ufle12jhs77_StageCount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RebirthStoneBonus;
	public static BansheeGz.BGDatabase.BGFieldInt _RebirthStoneBonus
	{
		get
		{
			if(_ufle12jhs77_RebirthStoneBonus==null || _ufle12jhs77_RebirthStoneBonus.IsDeleted) _ufle12jhs77_RebirthStoneBonus=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5133512080924775503,6720711546401360285));
			return _ufle12jhs77_RebirthStoneBonus;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_BuffTribeType;
	public static BansheeGz.BGDatabase.BGFieldEnum _BuffTribeType
	{
		get
		{
			if(_ufle12jhs77_BuffTribeType==null || _ufle12jhs77_BuffTribeType.IsDeleted) _ufle12jhs77_BuffTribeType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5218303985982671905,15053914853866332607));
			return _ufle12jhs77_BuffTribeType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_BuffStatType;
	public static BansheeGz.BGDatabase.BGFieldEnum _BuffStatType
	{
		get
		{
			if(_ufle12jhs77_BuffStatType==null || _ufle12jhs77_BuffStatType.IsDeleted) _ufle12jhs77_BuffStatType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4648355818949928469,4469130909646609568));
			return _ufle12jhs77_BuffStatType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_BuffStatValue;
	public static BansheeGz.BGDatabase.BGFieldFloat _BuffStatValue
	{
		get
		{
			if(_ufle12jhs77_BuffStatValue==null || _ufle12jhs77_BuffStatValue.IsDeleted) _ufle12jhs77_BuffStatValue=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5254063528372440145,1478353949799355543));
			return _ufle12jhs77_BuffStatValue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_NuffTribeType;
	public static BansheeGz.BGDatabase.BGFieldEnum _NuffTribeType
	{
		get
		{
			if(_ufle12jhs77_NuffTribeType==null || _ufle12jhs77_NuffTribeType.IsDeleted) _ufle12jhs77_NuffTribeType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5022549163177224711,10355203319251151518));
			return _ufle12jhs77_NuffTribeType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_NuffStatType;
	public static BansheeGz.BGDatabase.BGFieldEnum _NuffStatType
	{
		get
		{
			if(_ufle12jhs77_NuffStatType==null || _ufle12jhs77_NuffStatType.IsDeleted) _ufle12jhs77_NuffStatType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4889672013882962695,5948610854034274751));
			return _ufle12jhs77_NuffStatType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_NuffStatValue;
	public static BansheeGz.BGDatabase.BGFieldFloat _NuffStatValue
	{
		get
		{
			if(_ufle12jhs77_NuffStatValue==null || _ufle12jhs77_NuffStatValue.IsDeleted) _ufle12jhs77_NuffStatValue=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5161190938478965379,1397041709034605731));
			return _ufle12jhs77_NuffStatValue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_BackgroundType;
	public static BansheeGz.BGDatabase.BGFieldEnum _BackgroundType
	{
		get
		{
			if(_ufle12jhs77_BackgroundType==null || _ufle12jhs77_BackgroundType.IsDeleted) _ufle12jhs77_BackgroundType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5152750577939461494,8416970056988216748));
			return _ufle12jhs77_BackgroundType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Wave1_HealthBuff;
	public static BansheeGz.BGDatabase.BGFieldFloat _Wave1_HealthBuff
	{
		get
		{
			if(_ufle12jhs77_Wave1_HealthBuff==null || _ufle12jhs77_Wave1_HealthBuff.IsDeleted) _ufle12jhs77_Wave1_HealthBuff=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4774489535947292801,14940378313549069732));
			return _ufle12jhs77_Wave1_HealthBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Wave2_HealthBuff;
	public static BansheeGz.BGDatabase.BGFieldFloat _Wave2_HealthBuff
	{
		get
		{
			if(_ufle12jhs77_Wave2_HealthBuff==null || _ufle12jhs77_Wave2_HealthBuff.IsDeleted) _ufle12jhs77_Wave2_HealthBuff=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4965137678579342540,5403906018763714743));
			return _ufle12jhs77_Wave2_HealthBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Wave3_HealthBuff;
	public static BansheeGz.BGDatabase.BGFieldFloat _Wave3_HealthBuff
	{
		get
		{
			if(_ufle12jhs77_Wave3_HealthBuff==null || _ufle12jhs77_Wave3_HealthBuff.IsDeleted) _ufle12jhs77_Wave3_HealthBuff=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5563359903297759366,16429641097391273));
			return _ufle12jhs77_Wave3_HealthBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Wave4_HealthBuff;
	public static BansheeGz.BGDatabase.BGFieldFloat _Wave4_HealthBuff
	{
		get
		{
			if(_ufle12jhs77_Wave4_HealthBuff==null || _ufle12jhs77_Wave4_HealthBuff.IsDeleted) _ufle12jhs77_Wave4_HealthBuff=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5636150468916413468,17155383010864970414));
			return _ufle12jhs77_Wave4_HealthBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Wave5_HealthBuff;
	public static BansheeGz.BGDatabase.BGFieldFloat _Wave5_HealthBuff
	{
		get
		{
			if(_ufle12jhs77_Wave5_HealthBuff==null || _ufle12jhs77_Wave5_HealthBuff.IsDeleted) _ufle12jhs77_Wave5_HealthBuff=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5488784388066157640,4157719739631119265));
			return _ufle12jhs77_Wave5_HealthBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Wave1_DamageBuff;
	public static BansheeGz.BGDatabase.BGFieldFloat _Wave1_DamageBuff
	{
		get
		{
			if(_ufle12jhs77_Wave1_DamageBuff==null || _ufle12jhs77_Wave1_DamageBuff.IsDeleted) _ufle12jhs77_Wave1_DamageBuff=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5642652433614618708,5341896018420976515));
			return _ufle12jhs77_Wave1_DamageBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Wave2_DamageBuff;
	public static BansheeGz.BGDatabase.BGFieldFloat _Wave2_DamageBuff
	{
		get
		{
			if(_ufle12jhs77_Wave2_DamageBuff==null || _ufle12jhs77_Wave2_DamageBuff.IsDeleted) _ufle12jhs77_Wave2_DamageBuff=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5412069236956928177,10894630382894707627));
			return _ufle12jhs77_Wave2_DamageBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Wave3_DamageBuff;
	public static BansheeGz.BGDatabase.BGFieldFloat _Wave3_DamageBuff
	{
		get
		{
			if(_ufle12jhs77_Wave3_DamageBuff==null || _ufle12jhs77_Wave3_DamageBuff.IsDeleted) _ufle12jhs77_Wave3_DamageBuff=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4844395014794384144,11991479489010926252));
			return _ufle12jhs77_Wave3_DamageBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Wave4_DamageBuff;
	public static BansheeGz.BGDatabase.BGFieldFloat _Wave4_DamageBuff
	{
		get
		{
			if(_ufle12jhs77_Wave4_DamageBuff==null || _ufle12jhs77_Wave4_DamageBuff.IsDeleted) _ufle12jhs77_Wave4_DamageBuff=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5077097757779840626,2674858188687988361));
			return _ufle12jhs77_Wave4_DamageBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Wave5_DamageBuff;
	public static BansheeGz.BGDatabase.BGFieldFloat _Wave5_DamageBuff
	{
		get
		{
			if(_ufle12jhs77_Wave5_DamageBuff==null || _ufle12jhs77_Wave5_DamageBuff.IsDeleted) _ufle12jhs77_Wave5_DamageBuff=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4867756941978288247,7453204469301344148));
			return _ufle12jhs77_Wave5_DamageBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListInt _ufle12jhs77_RecommendedShadowIndexList;
	public static BansheeGz.BGDatabase.BGFieldListInt _RecommendedShadowIndexList
	{
		get
		{
			if(_ufle12jhs77_RecommendedShadowIndexList==null || _ufle12jhs77_RecommendedShadowIndexList.IsDeleted) _ufle12jhs77_RecommendedShadowIndexList=(BansheeGz.BGDatabase.BGFieldListInt) MetaDefault.GetField(new BGId(4904975430727203996,10346157458159265679));
			return _ufle12jhs77_RecommendedShadowIndexList;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListInt _ufle12jhs77_AppearanceShadowIndexList;
	public static BansheeGz.BGDatabase.BGFieldListInt _AppearanceShadowIndexList
	{
		get
		{
			if(_ufle12jhs77_AppearanceShadowIndexList==null || _ufle12jhs77_AppearanceShadowIndexList.IsDeleted) _ufle12jhs77_AppearanceShadowIndexList=(BansheeGz.BGDatabase.BGFieldListInt) MetaDefault.GetField(new BGId(4832213604745826802,12476886193254792634));
			return _ufle12jhs77_AppearanceShadowIndexList;
		}
	}
	private static readonly List<BGEntity> _tugjbyuhfv_reusableList = new List<BGEntity>();
	public List<TBL_STAGE> RelatedTBL_STAGEListUsingWorldRelation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_STAGE._World.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_STAGE>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_STAGE) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_WithWorldType;
	public static BansheeGz.BGDatabase.BGKey _WithWorldType
	{
		get
		{
			if(_edeht3sdad33_WithWorldType==null || _edeht3sdad33_WithWorldType.IsDeleted) _edeht3sdad33_WithWorldType= MetaDefault.GetKey(new BGId(5481148135934720406,1475375848448412078));
			return _edeht3sdad33_WithWorldType;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_WORLD() : base(MetaDefault)
	{
	}
	private TBL_WORLD(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_WORLD(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_WORLD(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_WORLD FindEntity(Predicate<TBL_WORLD> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_WORLD) entity)) as TBL_WORLD;
	}
	public static List<TBL_WORLD> FindEntities(Predicate<TBL_WORLD> filter, List<TBL_WORLD> result=null, Comparison<TBL_WORLD> sort=null)
	{
		result = result ?? new List<TBL_WORLD>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_WORLD) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_WORLD) e1, (TBL_WORLD) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_WORLD) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_WORLD> action, Predicate<TBL_WORLD> filter=null, Comparison<TBL_WORLD> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_WORLD) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_WORLD) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_WORLD)e1,(TBL_WORLD)e2));
	}
	public static TBL_WORLD GetEntity(BGId entityId)
	{
		return (TBL_WORLD) MetaDefault.GetEntity(entityId);
	}
	public static TBL_WORLD GetEntity(int index)
	{
		return (TBL_WORLD) MetaDefault[index];
	}
	public static TBL_WORLD GetEntity(string entityName)
	{
		return (TBL_WORLD) MetaDefault.GetEntity(entityName);
	}
	public static TBL_WORLD NewEntity()
	{
		return (TBL_WORLD) MetaDefault.NewEntity();
	}
	public static TBL_WORLD GetEntityByKeyWithWorldType(WorldType WorldType)
	{
		return (TBL_WORLD) _WithWorldType.GetEntityByKey(WorldType);
	}
	public static List<TBL_WORLD> GetEntitiesByKeyWithWorldType(WorldType WorldType)
	{
		var result = _WithWorldType.GetEntitiesByKey(WorldType);
		if(result==null || result.Count==0) return null;
		var list = new List<TBL_WORLD>(result.Count);
		for(var i = 0 ; i < result.Count ; i++) list.Add((TBL_WORLD) result[i]);
		return list;
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_DUNGEON2 : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_DUNGEON2(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_DUNGEON2(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5125321768116714014,17816838302281517224));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public TBL_DUNGEON2_MONSTER_GROUP Wave1
	{
		get
		{
			return (TBL_DUNGEON2_MONSTER_GROUP) _Wave1[Index];
		}
		set
		{
			_Wave1[Index] = value;
		}
	}
	public TBL_DUNGEON2_MONSTER_GROUP Wave2
	{
		get
		{
			return (TBL_DUNGEON2_MONSTER_GROUP) _Wave2[Index];
		}
		set
		{
			_Wave2[Index] = value;
		}
	}
	public TBL_DUNGEON2_MONSTER_GROUP Wave3
	{
		get
		{
			return (TBL_DUNGEON2_MONSTER_GROUP) _Wave3[Index];
		}
		set
		{
			_Wave3[Index] = value;
		}
	}
	public TBL_DUNGEON2_MONSTER_GROUP Wave4
	{
		get
		{
			return (TBL_DUNGEON2_MONSTER_GROUP) _Wave4[Index];
		}
		set
		{
			_Wave4[Index] = value;
		}
	}
	public TBL_DUNGEON2_MONSTER_GROUP Wave5
	{
		get
		{
			return (TBL_DUNGEON2_MONSTER_GROUP) _Wave5[Index];
		}
		set
		{
			_Wave5[Index] = value;
		}
	}
	public System.Double DamageFactor
	{
		get
		{
			return _DamageFactor[Index];
		}
		set
		{
			_DamageFactor[Index] = value;
		}
	}
	public System.Double HealthFactor
	{
		get
		{
			return _HealthFactor[Index];
		}
		set
		{
			_HealthFactor[Index] = value;
		}
	}
	public RewardType RewardType1
	{
		get
		{
			return (RewardType) _RewardType1[Index];
		}
		set
		{
			_RewardType1[Index] = value;
		}
	}
	public System.Int32 RewardValue1
	{
		get
		{
			return _RewardValue1[Index];
		}
		set
		{
			_RewardValue1[Index] = value;
		}
	}
	public System.Int32 RewardCount1
	{
		get
		{
			return _RewardCount1[Index];
		}
		set
		{
			_RewardCount1[Index] = value;
		}
	}
	public RewardType RewardType2
	{
		get
		{
			return (RewardType) _RewardType2[Index];
		}
		set
		{
			_RewardType2[Index] = value;
		}
	}
	public System.Int32 RewardValue2
	{
		get
		{
			return _RewardValue2[Index];
		}
		set
		{
			_RewardValue2[Index] = value;
		}
	}
	public System.Int32 RewardCount2
	{
		get
		{
			return _RewardCount2[Index];
		}
		set
		{
			_RewardCount2[Index] = value;
		}
	}
	public RewardType RewardType3
	{
		get
		{
			return (RewardType) _RewardType3[Index];
		}
		set
		{
			_RewardType3[Index] = value;
		}
	}
	public System.Int32 RewardValue3
	{
		get
		{
			return _RewardValue3[Index];
		}
		set
		{
			_RewardValue3[Index] = value;
		}
	}
	public System.Int32 RewardCount3
	{
		get
		{
			return _RewardCount3[Index];
		}
		set
		{
			_RewardCount3[Index] = value;
		}
	}
	public System.Single DamageFactor_old
	{
		get
		{
			return _DamageFactor_old[Index];
		}
		set
		{
			_DamageFactor_old[Index] = value;
		}
	}
	public System.Single HealthFactor_old
	{
		get
		{
			return _HealthFactor_old[Index];
		}
		set
		{
			_HealthFactor_old[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5328719072644954495,6697856924458931127));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave1;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave1
	{
		get
		{
			if(_ufle12jhs77_Wave1==null || _ufle12jhs77_Wave1.IsDeleted) _ufle12jhs77_Wave1=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5249216018541900728,11540044566284397702));
			return _ufle12jhs77_Wave1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave2;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave2
	{
		get
		{
			if(_ufle12jhs77_Wave2==null || _ufle12jhs77_Wave2.IsDeleted) _ufle12jhs77_Wave2=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5416702860586233452,17080865885028823987));
			return _ufle12jhs77_Wave2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave3;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave3
	{
		get
		{
			if(_ufle12jhs77_Wave3==null || _ufle12jhs77_Wave3.IsDeleted) _ufle12jhs77_Wave3=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5552772007273154412,14266733598438121149));
			return _ufle12jhs77_Wave3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave4;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave4
	{
		get
		{
			if(_ufle12jhs77_Wave4==null || _ufle12jhs77_Wave4.IsDeleted) _ufle12jhs77_Wave4=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5558499252560489520,15304023450006907839));
			return _ufle12jhs77_Wave4;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave5;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave5
	{
		get
		{
			if(_ufle12jhs77_Wave5==null || _ufle12jhs77_Wave5.IsDeleted) _ufle12jhs77_Wave5=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5133292587959138077,5311895886175558797));
			return _ufle12jhs77_Wave5;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_DamageFactor;
	public static BansheeGz.BGDatabase.BGFieldDouble _DamageFactor
	{
		get
		{
			if(_ufle12jhs77_DamageFactor==null || _ufle12jhs77_DamageFactor.IsDeleted) _ufle12jhs77_DamageFactor=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(4782923417737858762,2785165258193596086));
			return _ufle12jhs77_DamageFactor;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_HealthFactor;
	public static BansheeGz.BGDatabase.BGFieldDouble _HealthFactor
	{
		get
		{
			if(_ufle12jhs77_HealthFactor==null || _ufle12jhs77_HealthFactor.IsDeleted) _ufle12jhs77_HealthFactor=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5136407063992421476,2496065042748632484));
			return _ufle12jhs77_HealthFactor;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_RewardType1;
	public static BansheeGz.BGDatabase.BGFieldEnum _RewardType1
	{
		get
		{
			if(_ufle12jhs77_RewardType1==null || _ufle12jhs77_RewardType1.IsDeleted) _ufle12jhs77_RewardType1=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5114083065806356278,16588361836305368979));
			return _ufle12jhs77_RewardType1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardValue1;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardValue1
	{
		get
		{
			if(_ufle12jhs77_RewardValue1==null || _ufle12jhs77_RewardValue1.IsDeleted) _ufle12jhs77_RewardValue1=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5130197298250498829,6621661635682574216));
			return _ufle12jhs77_RewardValue1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardCount1;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardCount1
	{
		get
		{
			if(_ufle12jhs77_RewardCount1==null || _ufle12jhs77_RewardCount1.IsDeleted) _ufle12jhs77_RewardCount1=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4989758571034891102,7723225735589732756));
			return _ufle12jhs77_RewardCount1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_RewardType2;
	public static BansheeGz.BGDatabase.BGFieldEnum _RewardType2
	{
		get
		{
			if(_ufle12jhs77_RewardType2==null || _ufle12jhs77_RewardType2.IsDeleted) _ufle12jhs77_RewardType2=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5035082688024725442,12347956982776867980));
			return _ufle12jhs77_RewardType2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardValue2;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardValue2
	{
		get
		{
			if(_ufle12jhs77_RewardValue2==null || _ufle12jhs77_RewardValue2.IsDeleted) _ufle12jhs77_RewardValue2=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4721822413701354907,17900173840077698724));
			return _ufle12jhs77_RewardValue2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardCount2;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardCount2
	{
		get
		{
			if(_ufle12jhs77_RewardCount2==null || _ufle12jhs77_RewardCount2.IsDeleted) _ufle12jhs77_RewardCount2=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4956878518461231650,11227827091925718195));
			return _ufle12jhs77_RewardCount2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_RewardType3;
	public static BansheeGz.BGDatabase.BGFieldEnum _RewardType3
	{
		get
		{
			if(_ufle12jhs77_RewardType3==null || _ufle12jhs77_RewardType3.IsDeleted) _ufle12jhs77_RewardType3=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4668707637734245306,1568437518940391812));
			return _ufle12jhs77_RewardType3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardValue3;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardValue3
	{
		get
		{
			if(_ufle12jhs77_RewardValue3==null || _ufle12jhs77_RewardValue3.IsDeleted) _ufle12jhs77_RewardValue3=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5175115112216621467,2977889237919881864));
			return _ufle12jhs77_RewardValue3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardCount3;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardCount3
	{
		get
		{
			if(_ufle12jhs77_RewardCount3==null || _ufle12jhs77_RewardCount3.IsDeleted) _ufle12jhs77_RewardCount3=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5138319355546418507,437790168549954215));
			return _ufle12jhs77_RewardCount3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_DamageFactor_old;
	public static BansheeGz.BGDatabase.BGFieldFloat _DamageFactor_old
	{
		get
		{
			if(_ufle12jhs77_DamageFactor_old==null || _ufle12jhs77_DamageFactor_old.IsDeleted) _ufle12jhs77_DamageFactor_old=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4906613672008268908,17427243189711704758));
			return _ufle12jhs77_DamageFactor_old;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_HealthFactor_old;
	public static BansheeGz.BGDatabase.BGFieldFloat _HealthFactor_old
	{
		get
		{
			if(_ufle12jhs77_HealthFactor_old==null || _ufle12jhs77_HealthFactor_old.IsDeleted) _ufle12jhs77_HealthFactor_old=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5046969534691826678,4730533202685412020));
			return _ufle12jhs77_HealthFactor_old;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_DUNGEON2() : base(MetaDefault)
	{
	}
	private TBL_DUNGEON2(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_DUNGEON2(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_DUNGEON2(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_DUNGEON2 FindEntity(Predicate<TBL_DUNGEON2> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_DUNGEON2) entity)) as TBL_DUNGEON2;
	}
	public static List<TBL_DUNGEON2> FindEntities(Predicate<TBL_DUNGEON2> filter, List<TBL_DUNGEON2> result=null, Comparison<TBL_DUNGEON2> sort=null)
	{
		result = result ?? new List<TBL_DUNGEON2>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_DUNGEON2) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_DUNGEON2) e1, (TBL_DUNGEON2) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_DUNGEON2) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_DUNGEON2> action, Predicate<TBL_DUNGEON2> filter=null, Comparison<TBL_DUNGEON2> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_DUNGEON2) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_DUNGEON2) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_DUNGEON2)e1,(TBL_DUNGEON2)e2));
	}
	public static TBL_DUNGEON2 GetEntity(BGId entityId)
	{
		return (TBL_DUNGEON2) MetaDefault.GetEntity(entityId);
	}
	public static TBL_DUNGEON2 GetEntity(int index)
	{
		return (TBL_DUNGEON2) MetaDefault[index];
	}
	public static TBL_DUNGEON2 GetEntity(string entityName)
	{
		return (TBL_DUNGEON2) MetaDefault.GetEntity(entityName);
	}
	public static TBL_DUNGEON2 NewEntity()
	{
		return (TBL_DUNGEON2) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_DUNGEON3 : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_DUNGEON3(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_DUNGEON3(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5616261078039342652,3104883358875525808));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public TBL_DUNGEON3_MONSTER_GROUP Wave1
	{
		get
		{
			return (TBL_DUNGEON3_MONSTER_GROUP) _Wave1[Index];
		}
		set
		{
			_Wave1[Index] = value;
		}
	}
	public TBL_DUNGEON3_MONSTER_GROUP Wave2
	{
		get
		{
			return (TBL_DUNGEON3_MONSTER_GROUP) _Wave2[Index];
		}
		set
		{
			_Wave2[Index] = value;
		}
	}
	public TBL_DUNGEON3_MONSTER_GROUP Wave3
	{
		get
		{
			return (TBL_DUNGEON3_MONSTER_GROUP) _Wave3[Index];
		}
		set
		{
			_Wave3[Index] = value;
		}
	}
	public TBL_DUNGEON3_MONSTER_GROUP Wave4
	{
		get
		{
			return (TBL_DUNGEON3_MONSTER_GROUP) _Wave4[Index];
		}
		set
		{
			_Wave4[Index] = value;
		}
	}
	public TBL_DUNGEON3_MONSTER_GROUP Wave5
	{
		get
		{
			return (TBL_DUNGEON3_MONSTER_GROUP) _Wave5[Index];
		}
		set
		{
			_Wave5[Index] = value;
		}
	}
	public System.Double DamageFactor
	{
		get
		{
			return _DamageFactor[Index];
		}
		set
		{
			_DamageFactor[Index] = value;
		}
	}
	public System.Double HealthFactor
	{
		get
		{
			return _HealthFactor[Index];
		}
		set
		{
			_HealthFactor[Index] = value;
		}
	}
	public RewardType RewardType1
	{
		get
		{
			return (RewardType) _RewardType1[Index];
		}
		set
		{
			_RewardType1[Index] = value;
		}
	}
	public System.Int32 RewardValue1
	{
		get
		{
			return _RewardValue1[Index];
		}
		set
		{
			_RewardValue1[Index] = value;
		}
	}
	public System.Int32 RewardCount1
	{
		get
		{
			return _RewardCount1[Index];
		}
		set
		{
			_RewardCount1[Index] = value;
		}
	}
	public RewardType RewardType2
	{
		get
		{
			return (RewardType) _RewardType2[Index];
		}
		set
		{
			_RewardType2[Index] = value;
		}
	}
	public System.Int32 RewardValue2
	{
		get
		{
			return _RewardValue2[Index];
		}
		set
		{
			_RewardValue2[Index] = value;
		}
	}
	public System.Int32 RewardCount2
	{
		get
		{
			return _RewardCount2[Index];
		}
		set
		{
			_RewardCount2[Index] = value;
		}
	}
	public RewardType RewardType3
	{
		get
		{
			return (RewardType) _RewardType3[Index];
		}
		set
		{
			_RewardType3[Index] = value;
		}
	}
	public System.Int32 RewardValue3
	{
		get
		{
			return _RewardValue3[Index];
		}
		set
		{
			_RewardValue3[Index] = value;
		}
	}
	public System.Int32 RewardCount3
	{
		get
		{
			return _RewardCount3[Index];
		}
		set
		{
			_RewardCount3[Index] = value;
		}
	}
	public System.Single DamageFactor_old
	{
		get
		{
			return _DamageFactor_old[Index];
		}
		set
		{
			_DamageFactor_old[Index] = value;
		}
	}
	public System.Single HealthFactor_old
	{
		get
		{
			return _HealthFactor_old[Index];
		}
		set
		{
			_HealthFactor_old[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5294095994745354070,2905311243632977833));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave1;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave1
	{
		get
		{
			if(_ufle12jhs77_Wave1==null || _ufle12jhs77_Wave1.IsDeleted) _ufle12jhs77_Wave1=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4798515248095955478,4793721315803127969));
			return _ufle12jhs77_Wave1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave2;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave2
	{
		get
		{
			if(_ufle12jhs77_Wave2==null || _ufle12jhs77_Wave2.IsDeleted) _ufle12jhs77_Wave2=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5334208832042513002,11816302469713553031));
			return _ufle12jhs77_Wave2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave3;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave3
	{
		get
		{
			if(_ufle12jhs77_Wave3==null || _ufle12jhs77_Wave3.IsDeleted) _ufle12jhs77_Wave3=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5194318664794331898,4709404284714678401));
			return _ufle12jhs77_Wave3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave4;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave4
	{
		get
		{
			if(_ufle12jhs77_Wave4==null || _ufle12jhs77_Wave4.IsDeleted) _ufle12jhs77_Wave4=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4870328801234625718,16616204802911190952));
			return _ufle12jhs77_Wave4;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave5;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave5
	{
		get
		{
			if(_ufle12jhs77_Wave5==null || _ufle12jhs77_Wave5.IsDeleted) _ufle12jhs77_Wave5=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5195627573465102193,798608975187609501));
			return _ufle12jhs77_Wave5;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_DamageFactor;
	public static BansheeGz.BGDatabase.BGFieldDouble _DamageFactor
	{
		get
		{
			if(_ufle12jhs77_DamageFactor==null || _ufle12jhs77_DamageFactor.IsDeleted) _ufle12jhs77_DamageFactor=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5413944565798050244,7225518536562246817));
			return _ufle12jhs77_DamageFactor;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_HealthFactor;
	public static BansheeGz.BGDatabase.BGFieldDouble _HealthFactor
	{
		get
		{
			if(_ufle12jhs77_HealthFactor==null || _ufle12jhs77_HealthFactor.IsDeleted) _ufle12jhs77_HealthFactor=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(4615349108130174249,16270075220829403030));
			return _ufle12jhs77_HealthFactor;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_RewardType1;
	public static BansheeGz.BGDatabase.BGFieldEnum _RewardType1
	{
		get
		{
			if(_ufle12jhs77_RewardType1==null || _ufle12jhs77_RewardType1.IsDeleted) _ufle12jhs77_RewardType1=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5661534834134744057,12053900482965564049));
			return _ufle12jhs77_RewardType1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardValue1;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardValue1
	{
		get
		{
			if(_ufle12jhs77_RewardValue1==null || _ufle12jhs77_RewardValue1.IsDeleted) _ufle12jhs77_RewardValue1=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4783779082162433265,15375698367642182297));
			return _ufle12jhs77_RewardValue1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardCount1;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardCount1
	{
		get
		{
			if(_ufle12jhs77_RewardCount1==null || _ufle12jhs77_RewardCount1.IsDeleted) _ufle12jhs77_RewardCount1=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5160864236023321980,16496374847152525970));
			return _ufle12jhs77_RewardCount1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_RewardType2;
	public static BansheeGz.BGDatabase.BGFieldEnum _RewardType2
	{
		get
		{
			if(_ufle12jhs77_RewardType2==null || _ufle12jhs77_RewardType2.IsDeleted) _ufle12jhs77_RewardType2=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5109126910428121304,4117877581991882669));
			return _ufle12jhs77_RewardType2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardValue2;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardValue2
	{
		get
		{
			if(_ufle12jhs77_RewardValue2==null || _ufle12jhs77_RewardValue2.IsDeleted) _ufle12jhs77_RewardValue2=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5671093788063650179,11540248224280440492));
			return _ufle12jhs77_RewardValue2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardCount2;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardCount2
	{
		get
		{
			if(_ufle12jhs77_RewardCount2==null || _ufle12jhs77_RewardCount2.IsDeleted) _ufle12jhs77_RewardCount2=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5446618917784353131,42668663672793986));
			return _ufle12jhs77_RewardCount2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_RewardType3;
	public static BansheeGz.BGDatabase.BGFieldEnum _RewardType3
	{
		get
		{
			if(_ufle12jhs77_RewardType3==null || _ufle12jhs77_RewardType3.IsDeleted) _ufle12jhs77_RewardType3=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5468011244066307404,4397482136338162087));
			return _ufle12jhs77_RewardType3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardValue3;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardValue3
	{
		get
		{
			if(_ufle12jhs77_RewardValue3==null || _ufle12jhs77_RewardValue3.IsDeleted) _ufle12jhs77_RewardValue3=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4899615703510799406,16064060357273127600));
			return _ufle12jhs77_RewardValue3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardCount3;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardCount3
	{
		get
		{
			if(_ufle12jhs77_RewardCount3==null || _ufle12jhs77_RewardCount3.IsDeleted) _ufle12jhs77_RewardCount3=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5631409697231884716,6467665368241204112));
			return _ufle12jhs77_RewardCount3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_DamageFactor_old;
	public static BansheeGz.BGDatabase.BGFieldFloat _DamageFactor_old
	{
		get
		{
			if(_ufle12jhs77_DamageFactor_old==null || _ufle12jhs77_DamageFactor_old.IsDeleted) _ufle12jhs77_DamageFactor_old=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4924771903061694543,6017314362987144579));
			return _ufle12jhs77_DamageFactor_old;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_HealthFactor_old;
	public static BansheeGz.BGDatabase.BGFieldFloat _HealthFactor_old
	{
		get
		{
			if(_ufle12jhs77_HealthFactor_old==null || _ufle12jhs77_HealthFactor_old.IsDeleted) _ufle12jhs77_HealthFactor_old=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5199600904094067481,6027904184441074877));
			return _ufle12jhs77_HealthFactor_old;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_DUNGEON3() : base(MetaDefault)
	{
	}
	private TBL_DUNGEON3(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_DUNGEON3(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_DUNGEON3(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_DUNGEON3 FindEntity(Predicate<TBL_DUNGEON3> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_DUNGEON3) entity)) as TBL_DUNGEON3;
	}
	public static List<TBL_DUNGEON3> FindEntities(Predicate<TBL_DUNGEON3> filter, List<TBL_DUNGEON3> result=null, Comparison<TBL_DUNGEON3> sort=null)
	{
		result = result ?? new List<TBL_DUNGEON3>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_DUNGEON3) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_DUNGEON3) e1, (TBL_DUNGEON3) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_DUNGEON3) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_DUNGEON3> action, Predicate<TBL_DUNGEON3> filter=null, Comparison<TBL_DUNGEON3> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_DUNGEON3) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_DUNGEON3) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_DUNGEON3)e1,(TBL_DUNGEON3)e2));
	}
	public static TBL_DUNGEON3 GetEntity(BGId entityId)
	{
		return (TBL_DUNGEON3) MetaDefault.GetEntity(entityId);
	}
	public static TBL_DUNGEON3 GetEntity(int index)
	{
		return (TBL_DUNGEON3) MetaDefault[index];
	}
	public static TBL_DUNGEON3 GetEntity(string entityName)
	{
		return (TBL_DUNGEON3) MetaDefault.GetEntity(entityName);
	}
	public static TBL_DUNGEON3 NewEntity()
	{
		return (TBL_DUNGEON3) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_DUNGEON4 : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_DUNGEON4(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_DUNGEON4(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5002711844690905618,17032116608513988526));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public TBL_DUNGEON4_MONSTER_GROUP Wave1
	{
		get
		{
			return (TBL_DUNGEON4_MONSTER_GROUP) _Wave1[Index];
		}
		set
		{
			_Wave1[Index] = value;
		}
	}
	public TBL_DUNGEON4_MONSTER_GROUP Wave2
	{
		get
		{
			return (TBL_DUNGEON4_MONSTER_GROUP) _Wave2[Index];
		}
		set
		{
			_Wave2[Index] = value;
		}
	}
	public TBL_DUNGEON4_MONSTER_GROUP Wave3
	{
		get
		{
			return (TBL_DUNGEON4_MONSTER_GROUP) _Wave3[Index];
		}
		set
		{
			_Wave3[Index] = value;
		}
	}
	public TBL_DUNGEON4_MONSTER_GROUP Wave4
	{
		get
		{
			return (TBL_DUNGEON4_MONSTER_GROUP) _Wave4[Index];
		}
		set
		{
			_Wave4[Index] = value;
		}
	}
	public TBL_DUNGEON4_MONSTER_GROUP Wave5
	{
		get
		{
			return (TBL_DUNGEON4_MONSTER_GROUP) _Wave5[Index];
		}
		set
		{
			_Wave5[Index] = value;
		}
	}
	public System.Double DamageFactor
	{
		get
		{
			return _DamageFactor[Index];
		}
		set
		{
			_DamageFactor[Index] = value;
		}
	}
	public System.Double HealthFactor
	{
		get
		{
			return _HealthFactor[Index];
		}
		set
		{
			_HealthFactor[Index] = value;
		}
	}
	public RewardType RewardType1
	{
		get
		{
			return (RewardType) _RewardType1[Index];
		}
		set
		{
			_RewardType1[Index] = value;
		}
	}
	public System.Int32 RewardValue1
	{
		get
		{
			return _RewardValue1[Index];
		}
		set
		{
			_RewardValue1[Index] = value;
		}
	}
	public System.Int32 RewardCount1
	{
		get
		{
			return _RewardCount1[Index];
		}
		set
		{
			_RewardCount1[Index] = value;
		}
	}
	public RewardType RewardType2
	{
		get
		{
			return (RewardType) _RewardType2[Index];
		}
		set
		{
			_RewardType2[Index] = value;
		}
	}
	public System.Int32 RewardValue2
	{
		get
		{
			return _RewardValue2[Index];
		}
		set
		{
			_RewardValue2[Index] = value;
		}
	}
	public System.Int32 RewardCount2
	{
		get
		{
			return _RewardCount2[Index];
		}
		set
		{
			_RewardCount2[Index] = value;
		}
	}
	public RewardType RewardType3
	{
		get
		{
			return (RewardType) _RewardType3[Index];
		}
		set
		{
			_RewardType3[Index] = value;
		}
	}
	public System.Int32 RewardValue3
	{
		get
		{
			return _RewardValue3[Index];
		}
		set
		{
			_RewardValue3[Index] = value;
		}
	}
	public System.Int32 RewardCount3
	{
		get
		{
			return _RewardCount3[Index];
		}
		set
		{
			_RewardCount3[Index] = value;
		}
	}
	public System.Single DamageFactor_old
	{
		get
		{
			return _DamageFactor_old[Index];
		}
		set
		{
			_DamageFactor_old[Index] = value;
		}
	}
	public System.Single HealthFactor_old
	{
		get
		{
			return _HealthFactor_old[Index];
		}
		set
		{
			_HealthFactor_old[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4997609010557295709,15172966458030876085));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave1;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave1
	{
		get
		{
			if(_ufle12jhs77_Wave1==null || _ufle12jhs77_Wave1.IsDeleted) _ufle12jhs77_Wave1=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5298839741313624751,7915697285408367248));
			return _ufle12jhs77_Wave1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave2;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave2
	{
		get
		{
			if(_ufle12jhs77_Wave2==null || _ufle12jhs77_Wave2.IsDeleted) _ufle12jhs77_Wave2=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5461468059124914888,14186094289526360210));
			return _ufle12jhs77_Wave2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave3;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave3
	{
		get
		{
			if(_ufle12jhs77_Wave3==null || _ufle12jhs77_Wave3.IsDeleted) _ufle12jhs77_Wave3=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5493748345353932200,458633980681301684));
			return _ufle12jhs77_Wave3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave4;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave4
	{
		get
		{
			if(_ufle12jhs77_Wave4==null || _ufle12jhs77_Wave4.IsDeleted) _ufle12jhs77_Wave4=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4752200726100093115,8805488560572551597));
			return _ufle12jhs77_Wave4;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave5;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave5
	{
		get
		{
			if(_ufle12jhs77_Wave5==null || _ufle12jhs77_Wave5.IsDeleted) _ufle12jhs77_Wave5=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5641243848151360679,14959875632157933488));
			return _ufle12jhs77_Wave5;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_DamageFactor;
	public static BansheeGz.BGDatabase.BGFieldDouble _DamageFactor
	{
		get
		{
			if(_ufle12jhs77_DamageFactor==null || _ufle12jhs77_DamageFactor.IsDeleted) _ufle12jhs77_DamageFactor=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5394777187469880445,8945913756100980155));
			return _ufle12jhs77_DamageFactor;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_HealthFactor;
	public static BansheeGz.BGDatabase.BGFieldDouble _HealthFactor
	{
		get
		{
			if(_ufle12jhs77_HealthFactor==null || _ufle12jhs77_HealthFactor.IsDeleted) _ufle12jhs77_HealthFactor=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5554231822252164250,14204216160038056576));
			return _ufle12jhs77_HealthFactor;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_RewardType1;
	public static BansheeGz.BGDatabase.BGFieldEnum _RewardType1
	{
		get
		{
			if(_ufle12jhs77_RewardType1==null || _ufle12jhs77_RewardType1.IsDeleted) _ufle12jhs77_RewardType1=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4706695716406205225,18406244044012096166));
			return _ufle12jhs77_RewardType1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardValue1;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardValue1
	{
		get
		{
			if(_ufle12jhs77_RewardValue1==null || _ufle12jhs77_RewardValue1.IsDeleted) _ufle12jhs77_RewardValue1=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5225028219917394949,6014707799045014684));
			return _ufle12jhs77_RewardValue1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardCount1;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardCount1
	{
		get
		{
			if(_ufle12jhs77_RewardCount1==null || _ufle12jhs77_RewardCount1.IsDeleted) _ufle12jhs77_RewardCount1=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5036392889794893348,5181145568751180713));
			return _ufle12jhs77_RewardCount1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_RewardType2;
	public static BansheeGz.BGDatabase.BGFieldEnum _RewardType2
	{
		get
		{
			if(_ufle12jhs77_RewardType2==null || _ufle12jhs77_RewardType2.IsDeleted) _ufle12jhs77_RewardType2=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5611270706606487875,15292678530347564474));
			return _ufle12jhs77_RewardType2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardValue2;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardValue2
	{
		get
		{
			if(_ufle12jhs77_RewardValue2==null || _ufle12jhs77_RewardValue2.IsDeleted) _ufle12jhs77_RewardValue2=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5185498488245189825,4023559889182033578));
			return _ufle12jhs77_RewardValue2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardCount2;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardCount2
	{
		get
		{
			if(_ufle12jhs77_RewardCount2==null || _ufle12jhs77_RewardCount2.IsDeleted) _ufle12jhs77_RewardCount2=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5327190242223044045,14918589613620471199));
			return _ufle12jhs77_RewardCount2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_RewardType3;
	public static BansheeGz.BGDatabase.BGFieldEnum _RewardType3
	{
		get
		{
			if(_ufle12jhs77_RewardType3==null || _ufle12jhs77_RewardType3.IsDeleted) _ufle12jhs77_RewardType3=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5143408683752318317,14629521597098168987));
			return _ufle12jhs77_RewardType3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardValue3;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardValue3
	{
		get
		{
			if(_ufle12jhs77_RewardValue3==null || _ufle12jhs77_RewardValue3.IsDeleted) _ufle12jhs77_RewardValue3=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4648137346399353361,8801719432993685));
			return _ufle12jhs77_RewardValue3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardCount3;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardCount3
	{
		get
		{
			if(_ufle12jhs77_RewardCount3==null || _ufle12jhs77_RewardCount3.IsDeleted) _ufle12jhs77_RewardCount3=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5171307953204485874,9052451076680337320));
			return _ufle12jhs77_RewardCount3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_DamageFactor_old;
	public static BansheeGz.BGDatabase.BGFieldFloat _DamageFactor_old
	{
		get
		{
			if(_ufle12jhs77_DamageFactor_old==null || _ufle12jhs77_DamageFactor_old.IsDeleted) _ufle12jhs77_DamageFactor_old=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4812091303954955718,3261003215643319699));
			return _ufle12jhs77_DamageFactor_old;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_HealthFactor_old;
	public static BansheeGz.BGDatabase.BGFieldFloat _HealthFactor_old
	{
		get
		{
			if(_ufle12jhs77_HealthFactor_old==null || _ufle12jhs77_HealthFactor_old.IsDeleted) _ufle12jhs77_HealthFactor_old=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4795646250113721790,6472455674833497011));
			return _ufle12jhs77_HealthFactor_old;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_DUNGEON4() : base(MetaDefault)
	{
	}
	private TBL_DUNGEON4(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_DUNGEON4(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_DUNGEON4(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_DUNGEON4 FindEntity(Predicate<TBL_DUNGEON4> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_DUNGEON4) entity)) as TBL_DUNGEON4;
	}
	public static List<TBL_DUNGEON4> FindEntities(Predicate<TBL_DUNGEON4> filter, List<TBL_DUNGEON4> result=null, Comparison<TBL_DUNGEON4> sort=null)
	{
		result = result ?? new List<TBL_DUNGEON4>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_DUNGEON4) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_DUNGEON4) e1, (TBL_DUNGEON4) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_DUNGEON4) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_DUNGEON4> action, Predicate<TBL_DUNGEON4> filter=null, Comparison<TBL_DUNGEON4> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_DUNGEON4) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_DUNGEON4) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_DUNGEON4)e1,(TBL_DUNGEON4)e2));
	}
	public static TBL_DUNGEON4 GetEntity(BGId entityId)
	{
		return (TBL_DUNGEON4) MetaDefault.GetEntity(entityId);
	}
	public static TBL_DUNGEON4 GetEntity(int index)
	{
		return (TBL_DUNGEON4) MetaDefault[index];
	}
	public static TBL_DUNGEON4 GetEntity(string entityName)
	{
		return (TBL_DUNGEON4) MetaDefault.GetEntity(entityName);
	}
	public static TBL_DUNGEON4 NewEntity()
	{
		return (TBL_DUNGEON4) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_DUNGEON2_MONSTER_GROUP : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_DUNGEON2_MONSTER_GROUP(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_DUNGEON2_MONSTER_GROUP(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5031949007361700955,3621284506099624359));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Boolean> Row1
	{
		get
		{
			return _Row1[Index];
		}
		set
		{
			_Row1[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Boolean> Row2
	{
		get
		{
			return _Row2[Index];
		}
		set
		{
			_Row2[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Boolean> Row3
	{
		get
		{
			return _Row3[Index];
		}
		set
		{
			_Row3[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Boolean> Row4
	{
		get
		{
			return _Row4[Index];
		}
		set
		{
			_Row4[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Boolean> Row5
	{
		get
		{
			return _Row5[Index];
		}
		set
		{
			_Row5[Index] = value;
		}
	}
	public TBL_MONSTER MonsterRow1
	{
		get
		{
			return (TBL_MONSTER) _MonsterRow1[Index];
		}
		set
		{
			_MonsterRow1[Index] = value;
		}
	}
	public TBL_MONSTER MonsterRow2
	{
		get
		{
			return (TBL_MONSTER) _MonsterRow2[Index];
		}
		set
		{
			_MonsterRow2[Index] = value;
		}
	}
	public TBL_MONSTER MonsterRow3
	{
		get
		{
			return (TBL_MONSTER) _MonsterRow3[Index];
		}
		set
		{
			_MonsterRow3[Index] = value;
		}
	}
	public TBL_MONSTER MonsterRow4
	{
		get
		{
			return (TBL_MONSTER) _MonsterRow4[Index];
		}
		set
		{
			_MonsterRow4[Index] = value;
		}
	}
	public TBL_MONSTER MonsterRow5
	{
		get
		{
			return (TBL_MONSTER) _MonsterRow5[Index];
		}
		set
		{
			_MonsterRow5[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4744169320658912008,8283355570850147465));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListBool _ufle12jhs77_Row1;
	public static BansheeGz.BGDatabase.BGFieldListBool _Row1
	{
		get
		{
			if(_ufle12jhs77_Row1==null || _ufle12jhs77_Row1.IsDeleted) _ufle12jhs77_Row1=(BansheeGz.BGDatabase.BGFieldListBool) MetaDefault.GetField(new BGId(4961290340229645717,10782475416603534760));
			return _ufle12jhs77_Row1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListBool _ufle12jhs77_Row2;
	public static BansheeGz.BGDatabase.BGFieldListBool _Row2
	{
		get
		{
			if(_ufle12jhs77_Row2==null || _ufle12jhs77_Row2.IsDeleted) _ufle12jhs77_Row2=(BansheeGz.BGDatabase.BGFieldListBool) MetaDefault.GetField(new BGId(4650096112284523183,1929062556591989937));
			return _ufle12jhs77_Row2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListBool _ufle12jhs77_Row3;
	public static BansheeGz.BGDatabase.BGFieldListBool _Row3
	{
		get
		{
			if(_ufle12jhs77_Row3==null || _ufle12jhs77_Row3.IsDeleted) _ufle12jhs77_Row3=(BansheeGz.BGDatabase.BGFieldListBool) MetaDefault.GetField(new BGId(4997862842627964733,1924303394428904583));
			return _ufle12jhs77_Row3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListBool _ufle12jhs77_Row4;
	public static BansheeGz.BGDatabase.BGFieldListBool _Row4
	{
		get
		{
			if(_ufle12jhs77_Row4==null || _ufle12jhs77_Row4.IsDeleted) _ufle12jhs77_Row4=(BansheeGz.BGDatabase.BGFieldListBool) MetaDefault.GetField(new BGId(4905704371158411703,10894444405267704761));
			return _ufle12jhs77_Row4;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListBool _ufle12jhs77_Row5;
	public static BansheeGz.BGDatabase.BGFieldListBool _Row5
	{
		get
		{
			if(_ufle12jhs77_Row5==null || _ufle12jhs77_Row5.IsDeleted) _ufle12jhs77_Row5=(BansheeGz.BGDatabase.BGFieldListBool) MetaDefault.GetField(new BGId(5312331478952406611,11011515631700837767));
			return _ufle12jhs77_Row5;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_MonsterRow1;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _MonsterRow1
	{
		get
		{
			if(_ufle12jhs77_MonsterRow1==null || _ufle12jhs77_MonsterRow1.IsDeleted) _ufle12jhs77_MonsterRow1=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5409244476101853693,11121355771264371891));
			return _ufle12jhs77_MonsterRow1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_MonsterRow2;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _MonsterRow2
	{
		get
		{
			if(_ufle12jhs77_MonsterRow2==null || _ufle12jhs77_MonsterRow2.IsDeleted) _ufle12jhs77_MonsterRow2=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5606669608201968095,1582090249380639139));
			return _ufle12jhs77_MonsterRow2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_MonsterRow3;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _MonsterRow3
	{
		get
		{
			if(_ufle12jhs77_MonsterRow3==null || _ufle12jhs77_MonsterRow3.IsDeleted) _ufle12jhs77_MonsterRow3=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4925544363971344958,4406611555421795717));
			return _ufle12jhs77_MonsterRow3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_MonsterRow4;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _MonsterRow4
	{
		get
		{
			if(_ufle12jhs77_MonsterRow4==null || _ufle12jhs77_MonsterRow4.IsDeleted) _ufle12jhs77_MonsterRow4=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4875436756526295500,2867991954136712065));
			return _ufle12jhs77_MonsterRow4;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_MonsterRow5;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _MonsterRow5
	{
		get
		{
			if(_ufle12jhs77_MonsterRow5==null || _ufle12jhs77_MonsterRow5.IsDeleted) _ufle12jhs77_MonsterRow5=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4824711203882911393,16270907267396463262));
			return _ufle12jhs77_MonsterRow5;
		}
	}
	private static readonly List<BGEntity> _tugjbyuhfv_reusableList = new List<BGEntity>();
	public List<TBL_DUNGEON2> RelatedTBL_DUNGEON2ListUsingWave1Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON2._Wave1.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON2>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON2) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON2> RelatedTBL_DUNGEON2ListUsingWave2Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON2._Wave2.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON2>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON2) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON2> RelatedTBL_DUNGEON2ListUsingWave3Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON2._Wave3.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON2>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON2) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON2> RelatedTBL_DUNGEON2ListUsingWave4Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON2._Wave4.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON2>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON2) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON2> RelatedTBL_DUNGEON2ListUsingWave5Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON2._Wave5.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON2>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON2) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_DUNGEON2_MONSTER_GROUP() : base(MetaDefault)
	{
	}
	private TBL_DUNGEON2_MONSTER_GROUP(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_DUNGEON2_MONSTER_GROUP(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_DUNGEON2_MONSTER_GROUP(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_DUNGEON2_MONSTER_GROUP FindEntity(Predicate<TBL_DUNGEON2_MONSTER_GROUP> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_DUNGEON2_MONSTER_GROUP) entity)) as TBL_DUNGEON2_MONSTER_GROUP;
	}
	public static List<TBL_DUNGEON2_MONSTER_GROUP> FindEntities(Predicate<TBL_DUNGEON2_MONSTER_GROUP> filter, List<TBL_DUNGEON2_MONSTER_GROUP> result=null, Comparison<TBL_DUNGEON2_MONSTER_GROUP> sort=null)
	{
		result = result ?? new List<TBL_DUNGEON2_MONSTER_GROUP>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_DUNGEON2_MONSTER_GROUP) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_DUNGEON2_MONSTER_GROUP) e1, (TBL_DUNGEON2_MONSTER_GROUP) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_DUNGEON2_MONSTER_GROUP) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_DUNGEON2_MONSTER_GROUP> action, Predicate<TBL_DUNGEON2_MONSTER_GROUP> filter=null, Comparison<TBL_DUNGEON2_MONSTER_GROUP> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_DUNGEON2_MONSTER_GROUP) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_DUNGEON2_MONSTER_GROUP) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_DUNGEON2_MONSTER_GROUP)e1,(TBL_DUNGEON2_MONSTER_GROUP)e2));
	}
	public static TBL_DUNGEON2_MONSTER_GROUP GetEntity(BGId entityId)
	{
		return (TBL_DUNGEON2_MONSTER_GROUP) MetaDefault.GetEntity(entityId);
	}
	public static TBL_DUNGEON2_MONSTER_GROUP GetEntity(int index)
	{
		return (TBL_DUNGEON2_MONSTER_GROUP) MetaDefault[index];
	}
	public static TBL_DUNGEON2_MONSTER_GROUP GetEntity(string entityName)
	{
		return (TBL_DUNGEON2_MONSTER_GROUP) MetaDefault.GetEntity(entityName);
	}
	public static TBL_DUNGEON2_MONSTER_GROUP NewEntity()
	{
		return (TBL_DUNGEON2_MONSTER_GROUP) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_DUNGEON3_MONSTER_GROUP : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_DUNGEON3_MONSTER_GROUP(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_DUNGEON3_MONSTER_GROUP(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5260426787584826344,1385250086367468477));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Boolean> Row1
	{
		get
		{
			return _Row1[Index];
		}
		set
		{
			_Row1[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Boolean> Row2
	{
		get
		{
			return _Row2[Index];
		}
		set
		{
			_Row2[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Boolean> Row3
	{
		get
		{
			return _Row3[Index];
		}
		set
		{
			_Row3[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Boolean> Row4
	{
		get
		{
			return _Row4[Index];
		}
		set
		{
			_Row4[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Boolean> Row5
	{
		get
		{
			return _Row5[Index];
		}
		set
		{
			_Row5[Index] = value;
		}
	}
	public TBL_MONSTER MonsterRow1
	{
		get
		{
			return (TBL_MONSTER) _MonsterRow1[Index];
		}
		set
		{
			_MonsterRow1[Index] = value;
		}
	}
	public TBL_MONSTER MonsterRow2
	{
		get
		{
			return (TBL_MONSTER) _MonsterRow2[Index];
		}
		set
		{
			_MonsterRow2[Index] = value;
		}
	}
	public TBL_MONSTER MonsterRow3
	{
		get
		{
			return (TBL_MONSTER) _MonsterRow3[Index];
		}
		set
		{
			_MonsterRow3[Index] = value;
		}
	}
	public TBL_MONSTER MonsterRow4
	{
		get
		{
			return (TBL_MONSTER) _MonsterRow4[Index];
		}
		set
		{
			_MonsterRow4[Index] = value;
		}
	}
	public TBL_MONSTER MonsterRow5
	{
		get
		{
			return (TBL_MONSTER) _MonsterRow5[Index];
		}
		set
		{
			_MonsterRow5[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5504491235148985086,3502045073489856925));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListBool _ufle12jhs77_Row1;
	public static BansheeGz.BGDatabase.BGFieldListBool _Row1
	{
		get
		{
			if(_ufle12jhs77_Row1==null || _ufle12jhs77_Row1.IsDeleted) _ufle12jhs77_Row1=(BansheeGz.BGDatabase.BGFieldListBool) MetaDefault.GetField(new BGId(4664577674763254356,143078180381370804));
			return _ufle12jhs77_Row1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListBool _ufle12jhs77_Row2;
	public static BansheeGz.BGDatabase.BGFieldListBool _Row2
	{
		get
		{
			if(_ufle12jhs77_Row2==null || _ufle12jhs77_Row2.IsDeleted) _ufle12jhs77_Row2=(BansheeGz.BGDatabase.BGFieldListBool) MetaDefault.GetField(new BGId(5220029073488934214,766659133333073581));
			return _ufle12jhs77_Row2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListBool _ufle12jhs77_Row3;
	public static BansheeGz.BGDatabase.BGFieldListBool _Row3
	{
		get
		{
			if(_ufle12jhs77_Row3==null || _ufle12jhs77_Row3.IsDeleted) _ufle12jhs77_Row3=(BansheeGz.BGDatabase.BGFieldListBool) MetaDefault.GetField(new BGId(5330024190656841374,15648969434433041548));
			return _ufle12jhs77_Row3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListBool _ufle12jhs77_Row4;
	public static BansheeGz.BGDatabase.BGFieldListBool _Row4
	{
		get
		{
			if(_ufle12jhs77_Row4==null || _ufle12jhs77_Row4.IsDeleted) _ufle12jhs77_Row4=(BansheeGz.BGDatabase.BGFieldListBool) MetaDefault.GetField(new BGId(5665247958239311921,16430441259569843367));
			return _ufle12jhs77_Row4;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListBool _ufle12jhs77_Row5;
	public static BansheeGz.BGDatabase.BGFieldListBool _Row5
	{
		get
		{
			if(_ufle12jhs77_Row5==null || _ufle12jhs77_Row5.IsDeleted) _ufle12jhs77_Row5=(BansheeGz.BGDatabase.BGFieldListBool) MetaDefault.GetField(new BGId(4983074139300851324,11385787665276090015));
			return _ufle12jhs77_Row5;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_MonsterRow1;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _MonsterRow1
	{
		get
		{
			if(_ufle12jhs77_MonsterRow1==null || _ufle12jhs77_MonsterRow1.IsDeleted) _ufle12jhs77_MonsterRow1=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5334213090645265536,12218499815407974538));
			return _ufle12jhs77_MonsterRow1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_MonsterRow2;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _MonsterRow2
	{
		get
		{
			if(_ufle12jhs77_MonsterRow2==null || _ufle12jhs77_MonsterRow2.IsDeleted) _ufle12jhs77_MonsterRow2=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5664984848279516425,18277398379307763333));
			return _ufle12jhs77_MonsterRow2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_MonsterRow3;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _MonsterRow3
	{
		get
		{
			if(_ufle12jhs77_MonsterRow3==null || _ufle12jhs77_MonsterRow3.IsDeleted) _ufle12jhs77_MonsterRow3=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5690138234778282089,6847620268781548948));
			return _ufle12jhs77_MonsterRow3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_MonsterRow4;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _MonsterRow4
	{
		get
		{
			if(_ufle12jhs77_MonsterRow4==null || _ufle12jhs77_MonsterRow4.IsDeleted) _ufle12jhs77_MonsterRow4=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4827749838621905065,5102325534343372708));
			return _ufle12jhs77_MonsterRow4;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_MonsterRow5;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _MonsterRow5
	{
		get
		{
			if(_ufle12jhs77_MonsterRow5==null || _ufle12jhs77_MonsterRow5.IsDeleted) _ufle12jhs77_MonsterRow5=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5299926573006532514,16682551352286393227));
			return _ufle12jhs77_MonsterRow5;
		}
	}
	private static readonly List<BGEntity> _tugjbyuhfv_reusableList = new List<BGEntity>();
	public List<TBL_DUNGEON3> RelatedTBL_DUNGEON3ListUsingWave1Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON3._Wave1.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON3>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON3) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON3> RelatedTBL_DUNGEON3ListUsingWave2Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON3._Wave2.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON3>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON3) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON3> RelatedTBL_DUNGEON3ListUsingWave3Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON3._Wave3.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON3>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON3) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON3> RelatedTBL_DUNGEON3ListUsingWave4Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON3._Wave4.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON3>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON3) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON3> RelatedTBL_DUNGEON3ListUsingWave5Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON3._Wave5.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON3>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON3) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_DUNGEON3_MONSTER_GROUP() : base(MetaDefault)
	{
	}
	private TBL_DUNGEON3_MONSTER_GROUP(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_DUNGEON3_MONSTER_GROUP(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_DUNGEON3_MONSTER_GROUP(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_DUNGEON3_MONSTER_GROUP FindEntity(Predicate<TBL_DUNGEON3_MONSTER_GROUP> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_DUNGEON3_MONSTER_GROUP) entity)) as TBL_DUNGEON3_MONSTER_GROUP;
	}
	public static List<TBL_DUNGEON3_MONSTER_GROUP> FindEntities(Predicate<TBL_DUNGEON3_MONSTER_GROUP> filter, List<TBL_DUNGEON3_MONSTER_GROUP> result=null, Comparison<TBL_DUNGEON3_MONSTER_GROUP> sort=null)
	{
		result = result ?? new List<TBL_DUNGEON3_MONSTER_GROUP>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_DUNGEON3_MONSTER_GROUP) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_DUNGEON3_MONSTER_GROUP) e1, (TBL_DUNGEON3_MONSTER_GROUP) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_DUNGEON3_MONSTER_GROUP) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_DUNGEON3_MONSTER_GROUP> action, Predicate<TBL_DUNGEON3_MONSTER_GROUP> filter=null, Comparison<TBL_DUNGEON3_MONSTER_GROUP> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_DUNGEON3_MONSTER_GROUP) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_DUNGEON3_MONSTER_GROUP) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_DUNGEON3_MONSTER_GROUP)e1,(TBL_DUNGEON3_MONSTER_GROUP)e2));
	}
	public static TBL_DUNGEON3_MONSTER_GROUP GetEntity(BGId entityId)
	{
		return (TBL_DUNGEON3_MONSTER_GROUP) MetaDefault.GetEntity(entityId);
	}
	public static TBL_DUNGEON3_MONSTER_GROUP GetEntity(int index)
	{
		return (TBL_DUNGEON3_MONSTER_GROUP) MetaDefault[index];
	}
	public static TBL_DUNGEON3_MONSTER_GROUP GetEntity(string entityName)
	{
		return (TBL_DUNGEON3_MONSTER_GROUP) MetaDefault.GetEntity(entityName);
	}
	public static TBL_DUNGEON3_MONSTER_GROUP NewEntity()
	{
		return (TBL_DUNGEON3_MONSTER_GROUP) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_DUNGEON4_MONSTER_GROUP : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_DUNGEON4_MONSTER_GROUP(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_DUNGEON4_MONSTER_GROUP(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4927950374654020997,981972742807523714));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Boolean> Row1
	{
		get
		{
			return _Row1[Index];
		}
		set
		{
			_Row1[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Boolean> Row2
	{
		get
		{
			return _Row2[Index];
		}
		set
		{
			_Row2[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Boolean> Row3
	{
		get
		{
			return _Row3[Index];
		}
		set
		{
			_Row3[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Boolean> Row4
	{
		get
		{
			return _Row4[Index];
		}
		set
		{
			_Row4[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Boolean> Row5
	{
		get
		{
			return _Row5[Index];
		}
		set
		{
			_Row5[Index] = value;
		}
	}
	public TBL_MONSTER MonsterRow1
	{
		get
		{
			return (TBL_MONSTER) _MonsterRow1[Index];
		}
		set
		{
			_MonsterRow1[Index] = value;
		}
	}
	public TBL_MONSTER MonsterRow2
	{
		get
		{
			return (TBL_MONSTER) _MonsterRow2[Index];
		}
		set
		{
			_MonsterRow2[Index] = value;
		}
	}
	public TBL_MONSTER MonsterRow3
	{
		get
		{
			return (TBL_MONSTER) _MonsterRow3[Index];
		}
		set
		{
			_MonsterRow3[Index] = value;
		}
	}
	public TBL_MONSTER MonsterRow4
	{
		get
		{
			return (TBL_MONSTER) _MonsterRow4[Index];
		}
		set
		{
			_MonsterRow4[Index] = value;
		}
	}
	public TBL_MONSTER MonsterRow5
	{
		get
		{
			return (TBL_MONSTER) _MonsterRow5[Index];
		}
		set
		{
			_MonsterRow5[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4964200719013204036,8845441920578200223));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListBool _ufle12jhs77_Row1;
	public static BansheeGz.BGDatabase.BGFieldListBool _Row1
	{
		get
		{
			if(_ufle12jhs77_Row1==null || _ufle12jhs77_Row1.IsDeleted) _ufle12jhs77_Row1=(BansheeGz.BGDatabase.BGFieldListBool) MetaDefault.GetField(new BGId(4717451764842088555,6699354730709637270));
			return _ufle12jhs77_Row1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListBool _ufle12jhs77_Row2;
	public static BansheeGz.BGDatabase.BGFieldListBool _Row2
	{
		get
		{
			if(_ufle12jhs77_Row2==null || _ufle12jhs77_Row2.IsDeleted) _ufle12jhs77_Row2=(BansheeGz.BGDatabase.BGFieldListBool) MetaDefault.GetField(new BGId(5141789326619478799,16645903648245820814));
			return _ufle12jhs77_Row2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListBool _ufle12jhs77_Row3;
	public static BansheeGz.BGDatabase.BGFieldListBool _Row3
	{
		get
		{
			if(_ufle12jhs77_Row3==null || _ufle12jhs77_Row3.IsDeleted) _ufle12jhs77_Row3=(BansheeGz.BGDatabase.BGFieldListBool) MetaDefault.GetField(new BGId(4676095651001879433,8005421328368314502));
			return _ufle12jhs77_Row3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListBool _ufle12jhs77_Row4;
	public static BansheeGz.BGDatabase.BGFieldListBool _Row4
	{
		get
		{
			if(_ufle12jhs77_Row4==null || _ufle12jhs77_Row4.IsDeleted) _ufle12jhs77_Row4=(BansheeGz.BGDatabase.BGFieldListBool) MetaDefault.GetField(new BGId(5652560577316821418,448143768817100966));
			return _ufle12jhs77_Row4;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListBool _ufle12jhs77_Row5;
	public static BansheeGz.BGDatabase.BGFieldListBool _Row5
	{
		get
		{
			if(_ufle12jhs77_Row5==null || _ufle12jhs77_Row5.IsDeleted) _ufle12jhs77_Row5=(BansheeGz.BGDatabase.BGFieldListBool) MetaDefault.GetField(new BGId(5558242033923468462,15364260546237654183));
			return _ufle12jhs77_Row5;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_MonsterRow1;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _MonsterRow1
	{
		get
		{
			if(_ufle12jhs77_MonsterRow1==null || _ufle12jhs77_MonsterRow1.IsDeleted) _ufle12jhs77_MonsterRow1=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4839152609783610013,5204230269013273481));
			return _ufle12jhs77_MonsterRow1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_MonsterRow2;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _MonsterRow2
	{
		get
		{
			if(_ufle12jhs77_MonsterRow2==null || _ufle12jhs77_MonsterRow2.IsDeleted) _ufle12jhs77_MonsterRow2=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4660892080902270733,6516177943796217266));
			return _ufle12jhs77_MonsterRow2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_MonsterRow3;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _MonsterRow3
	{
		get
		{
			if(_ufle12jhs77_MonsterRow3==null || _ufle12jhs77_MonsterRow3.IsDeleted) _ufle12jhs77_MonsterRow3=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4713018971075114882,6970712781773814160));
			return _ufle12jhs77_MonsterRow3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_MonsterRow4;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _MonsterRow4
	{
		get
		{
			if(_ufle12jhs77_MonsterRow4==null || _ufle12jhs77_MonsterRow4.IsDeleted) _ufle12jhs77_MonsterRow4=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5547680928348074096,5988757446148223934));
			return _ufle12jhs77_MonsterRow4;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_MonsterRow5;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _MonsterRow5
	{
		get
		{
			if(_ufle12jhs77_MonsterRow5==null || _ufle12jhs77_MonsterRow5.IsDeleted) _ufle12jhs77_MonsterRow5=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5722878604057996114,14099761544023823020));
			return _ufle12jhs77_MonsterRow5;
		}
	}
	private static readonly List<BGEntity> _tugjbyuhfv_reusableList = new List<BGEntity>();
	public List<TBL_DUNGEON4> RelatedTBL_DUNGEON4ListUsingWave1Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON4._Wave1.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON4>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON4) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON4> RelatedTBL_DUNGEON4ListUsingWave2Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON4._Wave2.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON4>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON4) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON4> RelatedTBL_DUNGEON4ListUsingWave3Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON4._Wave3.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON4>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON4) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON4> RelatedTBL_DUNGEON4ListUsingWave4Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON4._Wave4.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON4>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON4) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_DUNGEON4> RelatedTBL_DUNGEON4ListUsingWave5Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_DUNGEON4._Wave5.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_DUNGEON4>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_DUNGEON4) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_DUNGEON4_MONSTER_GROUP() : base(MetaDefault)
	{
	}
	private TBL_DUNGEON4_MONSTER_GROUP(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_DUNGEON4_MONSTER_GROUP(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_DUNGEON4_MONSTER_GROUP(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_DUNGEON4_MONSTER_GROUP FindEntity(Predicate<TBL_DUNGEON4_MONSTER_GROUP> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_DUNGEON4_MONSTER_GROUP) entity)) as TBL_DUNGEON4_MONSTER_GROUP;
	}
	public static List<TBL_DUNGEON4_MONSTER_GROUP> FindEntities(Predicate<TBL_DUNGEON4_MONSTER_GROUP> filter, List<TBL_DUNGEON4_MONSTER_GROUP> result=null, Comparison<TBL_DUNGEON4_MONSTER_GROUP> sort=null)
	{
		result = result ?? new List<TBL_DUNGEON4_MONSTER_GROUP>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_DUNGEON4_MONSTER_GROUP) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_DUNGEON4_MONSTER_GROUP) e1, (TBL_DUNGEON4_MONSTER_GROUP) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_DUNGEON4_MONSTER_GROUP) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_DUNGEON4_MONSTER_GROUP> action, Predicate<TBL_DUNGEON4_MONSTER_GROUP> filter=null, Comparison<TBL_DUNGEON4_MONSTER_GROUP> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_DUNGEON4_MONSTER_GROUP) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_DUNGEON4_MONSTER_GROUP) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_DUNGEON4_MONSTER_GROUP)e1,(TBL_DUNGEON4_MONSTER_GROUP)e2));
	}
	public static TBL_DUNGEON4_MONSTER_GROUP GetEntity(BGId entityId)
	{
		return (TBL_DUNGEON4_MONSTER_GROUP) MetaDefault.GetEntity(entityId);
	}
	public static TBL_DUNGEON4_MONSTER_GROUP GetEntity(int index)
	{
		return (TBL_DUNGEON4_MONSTER_GROUP) MetaDefault[index];
	}
	public static TBL_DUNGEON4_MONSTER_GROUP GetEntity(string entityName)
	{
		return (TBL_DUNGEON4_MONSTER_GROUP) MetaDefault.GetEntity(entityName);
	}
	public static TBL_DUNGEON4_MONSTER_GROUP NewEntity()
	{
		return (TBL_DUNGEON4_MONSTER_GROUP) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_SKILL_GRADE : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_SKILL_GRADE(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_SKILL_GRADE(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4820113405454189149,12618655982422073508));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public SkillGrade SkillGrade
	{
		get
		{
			return (SkillGrade) _SkillGrade[Index];
		}
		set
		{
			_SkillGrade[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Int32> LevelUpCosts
	{
		get
		{
			return _LevelUpCosts[Index];
		}
		set
		{
			_LevelUpCosts[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Int32> LevelUpSoulCost
	{
		get
		{
			return _LevelUpSoulCost[Index];
		}
		set
		{
			_LevelUpSoulCost[Index] = value;
		}
	}
	public System.Int32 GachaRewardPieceCount
	{
		get
		{
			return _GachaRewardPieceCount[Index];
		}
		set
		{
			_GachaRewardPieceCount[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4802468744268074606,16215975861492235914));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_SkillGrade;
	public static BansheeGz.BGDatabase.BGFieldEnum _SkillGrade
	{
		get
		{
			if(_ufle12jhs77_SkillGrade==null || _ufle12jhs77_SkillGrade.IsDeleted) _ufle12jhs77_SkillGrade=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4673514781448260584,15750204170710397852));
			return _ufle12jhs77_SkillGrade;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListInt _ufle12jhs77_LevelUpCosts;
	public static BansheeGz.BGDatabase.BGFieldListInt _LevelUpCosts
	{
		get
		{
			if(_ufle12jhs77_LevelUpCosts==null || _ufle12jhs77_LevelUpCosts.IsDeleted) _ufle12jhs77_LevelUpCosts=(BansheeGz.BGDatabase.BGFieldListInt) MetaDefault.GetField(new BGId(4885605639564785776,873831820756628871));
			return _ufle12jhs77_LevelUpCosts;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListInt _ufle12jhs77_LevelUpSoulCost;
	public static BansheeGz.BGDatabase.BGFieldListInt _LevelUpSoulCost
	{
		get
		{
			if(_ufle12jhs77_LevelUpSoulCost==null || _ufle12jhs77_LevelUpSoulCost.IsDeleted) _ufle12jhs77_LevelUpSoulCost=(BansheeGz.BGDatabase.BGFieldListInt) MetaDefault.GetField(new BGId(4962409198995406826,8915099754293734036));
			return _ufle12jhs77_LevelUpSoulCost;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_GachaRewardPieceCount;
	public static BansheeGz.BGDatabase.BGFieldInt _GachaRewardPieceCount
	{
		get
		{
			if(_ufle12jhs77_GachaRewardPieceCount==null || _ufle12jhs77_GachaRewardPieceCount.IsDeleted) _ufle12jhs77_GachaRewardPieceCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4919447641964723774,3252308372182622856));
			return _ufle12jhs77_GachaRewardPieceCount;
		}
	}
	private static readonly List<BGEntity> _tugjbyuhfv_reusableList = new List<BGEntity>();
	public List<TBL_SKILL> RelatedTBL_SKILLListUsingSkillGradeRelation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_SKILL._SkillGrade.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_SKILL>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_SKILL) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_WithSkillGrade;
	public static BansheeGz.BGDatabase.BGKey _WithSkillGrade
	{
		get
		{
			if(_edeht3sdad33_WithSkillGrade==null || _edeht3sdad33_WithSkillGrade.IsDeleted) _edeht3sdad33_WithSkillGrade= MetaDefault.GetKey(new BGId(5383229375205357935,2492558203716075711));
			return _edeht3sdad33_WithSkillGrade;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_SKILL_GRADE() : base(MetaDefault)
	{
	}
	private TBL_SKILL_GRADE(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_SKILL_GRADE(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_SKILL_GRADE(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_SKILL_GRADE FindEntity(Predicate<TBL_SKILL_GRADE> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_SKILL_GRADE) entity)) as TBL_SKILL_GRADE;
	}
	public static List<TBL_SKILL_GRADE> FindEntities(Predicate<TBL_SKILL_GRADE> filter, List<TBL_SKILL_GRADE> result=null, Comparison<TBL_SKILL_GRADE> sort=null)
	{
		result = result ?? new List<TBL_SKILL_GRADE>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_SKILL_GRADE) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_SKILL_GRADE) e1, (TBL_SKILL_GRADE) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_SKILL_GRADE) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_SKILL_GRADE> action, Predicate<TBL_SKILL_GRADE> filter=null, Comparison<TBL_SKILL_GRADE> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_SKILL_GRADE) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_SKILL_GRADE) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_SKILL_GRADE)e1,(TBL_SKILL_GRADE)e2));
	}
	public static TBL_SKILL_GRADE GetEntity(BGId entityId)
	{
		return (TBL_SKILL_GRADE) MetaDefault.GetEntity(entityId);
	}
	public static TBL_SKILL_GRADE GetEntity(int index)
	{
		return (TBL_SKILL_GRADE) MetaDefault[index];
	}
	public static TBL_SKILL_GRADE GetEntity(string entityName)
	{
		return (TBL_SKILL_GRADE) MetaDefault.GetEntity(entityName);
	}
	public static TBL_SKILL_GRADE NewEntity()
	{
		return (TBL_SKILL_GRADE) MetaDefault.NewEntity();
	}
	public static TBL_SKILL_GRADE GetEntityByKeyWithSkillGrade(SkillGrade SkillGrade)
	{
		return (TBL_SKILL_GRADE) _WithSkillGrade.GetEntityByKey(SkillGrade);
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_SHADOW_GRADE : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_SHADOW_GRADE(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_SHADOW_GRADE(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5431296750662672000,17673851338632256170));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public ShadowGrade ShadowGrade
	{
		get
		{
			return (ShadowGrade) _ShadowGrade[Index];
		}
		set
		{
			_ShadowGrade[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Int32> PromotionCosts
	{
		get
		{
			return _PromotionCosts[Index];
		}
		set
		{
			_PromotionCosts[Index] = value;
		}
	}
	public System.Int32 FirstPieceCount
	{
		get
		{
			return _FirstPieceCount[Index];
		}
		set
		{
			_FirstPieceCount[Index] = value;
		}
	}
	public System.Int32 OpenPieceCount
	{
		get
		{
			return _OpenPieceCount[Index];
		}
		set
		{
			_OpenPieceCount[Index] = value;
		}
	}
	public System.Int32 ExchangeToken_Piece
	{
		get
		{
			return _ExchangeToken_Piece[Index];
		}
		set
		{
			_ExchangeToken_Piece[Index] = value;
		}
	}
	public System.Int32 GachaRewardPieceCount
	{
		get
		{
			return _GachaRewardPieceCount[Index];
		}
		set
		{
			_GachaRewardPieceCount[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5299257282801991044,4191891013835910560));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ShadowGrade;
	public static BansheeGz.BGDatabase.BGFieldEnum _ShadowGrade
	{
		get
		{
			if(_ufle12jhs77_ShadowGrade==null || _ufle12jhs77_ShadowGrade.IsDeleted) _ufle12jhs77_ShadowGrade=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5553842682999017056,17182923171016375457));
			return _ufle12jhs77_ShadowGrade;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListInt _ufle12jhs77_PromotionCosts;
	public static BansheeGz.BGDatabase.BGFieldListInt _PromotionCosts
	{
		get
		{
			if(_ufle12jhs77_PromotionCosts==null || _ufle12jhs77_PromotionCosts.IsDeleted) _ufle12jhs77_PromotionCosts=(BansheeGz.BGDatabase.BGFieldListInt) MetaDefault.GetField(new BGId(5480878771385698593,2400289211112937621));
			return _ufle12jhs77_PromotionCosts;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_FirstPieceCount;
	public static BansheeGz.BGDatabase.BGFieldInt _FirstPieceCount
	{
		get
		{
			if(_ufle12jhs77_FirstPieceCount==null || _ufle12jhs77_FirstPieceCount.IsDeleted) _ufle12jhs77_FirstPieceCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5538295833108789092,6660333909369428394));
			return _ufle12jhs77_FirstPieceCount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_OpenPieceCount;
	public static BansheeGz.BGDatabase.BGFieldInt _OpenPieceCount
	{
		get
		{
			if(_ufle12jhs77_OpenPieceCount==null || _ufle12jhs77_OpenPieceCount.IsDeleted) _ufle12jhs77_OpenPieceCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4963248667862511239,2650928560775176859));
			return _ufle12jhs77_OpenPieceCount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_ExchangeToken_Piece;
	public static BansheeGz.BGDatabase.BGFieldInt _ExchangeToken_Piece
	{
		get
		{
			if(_ufle12jhs77_ExchangeToken_Piece==null || _ufle12jhs77_ExchangeToken_Piece.IsDeleted) _ufle12jhs77_ExchangeToken_Piece=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5383772391571350053,12933175048830406799));
			return _ufle12jhs77_ExchangeToken_Piece;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_GachaRewardPieceCount;
	public static BansheeGz.BGDatabase.BGFieldInt _GachaRewardPieceCount
	{
		get
		{
			if(_ufle12jhs77_GachaRewardPieceCount==null || _ufle12jhs77_GachaRewardPieceCount.IsDeleted) _ufle12jhs77_GachaRewardPieceCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5645633914631982806,13264172401860818062));
			return _ufle12jhs77_GachaRewardPieceCount;
		}
	}
	private static readonly List<BGEntity> _tugjbyuhfv_reusableList = new List<BGEntity>();
	public List<TBL_SHADOW> RelatedTBL_SHADOWListUsingGradeRelation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_SHADOW._Grade.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_SHADOW>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_SHADOW) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_SHADOW_GRADE() : base(MetaDefault)
	{
	}
	private TBL_SHADOW_GRADE(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_SHADOW_GRADE(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_SHADOW_GRADE(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_SHADOW_GRADE FindEntity(Predicate<TBL_SHADOW_GRADE> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_SHADOW_GRADE) entity)) as TBL_SHADOW_GRADE;
	}
	public static List<TBL_SHADOW_GRADE> FindEntities(Predicate<TBL_SHADOW_GRADE> filter, List<TBL_SHADOW_GRADE> result=null, Comparison<TBL_SHADOW_GRADE> sort=null)
	{
		result = result ?? new List<TBL_SHADOW_GRADE>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_SHADOW_GRADE) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_SHADOW_GRADE) e1, (TBL_SHADOW_GRADE) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_SHADOW_GRADE) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_SHADOW_GRADE> action, Predicate<TBL_SHADOW_GRADE> filter=null, Comparison<TBL_SHADOW_GRADE> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_SHADOW_GRADE) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_SHADOW_GRADE) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_SHADOW_GRADE)e1,(TBL_SHADOW_GRADE)e2));
	}
	public static TBL_SHADOW_GRADE GetEntity(BGId entityId)
	{
		return (TBL_SHADOW_GRADE) MetaDefault.GetEntity(entityId);
	}
	public static TBL_SHADOW_GRADE GetEntity(int index)
	{
		return (TBL_SHADOW_GRADE) MetaDefault[index];
	}
	public static TBL_SHADOW_GRADE GetEntity(string entityName)
	{
		return (TBL_SHADOW_GRADE) MetaDefault.GetEntity(entityName);
	}
	public static TBL_SHADOW_GRADE NewEntity()
	{
		return (TBL_SHADOW_GRADE) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_SHADOW_PASSIVE : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_SHADOW_PASSIVE(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_SHADOW_PASSIVE(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5375334162700923144,5978212735230602905));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public PassiveApplyType PassiveApplyType
	{
		get
		{
			return (PassiveApplyType) _PassiveApplyType[Index];
		}
		set
		{
			_PassiveApplyType[Index] = value;
		}
	}
	public PassiveTriggerType PassiveTriggerType
	{
		get
		{
			return (PassiveTriggerType) _PassiveTriggerType[Index];
		}
		set
		{
			_PassiveTriggerType[Index] = value;
		}
	}
	public System.Single TriggerValue
	{
		get
		{
			return _TriggerValue[Index];
		}
		set
		{
			_TriggerValue[Index] = value;
		}
	}
	public PassiveType PassiveType
	{
		get
		{
			return (PassiveType) _PassiveType[Index];
		}
		set
		{
			_PassiveType[Index] = value;
		}
	}
	public System.Single Value
	{
		get
		{
			return _Value[Index];
		}
		set
		{
			_Value[Index] = value;
		}
	}
	public System.Single IncreaseValue
	{
		get
		{
			return _IncreaseValue[Index];
		}
		set
		{
			_IncreaseValue[Index] = value;
		}
	}
	public System.String Description
	{
		get
		{
			return _Description[Index];
		}
		set
		{
			_Description[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5297711397066495970,11053982775295018629));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_PassiveApplyType;
	public static BansheeGz.BGDatabase.BGFieldEnum _PassiveApplyType
	{
		get
		{
			if(_ufle12jhs77_PassiveApplyType==null || _ufle12jhs77_PassiveApplyType.IsDeleted) _ufle12jhs77_PassiveApplyType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5047812639799598056,6687275968203269055));
			return _ufle12jhs77_PassiveApplyType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_PassiveTriggerType;
	public static BansheeGz.BGDatabase.BGFieldEnum _PassiveTriggerType
	{
		get
		{
			if(_ufle12jhs77_PassiveTriggerType==null || _ufle12jhs77_PassiveTriggerType.IsDeleted) _ufle12jhs77_PassiveTriggerType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5534240176012894290,8578522124146609547));
			return _ufle12jhs77_PassiveTriggerType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_TriggerValue;
	public static BansheeGz.BGDatabase.BGFieldFloat _TriggerValue
	{
		get
		{
			if(_ufle12jhs77_TriggerValue==null || _ufle12jhs77_TriggerValue.IsDeleted) _ufle12jhs77_TriggerValue=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4893217355398963470,15935398047988957371));
			return _ufle12jhs77_TriggerValue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_PassiveType;
	public static BansheeGz.BGDatabase.BGFieldEnum _PassiveType
	{
		get
		{
			if(_ufle12jhs77_PassiveType==null || _ufle12jhs77_PassiveType.IsDeleted) _ufle12jhs77_PassiveType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4888365125530436467,4203952625328831896));
			return _ufle12jhs77_PassiveType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Value;
	public static BansheeGz.BGDatabase.BGFieldFloat _Value
	{
		get
		{
			if(_ufle12jhs77_Value==null || _ufle12jhs77_Value.IsDeleted) _ufle12jhs77_Value=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5364318580687393653,3236369222963292591));
			return _ufle12jhs77_Value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_IncreaseValue;
	public static BansheeGz.BGDatabase.BGFieldFloat _IncreaseValue
	{
		get
		{
			if(_ufle12jhs77_IncreaseValue==null || _ufle12jhs77_IncreaseValue.IsDeleted) _ufle12jhs77_IncreaseValue=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4973578602000944170,10732265809090026642));
			return _ufle12jhs77_IncreaseValue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Description;
	public static BansheeGz.BGDatabase.BGFieldString _Description
	{
		get
		{
			if(_ufle12jhs77_Description==null || _ufle12jhs77_Description.IsDeleted) _ufle12jhs77_Description=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(4786092375658517451,17190321495540819369));
			return _ufle12jhs77_Description;
		}
	}
	private static readonly List<BGEntity> _tugjbyuhfv_reusableList = new List<BGEntity>();
	public List<TBL_SHADOW> RelatedTBL_SHADOWListUsingPassive1Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_SHADOW._Passive1.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_SHADOW>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_SHADOW) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_SHADOW> RelatedTBL_SHADOWListUsingPassive2Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_SHADOW._Passive2.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_SHADOW>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_SHADOW) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_SHADOW> RelatedTBL_SHADOWListUsingPassive3Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_SHADOW._Passive3.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_SHADOW>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_SHADOW) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_SHADOW> RelatedTBL_SHADOWListUsingPassive4Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_SHADOW._Passive4.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_SHADOW>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_SHADOW) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_SHADOW> RelatedTBL_SHADOWListUsingPassive5Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_SHADOW._Passive5.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_SHADOW>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_SHADOW) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_SHADOW_PASSIVE() : base(MetaDefault)
	{
	}
	private TBL_SHADOW_PASSIVE(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_SHADOW_PASSIVE(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_SHADOW_PASSIVE(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_SHADOW_PASSIVE FindEntity(Predicate<TBL_SHADOW_PASSIVE> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_SHADOW_PASSIVE) entity)) as TBL_SHADOW_PASSIVE;
	}
	public static List<TBL_SHADOW_PASSIVE> FindEntities(Predicate<TBL_SHADOW_PASSIVE> filter, List<TBL_SHADOW_PASSIVE> result=null, Comparison<TBL_SHADOW_PASSIVE> sort=null)
	{
		result = result ?? new List<TBL_SHADOW_PASSIVE>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_SHADOW_PASSIVE) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_SHADOW_PASSIVE) e1, (TBL_SHADOW_PASSIVE) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_SHADOW_PASSIVE) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_SHADOW_PASSIVE> action, Predicate<TBL_SHADOW_PASSIVE> filter=null, Comparison<TBL_SHADOW_PASSIVE> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_SHADOW_PASSIVE) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_SHADOW_PASSIVE) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_SHADOW_PASSIVE)e1,(TBL_SHADOW_PASSIVE)e2));
	}
	public static TBL_SHADOW_PASSIVE GetEntity(BGId entityId)
	{
		return (TBL_SHADOW_PASSIVE) MetaDefault.GetEntity(entityId);
	}
	public static TBL_SHADOW_PASSIVE GetEntity(int index)
	{
		return (TBL_SHADOW_PASSIVE) MetaDefault[index];
	}
	public static TBL_SHADOW_PASSIVE GetEntity(string entityName)
	{
		return (TBL_SHADOW_PASSIVE) MetaDefault.GetEntity(entityName);
	}
	public static TBL_SHADOW_PASSIVE NewEntity()
	{
		return (TBL_SHADOW_PASSIVE) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_GUIDE : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_GUIDE(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_GUIDE(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5104976981185696834,15685166464494771342));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public GuideType GuideType
	{
		get
		{
			return (GuideType) _GuideType[Index];
		}
		set
		{
			_GuideType[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5176780136145167102,7363368868796380811));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_GuideType;
	public static BansheeGz.BGDatabase.BGFieldEnum _GuideType
	{
		get
		{
			if(_ufle12jhs77_GuideType==null || _ufle12jhs77_GuideType.IsDeleted) _ufle12jhs77_GuideType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5025960664260147998,6860931082261833643));
			return _ufle12jhs77_GuideType;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_GUIDE() : base(MetaDefault)
	{
	}
	private TBL_GUIDE(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_GUIDE(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_GUIDE(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_GUIDE FindEntity(Predicate<TBL_GUIDE> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_GUIDE) entity)) as TBL_GUIDE;
	}
	public static List<TBL_GUIDE> FindEntities(Predicate<TBL_GUIDE> filter, List<TBL_GUIDE> result=null, Comparison<TBL_GUIDE> sort=null)
	{
		result = result ?? new List<TBL_GUIDE>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_GUIDE) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_GUIDE) e1, (TBL_GUIDE) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_GUIDE) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_GUIDE> action, Predicate<TBL_GUIDE> filter=null, Comparison<TBL_GUIDE> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_GUIDE) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_GUIDE) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_GUIDE)e1,(TBL_GUIDE)e2));
	}
	public static TBL_GUIDE GetEntity(BGId entityId)
	{
		return (TBL_GUIDE) MetaDefault.GetEntity(entityId);
	}
	public static TBL_GUIDE GetEntity(int index)
	{
		return (TBL_GUIDE) MetaDefault[index];
	}
	public static TBL_GUIDE GetEntity(string entityName)
	{
		return (TBL_GUIDE) MetaDefault.GetEntity(entityName);
	}
	public static TBL_GUIDE NewEntity()
	{
		return (TBL_GUIDE) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_SHADOW_PROMOTION : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_SHADOW_PROMOTION(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_SHADOW_PROMOTION(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4776458211637252111,16315540871002905003));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Int32 Damage1
	{
		get
		{
			return _Damage1[Index];
		}
		set
		{
			_Damage1[Index] = value;
		}
	}
	public System.Int32 Damage2
	{
		get
		{
			return _Damage2[Index];
		}
		set
		{
			_Damage2[Index] = value;
		}
	}
	public System.Int32 Damage3
	{
		get
		{
			return _Damage3[Index];
		}
		set
		{
			_Damage3[Index] = value;
		}
	}
	public System.Int32 Damage4
	{
		get
		{
			return _Damage4[Index];
		}
		set
		{
			_Damage4[Index] = value;
		}
	}
	public System.Int32 Damage5
	{
		get
		{
			return _Damage5[Index];
		}
		set
		{
			_Damage5[Index] = value;
		}
	}
	public System.Int32 Health1
	{
		get
		{
			return _Health1[Index];
		}
		set
		{
			_Health1[Index] = value;
		}
	}
	public System.Int32 Health2
	{
		get
		{
			return _Health2[Index];
		}
		set
		{
			_Health2[Index] = value;
		}
	}
	public System.Int32 Health3
	{
		get
		{
			return _Health3[Index];
		}
		set
		{
			_Health3[Index] = value;
		}
	}
	public System.Int32 Health4
	{
		get
		{
			return _Health4[Index];
		}
		set
		{
			_Health4[Index] = value;
		}
	}
	public System.Int32 Health5
	{
		get
		{
			return _Health5[Index];
		}
		set
		{
			_Health5[Index] = value;
		}
	}
	public System.Int32 AttackSpeed1
	{
		get
		{
			return _AttackSpeed1[Index];
		}
		set
		{
			_AttackSpeed1[Index] = value;
		}
	}
	public System.Int32 AttackSpeed2
	{
		get
		{
			return _AttackSpeed2[Index];
		}
		set
		{
			_AttackSpeed2[Index] = value;
		}
	}
	public System.Int32 AttackSpeed3
	{
		get
		{
			return _AttackSpeed3[Index];
		}
		set
		{
			_AttackSpeed3[Index] = value;
		}
	}
	public System.Int32 AttackSpeed4
	{
		get
		{
			return _AttackSpeed4[Index];
		}
		set
		{
			_AttackSpeed4[Index] = value;
		}
	}
	public System.Int32 AttackSpeed5
	{
		get
		{
			return _AttackSpeed5[Index];
		}
		set
		{
			_AttackSpeed5[Index] = value;
		}
	}
	public System.Int32 TobeolPower1
	{
		get
		{
			return _TobeolPower1[Index];
		}
		set
		{
			_TobeolPower1[Index] = value;
		}
	}
	public System.Int32 TobeolPower2
	{
		get
		{
			return _TobeolPower2[Index];
		}
		set
		{
			_TobeolPower2[Index] = value;
		}
	}
	public System.Int32 TobeolPower3
	{
		get
		{
			return _TobeolPower3[Index];
		}
		set
		{
			_TobeolPower3[Index] = value;
		}
	}
	public System.Int32 TobeolPower4
	{
		get
		{
			return _TobeolPower4[Index];
		}
		set
		{
			_TobeolPower4[Index] = value;
		}
	}
	public System.Int32 TobeolPower5
	{
		get
		{
			return _TobeolPower5[Index];
		}
		set
		{
			_TobeolPower5[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5307078076296627864,16441616937653636015));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Damage1;
	public static BansheeGz.BGDatabase.BGFieldInt _Damage1
	{
		get
		{
			if(_ufle12jhs77_Damage1==null || _ufle12jhs77_Damage1.IsDeleted) _ufle12jhs77_Damage1=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4684708746354694825,6867831120168876479));
			return _ufle12jhs77_Damage1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Damage2;
	public static BansheeGz.BGDatabase.BGFieldInt _Damage2
	{
		get
		{
			if(_ufle12jhs77_Damage2==null || _ufle12jhs77_Damage2.IsDeleted) _ufle12jhs77_Damage2=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4783723256237771632,11087167170095936182));
			return _ufle12jhs77_Damage2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Damage3;
	public static BansheeGz.BGDatabase.BGFieldInt _Damage3
	{
		get
		{
			if(_ufle12jhs77_Damage3==null || _ufle12jhs77_Damage3.IsDeleted) _ufle12jhs77_Damage3=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4945378433359727252,919032712493056906));
			return _ufle12jhs77_Damage3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Damage4;
	public static BansheeGz.BGDatabase.BGFieldInt _Damage4
	{
		get
		{
			if(_ufle12jhs77_Damage4==null || _ufle12jhs77_Damage4.IsDeleted) _ufle12jhs77_Damage4=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5495186642453844682,16619004867033179270));
			return _ufle12jhs77_Damage4;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Damage5;
	public static BansheeGz.BGDatabase.BGFieldInt _Damage5
	{
		get
		{
			if(_ufle12jhs77_Damage5==null || _ufle12jhs77_Damage5.IsDeleted) _ufle12jhs77_Damage5=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4698944422850909435,16049141935854428831));
			return _ufle12jhs77_Damage5;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Health1;
	public static BansheeGz.BGDatabase.BGFieldInt _Health1
	{
		get
		{
			if(_ufle12jhs77_Health1==null || _ufle12jhs77_Health1.IsDeleted) _ufle12jhs77_Health1=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4693238509509019730,7196115487725176478));
			return _ufle12jhs77_Health1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Health2;
	public static BansheeGz.BGDatabase.BGFieldInt _Health2
	{
		get
		{
			if(_ufle12jhs77_Health2==null || _ufle12jhs77_Health2.IsDeleted) _ufle12jhs77_Health2=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4882303647934016556,666516728948792198));
			return _ufle12jhs77_Health2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Health3;
	public static BansheeGz.BGDatabase.BGFieldInt _Health3
	{
		get
		{
			if(_ufle12jhs77_Health3==null || _ufle12jhs77_Health3.IsDeleted) _ufle12jhs77_Health3=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4802183711072441591,9592818198110422151));
			return _ufle12jhs77_Health3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Health4;
	public static BansheeGz.BGDatabase.BGFieldInt _Health4
	{
		get
		{
			if(_ufle12jhs77_Health4==null || _ufle12jhs77_Health4.IsDeleted) _ufle12jhs77_Health4=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5424398312319843328,1170179486993601458));
			return _ufle12jhs77_Health4;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Health5;
	public static BansheeGz.BGDatabase.BGFieldInt _Health5
	{
		get
		{
			if(_ufle12jhs77_Health5==null || _ufle12jhs77_Health5.IsDeleted) _ufle12jhs77_Health5=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4852882550215165541,11061038349357350554));
			return _ufle12jhs77_Health5;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_AttackSpeed1;
	public static BansheeGz.BGDatabase.BGFieldInt _AttackSpeed1
	{
		get
		{
			if(_ufle12jhs77_AttackSpeed1==null || _ufle12jhs77_AttackSpeed1.IsDeleted) _ufle12jhs77_AttackSpeed1=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5656336925861863844,7985261093894457257));
			return _ufle12jhs77_AttackSpeed1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_AttackSpeed2;
	public static BansheeGz.BGDatabase.BGFieldInt _AttackSpeed2
	{
		get
		{
			if(_ufle12jhs77_AttackSpeed2==null || _ufle12jhs77_AttackSpeed2.IsDeleted) _ufle12jhs77_AttackSpeed2=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5034683695386216980,11278072993785907855));
			return _ufle12jhs77_AttackSpeed2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_AttackSpeed3;
	public static BansheeGz.BGDatabase.BGFieldInt _AttackSpeed3
	{
		get
		{
			if(_ufle12jhs77_AttackSpeed3==null || _ufle12jhs77_AttackSpeed3.IsDeleted) _ufle12jhs77_AttackSpeed3=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5601653969541701271,17976735760830580631));
			return _ufle12jhs77_AttackSpeed3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_AttackSpeed4;
	public static BansheeGz.BGDatabase.BGFieldInt _AttackSpeed4
	{
		get
		{
			if(_ufle12jhs77_AttackSpeed4==null || _ufle12jhs77_AttackSpeed4.IsDeleted) _ufle12jhs77_AttackSpeed4=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5284995623880358568,7332506461112607421));
			return _ufle12jhs77_AttackSpeed4;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_AttackSpeed5;
	public static BansheeGz.BGDatabase.BGFieldInt _AttackSpeed5
	{
		get
		{
			if(_ufle12jhs77_AttackSpeed5==null || _ufle12jhs77_AttackSpeed5.IsDeleted) _ufle12jhs77_AttackSpeed5=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4866556279048340925,2491545058146924454));
			return _ufle12jhs77_AttackSpeed5;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_TobeolPower1;
	public static BansheeGz.BGDatabase.BGFieldInt _TobeolPower1
	{
		get
		{
			if(_ufle12jhs77_TobeolPower1==null || _ufle12jhs77_TobeolPower1.IsDeleted) _ufle12jhs77_TobeolPower1=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5758373736167485242,3540645858382970522));
			return _ufle12jhs77_TobeolPower1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_TobeolPower2;
	public static BansheeGz.BGDatabase.BGFieldInt _TobeolPower2
	{
		get
		{
			if(_ufle12jhs77_TobeolPower2==null || _ufle12jhs77_TobeolPower2.IsDeleted) _ufle12jhs77_TobeolPower2=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4988409968550070912,2444728769943901601));
			return _ufle12jhs77_TobeolPower2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_TobeolPower3;
	public static BansheeGz.BGDatabase.BGFieldInt _TobeolPower3
	{
		get
		{
			if(_ufle12jhs77_TobeolPower3==null || _ufle12jhs77_TobeolPower3.IsDeleted) _ufle12jhs77_TobeolPower3=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5222527946366364177,1707815350100905101));
			return _ufle12jhs77_TobeolPower3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_TobeolPower4;
	public static BansheeGz.BGDatabase.BGFieldInt _TobeolPower4
	{
		get
		{
			if(_ufle12jhs77_TobeolPower4==null || _ufle12jhs77_TobeolPower4.IsDeleted) _ufle12jhs77_TobeolPower4=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4699690081260195791,15664616906681623955));
			return _ufle12jhs77_TobeolPower4;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_TobeolPower5;
	public static BansheeGz.BGDatabase.BGFieldInt _TobeolPower5
	{
		get
		{
			if(_ufle12jhs77_TobeolPower5==null || _ufle12jhs77_TobeolPower5.IsDeleted) _ufle12jhs77_TobeolPower5=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5727390746371259468,1339969399652834988));
			return _ufle12jhs77_TobeolPower5;
		}
	}
	private static readonly List<BGEntity> _tugjbyuhfv_reusableList = new List<BGEntity>();
	public List<TBL_SHADOW> RelatedTBL_SHADOWListUsingPromotionRelation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_SHADOW._Promotion.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_SHADOW>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_SHADOW) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_SHADOW_PROMOTION() : base(MetaDefault)
	{
	}
	private TBL_SHADOW_PROMOTION(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_SHADOW_PROMOTION(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_SHADOW_PROMOTION(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_SHADOW_PROMOTION FindEntity(Predicate<TBL_SHADOW_PROMOTION> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_SHADOW_PROMOTION) entity)) as TBL_SHADOW_PROMOTION;
	}
	public static List<TBL_SHADOW_PROMOTION> FindEntities(Predicate<TBL_SHADOW_PROMOTION> filter, List<TBL_SHADOW_PROMOTION> result=null, Comparison<TBL_SHADOW_PROMOTION> sort=null)
	{
		result = result ?? new List<TBL_SHADOW_PROMOTION>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_SHADOW_PROMOTION) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_SHADOW_PROMOTION) e1, (TBL_SHADOW_PROMOTION) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_SHADOW_PROMOTION) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_SHADOW_PROMOTION> action, Predicate<TBL_SHADOW_PROMOTION> filter=null, Comparison<TBL_SHADOW_PROMOTION> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_SHADOW_PROMOTION) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_SHADOW_PROMOTION) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_SHADOW_PROMOTION)e1,(TBL_SHADOW_PROMOTION)e2));
	}
	public static TBL_SHADOW_PROMOTION GetEntity(BGId entityId)
	{
		return (TBL_SHADOW_PROMOTION) MetaDefault.GetEntity(entityId);
	}
	public static TBL_SHADOW_PROMOTION GetEntity(int index)
	{
		return (TBL_SHADOW_PROMOTION) MetaDefault[index];
	}
	public static TBL_SHADOW_PROMOTION GetEntity(string entityName)
	{
		return (TBL_SHADOW_PROMOTION) MetaDefault.GetEntity(entityName);
	}
	public static TBL_SHADOW_PROMOTION NewEntity()
	{
		return (TBL_SHADOW_PROMOTION) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_GACHA_SHADOW : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_GACHA_SHADOW(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_GACHA_SHADOW(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4889740773907238752,10577505154755388824));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public GachaType GachaType
	{
		get
		{
			return (GachaType) _GachaType[Index];
		}
		set
		{
			_GachaType[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Single> Percents
	{
		get
		{
			return _Percents[Index];
		}
		set
		{
			_Percents[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5743484564316643145,11863316101908728485));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_GachaType;
	public static BansheeGz.BGDatabase.BGFieldEnum _GachaType
	{
		get
		{
			if(_ufle12jhs77_GachaType==null || _ufle12jhs77_GachaType.IsDeleted) _ufle12jhs77_GachaType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5090753744698044522,14251582384812042628));
			return _ufle12jhs77_GachaType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListFloat _ufle12jhs77_Percents;
	public static BansheeGz.BGDatabase.BGFieldListFloat _Percents
	{
		get
		{
			if(_ufle12jhs77_Percents==null || _ufle12jhs77_Percents.IsDeleted) _ufle12jhs77_Percents=(BansheeGz.BGDatabase.BGFieldListFloat) MetaDefault.GetField(new BGId(5389488705781300129,2096441020717640378));
			return _ufle12jhs77_Percents;
		}
	}
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_WithGachaType;
	public static BansheeGz.BGDatabase.BGKey _WithGachaType
	{
		get
		{
			if(_edeht3sdad33_WithGachaType==null || _edeht3sdad33_WithGachaType.IsDeleted) _edeht3sdad33_WithGachaType= MetaDefault.GetKey(new BGId(5708682267712381717,16001521201425367434));
			return _edeht3sdad33_WithGachaType;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_GACHA_SHADOW() : base(MetaDefault)
	{
	}
	private TBL_GACHA_SHADOW(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_GACHA_SHADOW(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_GACHA_SHADOW(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_GACHA_SHADOW FindEntity(Predicate<TBL_GACHA_SHADOW> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_GACHA_SHADOW) entity)) as TBL_GACHA_SHADOW;
	}
	public static List<TBL_GACHA_SHADOW> FindEntities(Predicate<TBL_GACHA_SHADOW> filter, List<TBL_GACHA_SHADOW> result=null, Comparison<TBL_GACHA_SHADOW> sort=null)
	{
		result = result ?? new List<TBL_GACHA_SHADOW>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_GACHA_SHADOW) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_GACHA_SHADOW) e1, (TBL_GACHA_SHADOW) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_GACHA_SHADOW) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_GACHA_SHADOW> action, Predicate<TBL_GACHA_SHADOW> filter=null, Comparison<TBL_GACHA_SHADOW> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_GACHA_SHADOW) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_GACHA_SHADOW) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_GACHA_SHADOW)e1,(TBL_GACHA_SHADOW)e2));
	}
	public static TBL_GACHA_SHADOW GetEntity(BGId entityId)
	{
		return (TBL_GACHA_SHADOW) MetaDefault.GetEntity(entityId);
	}
	public static TBL_GACHA_SHADOW GetEntity(int index)
	{
		return (TBL_GACHA_SHADOW) MetaDefault[index];
	}
	public static TBL_GACHA_SHADOW GetEntity(string entityName)
	{
		return (TBL_GACHA_SHADOW) MetaDefault.GetEntity(entityName);
	}
	public static TBL_GACHA_SHADOW NewEntity()
	{
		return (TBL_GACHA_SHADOW) MetaDefault.NewEntity();
	}
	public static TBL_GACHA_SHADOW GetEntityByKeyWithGachaType(GachaType GachaType)
	{
		return (TBL_GACHA_SHADOW) _WithGachaType.GetEntityByKey(GachaType);
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_DAILY_REWARD : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_DAILY_REWARD(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_DAILY_REWARD(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5154400916811097139,4162971287196683445));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public RewardType NormalRewardType
	{
		get
		{
			return (RewardType) _NormalRewardType[Index];
		}
		set
		{
			_NormalRewardType[Index] = value;
		}
	}
	public System.Int32 NormalRewardValue
	{
		get
		{
			return _NormalRewardValue[Index];
		}
		set
		{
			_NormalRewardValue[Index] = value;
		}
	}
	public System.Int32 NormalRewardCount
	{
		get
		{
			return _NormalRewardCount[Index];
		}
		set
		{
			_NormalRewardCount[Index] = value;
		}
	}
	public RewardType ADRewardType1
	{
		get
		{
			return (RewardType) _ADRewardType1[Index];
		}
		set
		{
			_ADRewardType1[Index] = value;
		}
	}
	public System.Int32 ADRewardValue1
	{
		get
		{
			return _ADRewardValue1[Index];
		}
		set
		{
			_ADRewardValue1[Index] = value;
		}
	}
	public System.Int32 AdRewardCount1
	{
		get
		{
			return _AdRewardCount1[Index];
		}
		set
		{
			_AdRewardCount1[Index] = value;
		}
	}
	public RewardType ADRewardType2
	{
		get
		{
			return (RewardType) _ADRewardType2[Index];
		}
		set
		{
			_ADRewardType2[Index] = value;
		}
	}
	public System.Int32 ADRewardValue2
	{
		get
		{
			return _ADRewardValue2[Index];
		}
		set
		{
			_ADRewardValue2[Index] = value;
		}
	}
	public System.Int32 AdRewardCount2
	{
		get
		{
			return _AdRewardCount2[Index];
		}
		set
		{
			_AdRewardCount2[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5142760096974722022,11905099060212835483));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_NormalRewardType;
	public static BansheeGz.BGDatabase.BGFieldEnum _NormalRewardType
	{
		get
		{
			if(_ufle12jhs77_NormalRewardType==null || _ufle12jhs77_NormalRewardType.IsDeleted) _ufle12jhs77_NormalRewardType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5607277498138204838,3224739658489403276));
			return _ufle12jhs77_NormalRewardType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_NormalRewardValue;
	public static BansheeGz.BGDatabase.BGFieldInt _NormalRewardValue
	{
		get
		{
			if(_ufle12jhs77_NormalRewardValue==null || _ufle12jhs77_NormalRewardValue.IsDeleted) _ufle12jhs77_NormalRewardValue=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4627226504749410755,15522602111142911135));
			return _ufle12jhs77_NormalRewardValue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_NormalRewardCount;
	public static BansheeGz.BGDatabase.BGFieldInt _NormalRewardCount
	{
		get
		{
			if(_ufle12jhs77_NormalRewardCount==null || _ufle12jhs77_NormalRewardCount.IsDeleted) _ufle12jhs77_NormalRewardCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4762740841405451228,15017471284933232550));
			return _ufle12jhs77_NormalRewardCount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ADRewardType1;
	public static BansheeGz.BGDatabase.BGFieldEnum _ADRewardType1
	{
		get
		{
			if(_ufle12jhs77_ADRewardType1==null || _ufle12jhs77_ADRewardType1.IsDeleted) _ufle12jhs77_ADRewardType1=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4862673988894710379,2216102603872921268));
			return _ufle12jhs77_ADRewardType1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_ADRewardValue1;
	public static BansheeGz.BGDatabase.BGFieldInt _ADRewardValue1
	{
		get
		{
			if(_ufle12jhs77_ADRewardValue1==null || _ufle12jhs77_ADRewardValue1.IsDeleted) _ufle12jhs77_ADRewardValue1=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5615942153395094194,4942022179485676212));
			return _ufle12jhs77_ADRewardValue1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_AdRewardCount1;
	public static BansheeGz.BGDatabase.BGFieldInt _AdRewardCount1
	{
		get
		{
			if(_ufle12jhs77_AdRewardCount1==null || _ufle12jhs77_AdRewardCount1.IsDeleted) _ufle12jhs77_AdRewardCount1=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4665225196605277076,7968027127230718125));
			return _ufle12jhs77_AdRewardCount1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ADRewardType2;
	public static BansheeGz.BGDatabase.BGFieldEnum _ADRewardType2
	{
		get
		{
			if(_ufle12jhs77_ADRewardType2==null || _ufle12jhs77_ADRewardType2.IsDeleted) _ufle12jhs77_ADRewardType2=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4732149217078303974,15112389063515512499));
			return _ufle12jhs77_ADRewardType2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_ADRewardValue2;
	public static BansheeGz.BGDatabase.BGFieldInt _ADRewardValue2
	{
		get
		{
			if(_ufle12jhs77_ADRewardValue2==null || _ufle12jhs77_ADRewardValue2.IsDeleted) _ufle12jhs77_ADRewardValue2=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5115977986123869814,12949137895813613973));
			return _ufle12jhs77_ADRewardValue2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_AdRewardCount2;
	public static BansheeGz.BGDatabase.BGFieldInt _AdRewardCount2
	{
		get
		{
			if(_ufle12jhs77_AdRewardCount2==null || _ufle12jhs77_AdRewardCount2.IsDeleted) _ufle12jhs77_AdRewardCount2=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5723771825853865351,12263424213866048689));
			return _ufle12jhs77_AdRewardCount2;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_DAILY_REWARD() : base(MetaDefault)
	{
	}
	private TBL_DAILY_REWARD(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_DAILY_REWARD(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_DAILY_REWARD(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_DAILY_REWARD FindEntity(Predicate<TBL_DAILY_REWARD> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_DAILY_REWARD) entity)) as TBL_DAILY_REWARD;
	}
	public static List<TBL_DAILY_REWARD> FindEntities(Predicate<TBL_DAILY_REWARD> filter, List<TBL_DAILY_REWARD> result=null, Comparison<TBL_DAILY_REWARD> sort=null)
	{
		result = result ?? new List<TBL_DAILY_REWARD>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_DAILY_REWARD) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_DAILY_REWARD) e1, (TBL_DAILY_REWARD) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_DAILY_REWARD) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_DAILY_REWARD> action, Predicate<TBL_DAILY_REWARD> filter=null, Comparison<TBL_DAILY_REWARD> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_DAILY_REWARD) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_DAILY_REWARD) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_DAILY_REWARD)e1,(TBL_DAILY_REWARD)e2));
	}
	public static TBL_DAILY_REWARD GetEntity(BGId entityId)
	{
		return (TBL_DAILY_REWARD) MetaDefault.GetEntity(entityId);
	}
	public static TBL_DAILY_REWARD GetEntity(int index)
	{
		return (TBL_DAILY_REWARD) MetaDefault[index];
	}
	public static TBL_DAILY_REWARD GetEntity(string entityName)
	{
		return (TBL_DAILY_REWARD) MetaDefault.GetEntity(entityName);
	}
	public static TBL_DAILY_REWARD NewEntity()
	{
		return (TBL_DAILY_REWARD) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_PACKAGE : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_PACKAGE(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_PACKAGE(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4875516029090010685,4077363472013556896));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.String IAP_ID
	{
		get
		{
			return _IAP_ID[Index];
		}
		set
		{
			_IAP_ID[Index] = value;
		}
	}
	public System.Int32 Price
	{
		get
		{
			return _Price[Index];
		}
		set
		{
			_Price[Index] = value;
		}
	}
	public System.Boolean JustOneTime
	{
		get
		{
			return _JustOneTime[Index];
		}
		set
		{
			_JustOneTime[Index] = value;
		}
	}
	public System.Int32 Precondition
	{
		get
		{
			return _Precondition[Index];
		}
		set
		{
			_Precondition[Index] = value;
		}
	}
	public System.Boolean ShowInShop
	{
		get
		{
			return _ShowInShop[Index];
		}
		set
		{
			_ShowInShop[Index] = value;
		}
	}
	public System.Boolean IsLimited
	{
		get
		{
			return _IsLimited[Index];
		}
		set
		{
			_IsLimited[Index] = value;
		}
	}
	public System.Int32 Duration
	{
		get
		{
			return _Duration[Index];
		}
		set
		{
			_Duration[Index] = value;
		}
	}
	public LimitPackageOpenCondition LimitOpenCondition
	{
		get
		{
			return (LimitPackageOpenCondition) _LimitOpenCondition[Index];
		}
		set
		{
			_LimitOpenCondition[Index] = value;
		}
	}
	public System.Int32 LimitOpenValue
	{
		get
		{
			return _LimitOpenValue[Index];
		}
		set
		{
			_LimitOpenValue[Index] = value;
		}
	}
	public RewardType Item_1_Type
	{
		get
		{
			return (RewardType) _Item_1_Type[Index];
		}
		set
		{
			_Item_1_Type[Index] = value;
		}
	}
	public System.Int32 Item_1_Index
	{
		get
		{
			return _Item_1_Index[Index];
		}
		set
		{
			_Item_1_Index[Index] = value;
		}
	}
	public System.Int32 Item_1_Count
	{
		get
		{
			return _Item_1_Count[Index];
		}
		set
		{
			_Item_1_Count[Index] = value;
		}
	}
	public RewardType Item_2_Type
	{
		get
		{
			return (RewardType) _Item_2_Type[Index];
		}
		set
		{
			_Item_2_Type[Index] = value;
		}
	}
	public System.Int32 Item_2_Index
	{
		get
		{
			return _Item_2_Index[Index];
		}
		set
		{
			_Item_2_Index[Index] = value;
		}
	}
	public System.Int32 Item_2_Count
	{
		get
		{
			return _Item_2_Count[Index];
		}
		set
		{
			_Item_2_Count[Index] = value;
		}
	}
	public RewardType Item_3_Type
	{
		get
		{
			return (RewardType) _Item_3_Type[Index];
		}
		set
		{
			_Item_3_Type[Index] = value;
		}
	}
	public System.Int32 Item_3_Index
	{
		get
		{
			return _Item_3_Index[Index];
		}
		set
		{
			_Item_3_Index[Index] = value;
		}
	}
	public System.Int32 Item_3_Count
	{
		get
		{
			return _Item_3_Count[Index];
		}
		set
		{
			_Item_3_Count[Index] = value;
		}
	}
	public RewardType Item_4_Type
	{
		get
		{
			return (RewardType) _Item_4_Type[Index];
		}
		set
		{
			_Item_4_Type[Index] = value;
		}
	}
	public System.Int32 Item_4_Index
	{
		get
		{
			return _Item_4_Index[Index];
		}
		set
		{
			_Item_4_Index[Index] = value;
		}
	}
	public System.Int32 Item_4_Count
	{
		get
		{
			return _Item_4_Count[Index];
		}
		set
		{
			_Item_4_Count[Index] = value;
		}
	}
	public RewardType Item_5_Type
	{
		get
		{
			return (RewardType) _Item_5_Type[Index];
		}
		set
		{
			_Item_5_Type[Index] = value;
		}
	}
	public System.Int32 Item_5_Index
	{
		get
		{
			return _Item_5_Index[Index];
		}
		set
		{
			_Item_5_Index[Index] = value;
		}
	}
	public System.Int32 Item_5_Count
	{
		get
		{
			return _Item_5_Count[Index];
		}
		set
		{
			_Item_5_Count[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5685332294995887057,12427171090132123811));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_IAP_ID;
	public static BansheeGz.BGDatabase.BGFieldString _IAP_ID
	{
		get
		{
			if(_ufle12jhs77_IAP_ID==null || _ufle12jhs77_IAP_ID.IsDeleted) _ufle12jhs77_IAP_ID=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5406108210255806251,8378627540181536385));
			return _ufle12jhs77_IAP_ID;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Price;
	public static BansheeGz.BGDatabase.BGFieldInt _Price
	{
		get
		{
			if(_ufle12jhs77_Price==null || _ufle12jhs77_Price.IsDeleted) _ufle12jhs77_Price=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5508635888373664208,17291852095875810194));
			return _ufle12jhs77_Price;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldBool _ufle12jhs77_JustOneTime;
	public static BansheeGz.BGDatabase.BGFieldBool _JustOneTime
	{
		get
		{
			if(_ufle12jhs77_JustOneTime==null || _ufle12jhs77_JustOneTime.IsDeleted) _ufle12jhs77_JustOneTime=(BansheeGz.BGDatabase.BGFieldBool) MetaDefault.GetField(new BGId(5077825866667860156,9978624266721524388));
			return _ufle12jhs77_JustOneTime;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Precondition;
	public static BansheeGz.BGDatabase.BGFieldInt _Precondition
	{
		get
		{
			if(_ufle12jhs77_Precondition==null || _ufle12jhs77_Precondition.IsDeleted) _ufle12jhs77_Precondition=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4809356333610915916,13513834715061989256));
			return _ufle12jhs77_Precondition;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldBool _ufle12jhs77_ShowInShop;
	public static BansheeGz.BGDatabase.BGFieldBool _ShowInShop
	{
		get
		{
			if(_ufle12jhs77_ShowInShop==null || _ufle12jhs77_ShowInShop.IsDeleted) _ufle12jhs77_ShowInShop=(BansheeGz.BGDatabase.BGFieldBool) MetaDefault.GetField(new BGId(5379757788621172954,10118758140325972895));
			return _ufle12jhs77_ShowInShop;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldBool _ufle12jhs77_IsLimited;
	public static BansheeGz.BGDatabase.BGFieldBool _IsLimited
	{
		get
		{
			if(_ufle12jhs77_IsLimited==null || _ufle12jhs77_IsLimited.IsDeleted) _ufle12jhs77_IsLimited=(BansheeGz.BGDatabase.BGFieldBool) MetaDefault.GetField(new BGId(5588865403176615926,14145261884836933807));
			return _ufle12jhs77_IsLimited;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Duration;
	public static BansheeGz.BGDatabase.BGFieldInt _Duration
	{
		get
		{
			if(_ufle12jhs77_Duration==null || _ufle12jhs77_Duration.IsDeleted) _ufle12jhs77_Duration=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4930659388461290683,12393288526061081265));
			return _ufle12jhs77_Duration;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_LimitOpenCondition;
	public static BansheeGz.BGDatabase.BGFieldEnum _LimitOpenCondition
	{
		get
		{
			if(_ufle12jhs77_LimitOpenCondition==null || _ufle12jhs77_LimitOpenCondition.IsDeleted) _ufle12jhs77_LimitOpenCondition=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5052701629415059611,8674444923609416578));
			return _ufle12jhs77_LimitOpenCondition;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_LimitOpenValue;
	public static BansheeGz.BGDatabase.BGFieldInt _LimitOpenValue
	{
		get
		{
			if(_ufle12jhs77_LimitOpenValue==null || _ufle12jhs77_LimitOpenValue.IsDeleted) _ufle12jhs77_LimitOpenValue=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5564325099686029284,3345674594541745040));
			return _ufle12jhs77_LimitOpenValue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_Item_1_Type;
	public static BansheeGz.BGDatabase.BGFieldEnum _Item_1_Type
	{
		get
		{
			if(_ufle12jhs77_Item_1_Type==null || _ufle12jhs77_Item_1_Type.IsDeleted) _ufle12jhs77_Item_1_Type=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5091777602131309226,10282463025016188041));
			return _ufle12jhs77_Item_1_Type;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Item_1_Index;
	public static BansheeGz.BGDatabase.BGFieldInt _Item_1_Index
	{
		get
		{
			if(_ufle12jhs77_Item_1_Index==null || _ufle12jhs77_Item_1_Index.IsDeleted) _ufle12jhs77_Item_1_Index=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4788043663786725013,13688829080048150657));
			return _ufle12jhs77_Item_1_Index;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Item_1_Count;
	public static BansheeGz.BGDatabase.BGFieldInt _Item_1_Count
	{
		get
		{
			if(_ufle12jhs77_Item_1_Count==null || _ufle12jhs77_Item_1_Count.IsDeleted) _ufle12jhs77_Item_1_Count=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4858427242508631913,848279809257729937));
			return _ufle12jhs77_Item_1_Count;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_Item_2_Type;
	public static BansheeGz.BGDatabase.BGFieldEnum _Item_2_Type
	{
		get
		{
			if(_ufle12jhs77_Item_2_Type==null || _ufle12jhs77_Item_2_Type.IsDeleted) _ufle12jhs77_Item_2_Type=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5567860146118403694,17653647218462478779));
			return _ufle12jhs77_Item_2_Type;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Item_2_Index;
	public static BansheeGz.BGDatabase.BGFieldInt _Item_2_Index
	{
		get
		{
			if(_ufle12jhs77_Item_2_Index==null || _ufle12jhs77_Item_2_Index.IsDeleted) _ufle12jhs77_Item_2_Index=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5214815485456860752,6438967932078180233));
			return _ufle12jhs77_Item_2_Index;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Item_2_Count;
	public static BansheeGz.BGDatabase.BGFieldInt _Item_2_Count
	{
		get
		{
			if(_ufle12jhs77_Item_2_Count==null || _ufle12jhs77_Item_2_Count.IsDeleted) _ufle12jhs77_Item_2_Count=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4613809309643799288,4020871810456737181));
			return _ufle12jhs77_Item_2_Count;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_Item_3_Type;
	public static BansheeGz.BGDatabase.BGFieldEnum _Item_3_Type
	{
		get
		{
			if(_ufle12jhs77_Item_3_Type==null || _ufle12jhs77_Item_3_Type.IsDeleted) _ufle12jhs77_Item_3_Type=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5564052023117261564,11916958892685024644));
			return _ufle12jhs77_Item_3_Type;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Item_3_Index;
	public static BansheeGz.BGDatabase.BGFieldInt _Item_3_Index
	{
		get
		{
			if(_ufle12jhs77_Item_3_Index==null || _ufle12jhs77_Item_3_Index.IsDeleted) _ufle12jhs77_Item_3_Index=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5182932399465873094,3768345009174202506));
			return _ufle12jhs77_Item_3_Index;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Item_3_Count;
	public static BansheeGz.BGDatabase.BGFieldInt _Item_3_Count
	{
		get
		{
			if(_ufle12jhs77_Item_3_Count==null || _ufle12jhs77_Item_3_Count.IsDeleted) _ufle12jhs77_Item_3_Count=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5692191229611762550,14402686657846448531));
			return _ufle12jhs77_Item_3_Count;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_Item_4_Type;
	public static BansheeGz.BGDatabase.BGFieldEnum _Item_4_Type
	{
		get
		{
			if(_ufle12jhs77_Item_4_Type==null || _ufle12jhs77_Item_4_Type.IsDeleted) _ufle12jhs77_Item_4_Type=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5410712487801207031,1691127511441434528));
			return _ufle12jhs77_Item_4_Type;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Item_4_Index;
	public static BansheeGz.BGDatabase.BGFieldInt _Item_4_Index
	{
		get
		{
			if(_ufle12jhs77_Item_4_Index==null || _ufle12jhs77_Item_4_Index.IsDeleted) _ufle12jhs77_Item_4_Index=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4922243782024598046,17631026225906970771));
			return _ufle12jhs77_Item_4_Index;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Item_4_Count;
	public static BansheeGz.BGDatabase.BGFieldInt _Item_4_Count
	{
		get
		{
			if(_ufle12jhs77_Item_4_Count==null || _ufle12jhs77_Item_4_Count.IsDeleted) _ufle12jhs77_Item_4_Count=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5427405555832443273,8726835972907487913));
			return _ufle12jhs77_Item_4_Count;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_Item_5_Type;
	public static BansheeGz.BGDatabase.BGFieldEnum _Item_5_Type
	{
		get
		{
			if(_ufle12jhs77_Item_5_Type==null || _ufle12jhs77_Item_5_Type.IsDeleted) _ufle12jhs77_Item_5_Type=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4959901958260636303,5231818741212201865));
			return _ufle12jhs77_Item_5_Type;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Item_5_Index;
	public static BansheeGz.BGDatabase.BGFieldInt _Item_5_Index
	{
		get
		{
			if(_ufle12jhs77_Item_5_Index==null || _ufle12jhs77_Item_5_Index.IsDeleted) _ufle12jhs77_Item_5_Index=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5506892666813671515,10770414943408355477));
			return _ufle12jhs77_Item_5_Index;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Item_5_Count;
	public static BansheeGz.BGDatabase.BGFieldInt _Item_5_Count
	{
		get
		{
			if(_ufle12jhs77_Item_5_Count==null || _ufle12jhs77_Item_5_Count.IsDeleted) _ufle12jhs77_Item_5_Count=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4868794636874574658,9076646382593575303));
			return _ufle12jhs77_Item_5_Count;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_PACKAGE() : base(MetaDefault)
	{
	}
	private TBL_PACKAGE(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_PACKAGE(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_PACKAGE(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_PACKAGE FindEntity(Predicate<TBL_PACKAGE> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_PACKAGE) entity)) as TBL_PACKAGE;
	}
	public static List<TBL_PACKAGE> FindEntities(Predicate<TBL_PACKAGE> filter, List<TBL_PACKAGE> result=null, Comparison<TBL_PACKAGE> sort=null)
	{
		result = result ?? new List<TBL_PACKAGE>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_PACKAGE) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_PACKAGE) e1, (TBL_PACKAGE) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_PACKAGE) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_PACKAGE> action, Predicate<TBL_PACKAGE> filter=null, Comparison<TBL_PACKAGE> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_PACKAGE) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_PACKAGE) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_PACKAGE)e1,(TBL_PACKAGE)e2));
	}
	public static TBL_PACKAGE GetEntity(BGId entityId)
	{
		return (TBL_PACKAGE) MetaDefault.GetEntity(entityId);
	}
	public static TBL_PACKAGE GetEntity(int index)
	{
		return (TBL_PACKAGE) MetaDefault[index];
	}
	public static TBL_PACKAGE GetEntity(string entityName)
	{
		return (TBL_PACKAGE) MetaDefault.GetEntity(entityName);
	}
	public static TBL_PACKAGE NewEntity()
	{
		return (TBL_PACKAGE) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_TOKEN_ITEM : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_TOKEN_ITEM(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_TOKEN_ITEM(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5016966248810777263,2081931161125388462));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public RewardType RewardType
	{
		get
		{
			return (RewardType) _RewardType[Index];
		}
		set
		{
			_RewardType[Index] = value;
		}
	}
	public System.Int32 RewardValue
	{
		get
		{
			return _RewardValue[Index];
		}
		set
		{
			_RewardValue[Index] = value;
		}
	}
	public System.Int32 RewardCount
	{
		get
		{
			return _RewardCount[Index];
		}
		set
		{
			_RewardCount[Index] = value;
		}
	}
	public System.Int32 Price
	{
		get
		{
			return _Price[Index];
		}
		set
		{
			_Price[Index] = value;
		}
	}
	public System.Int32 OpenLevel
	{
		get
		{
			return _OpenLevel[Index];
		}
		set
		{
			_OpenLevel[Index] = value;
		}
	}
	public TokenProductGrade Product_Grade
	{
		get
		{
			return (TokenProductGrade) _Product_Grade[Index];
		}
		set
		{
			_Product_Grade[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5646885649125956057,8520276206574757509));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_RewardType;
	public static BansheeGz.BGDatabase.BGFieldEnum _RewardType
	{
		get
		{
			if(_ufle12jhs77_RewardType==null || _ufle12jhs77_RewardType.IsDeleted) _ufle12jhs77_RewardType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5393561121561533636,1601056729698261684));
			return _ufle12jhs77_RewardType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardValue;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardValue
	{
		get
		{
			if(_ufle12jhs77_RewardValue==null || _ufle12jhs77_RewardValue.IsDeleted) _ufle12jhs77_RewardValue=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5665587746590159410,5259316385120150966));
			return _ufle12jhs77_RewardValue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RewardCount;
	public static BansheeGz.BGDatabase.BGFieldInt _RewardCount
	{
		get
		{
			if(_ufle12jhs77_RewardCount==null || _ufle12jhs77_RewardCount.IsDeleted) _ufle12jhs77_RewardCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4623282300616398583,15649339900642616450));
			return _ufle12jhs77_RewardCount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Price;
	public static BansheeGz.BGDatabase.BGFieldInt _Price
	{
		get
		{
			if(_ufle12jhs77_Price==null || _ufle12jhs77_Price.IsDeleted) _ufle12jhs77_Price=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5546393261006250892,11649877355700273812));
			return _ufle12jhs77_Price;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_OpenLevel;
	public static BansheeGz.BGDatabase.BGFieldInt _OpenLevel
	{
		get
		{
			if(_ufle12jhs77_OpenLevel==null || _ufle12jhs77_OpenLevel.IsDeleted) _ufle12jhs77_OpenLevel=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5352576152583497680,15730983226165176459));
			return _ufle12jhs77_OpenLevel;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_Product_Grade;
	public static BansheeGz.BGDatabase.BGFieldEnum _Product_Grade
	{
		get
		{
			if(_ufle12jhs77_Product_Grade==null || _ufle12jhs77_Product_Grade.IsDeleted) _ufle12jhs77_Product_Grade=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4704575932508868707,12590222976299933094));
			return _ufle12jhs77_Product_Grade;
		}
	}
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_WithProductGradeType;
	public static BansheeGz.BGDatabase.BGKey _WithProductGradeType
	{
		get
		{
			if(_edeht3sdad33_WithProductGradeType==null || _edeht3sdad33_WithProductGradeType.IsDeleted) _edeht3sdad33_WithProductGradeType= MetaDefault.GetKey(new BGId(5282205174603200272,13906554803546760628));
			return _edeht3sdad33_WithProductGradeType;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_TOKEN_ITEM() : base(MetaDefault)
	{
	}
	private TBL_TOKEN_ITEM(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_TOKEN_ITEM(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_TOKEN_ITEM(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_TOKEN_ITEM FindEntity(Predicate<TBL_TOKEN_ITEM> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_TOKEN_ITEM) entity)) as TBL_TOKEN_ITEM;
	}
	public static List<TBL_TOKEN_ITEM> FindEntities(Predicate<TBL_TOKEN_ITEM> filter, List<TBL_TOKEN_ITEM> result=null, Comparison<TBL_TOKEN_ITEM> sort=null)
	{
		result = result ?? new List<TBL_TOKEN_ITEM>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_TOKEN_ITEM) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_TOKEN_ITEM) e1, (TBL_TOKEN_ITEM) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_TOKEN_ITEM) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_TOKEN_ITEM> action, Predicate<TBL_TOKEN_ITEM> filter=null, Comparison<TBL_TOKEN_ITEM> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_TOKEN_ITEM) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_TOKEN_ITEM) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_TOKEN_ITEM)e1,(TBL_TOKEN_ITEM)e2));
	}
	public static TBL_TOKEN_ITEM GetEntity(BGId entityId)
	{
		return (TBL_TOKEN_ITEM) MetaDefault.GetEntity(entityId);
	}
	public static TBL_TOKEN_ITEM GetEntity(int index)
	{
		return (TBL_TOKEN_ITEM) MetaDefault[index];
	}
	public static TBL_TOKEN_ITEM GetEntity(string entityName)
	{
		return (TBL_TOKEN_ITEM) MetaDefault.GetEntity(entityName);
	}
	public static TBL_TOKEN_ITEM NewEntity()
	{
		return (TBL_TOKEN_ITEM) MetaDefault.NewEntity();
	}
	public static TBL_TOKEN_ITEM GetEntityByKeyWithProductGradeType(TokenProductGrade Product_Grade)
	{
		return (TBL_TOKEN_ITEM) _WithProductGradeType.GetEntityByKey(Product_Grade);
	}
	public static List<TBL_TOKEN_ITEM> GetEntitiesByKeyWithProductGradeType(TokenProductGrade Product_Grade)
	{
		var result = _WithProductGradeType.GetEntitiesByKey(Product_Grade);
		if(result==null || result.Count==0) return null;
		var list = new List<TBL_TOKEN_ITEM>(result.Count);
		for(var i = 0 ; i < result.Count ; i++) list.Add((TBL_TOKEN_ITEM) result[i]);
		return list;
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_TOBEOL_BUFF : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_TOBEOL_BUFF(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_TOBEOL_BUFF(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4760251706503690483,15187241094366582937));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public TobeolBuffTarget Target
	{
		get
		{
			return (TobeolBuffTarget) _Target[Index];
		}
		set
		{
			_Target[Index] = value;
		}
	}
	public TobeolBuffType Type
	{
		get
		{
			return (TobeolBuffType) _Type[Index];
		}
		set
		{
			_Type[Index] = value;
		}
	}
	public System.Int32 Exp
	{
		get
		{
			return _Exp[Index];
		}
		set
		{
			_Exp[Index] = value;
		}
	}
	public System.Int32 IncreaseExp
	{
		get
		{
			return _IncreaseExp[Index];
		}
		set
		{
			_IncreaseExp[Index] = value;
		}
	}
	public System.Single Value
	{
		get
		{
			return _Value[Index];
		}
		set
		{
			_Value[Index] = value;
		}
	}
	public System.Single IncreaseValue
	{
		get
		{
			return _IncreaseValue[Index];
		}
		set
		{
			_IncreaseValue[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4738954477661714556,10556719556514339738));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_Target;
	public static BansheeGz.BGDatabase.BGFieldEnum _Target
	{
		get
		{
			if(_ufle12jhs77_Target==null || _ufle12jhs77_Target.IsDeleted) _ufle12jhs77_Target=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5250732513400150171,4839091160242829987));
			return _ufle12jhs77_Target;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_Type;
	public static BansheeGz.BGDatabase.BGFieldEnum _Type
	{
		get
		{
			if(_ufle12jhs77_Type==null || _ufle12jhs77_Type.IsDeleted) _ufle12jhs77_Type=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4757206171878767771,5061168580660006046));
			return _ufle12jhs77_Type;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Exp;
	public static BansheeGz.BGDatabase.BGFieldInt _Exp
	{
		get
		{
			if(_ufle12jhs77_Exp==null || _ufle12jhs77_Exp.IsDeleted) _ufle12jhs77_Exp=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5173399508902507244,8543694313973240709));
			return _ufle12jhs77_Exp;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_IncreaseExp;
	public static BansheeGz.BGDatabase.BGFieldInt _IncreaseExp
	{
		get
		{
			if(_ufle12jhs77_IncreaseExp==null || _ufle12jhs77_IncreaseExp.IsDeleted) _ufle12jhs77_IncreaseExp=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4621929510091269685,17134736994667006098));
			return _ufle12jhs77_IncreaseExp;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Value;
	public static BansheeGz.BGDatabase.BGFieldFloat _Value
	{
		get
		{
			if(_ufle12jhs77_Value==null || _ufle12jhs77_Value.IsDeleted) _ufle12jhs77_Value=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5187000775889710942,15555636564875332744));
			return _ufle12jhs77_Value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_IncreaseValue;
	public static BansheeGz.BGDatabase.BGFieldFloat _IncreaseValue
	{
		get
		{
			if(_ufle12jhs77_IncreaseValue==null || _ufle12jhs77_IncreaseValue.IsDeleted) _ufle12jhs77_IncreaseValue=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4798263141190027663,3405777558061946761));
			return _ufle12jhs77_IncreaseValue;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_TOBEOL_BUFF() : base(MetaDefault)
	{
	}
	private TBL_TOBEOL_BUFF(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_TOBEOL_BUFF(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_TOBEOL_BUFF(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_TOBEOL_BUFF FindEntity(Predicate<TBL_TOBEOL_BUFF> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_TOBEOL_BUFF) entity)) as TBL_TOBEOL_BUFF;
	}
	public static List<TBL_TOBEOL_BUFF> FindEntities(Predicate<TBL_TOBEOL_BUFF> filter, List<TBL_TOBEOL_BUFF> result=null, Comparison<TBL_TOBEOL_BUFF> sort=null)
	{
		result = result ?? new List<TBL_TOBEOL_BUFF>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_TOBEOL_BUFF) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_TOBEOL_BUFF) e1, (TBL_TOBEOL_BUFF) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_TOBEOL_BUFF) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_TOBEOL_BUFF> action, Predicate<TBL_TOBEOL_BUFF> filter=null, Comparison<TBL_TOBEOL_BUFF> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_TOBEOL_BUFF) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_TOBEOL_BUFF) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_TOBEOL_BUFF)e1,(TBL_TOBEOL_BUFF)e2));
	}
	public static TBL_TOBEOL_BUFF GetEntity(BGId entityId)
	{
		return (TBL_TOBEOL_BUFF) MetaDefault.GetEntity(entityId);
	}
	public static TBL_TOBEOL_BUFF GetEntity(int index)
	{
		return (TBL_TOBEOL_BUFF) MetaDefault[index];
	}
	public static TBL_TOBEOL_BUFF GetEntity(string entityName)
	{
		return (TBL_TOBEOL_BUFF) MetaDefault.GetEntity(entityName);
	}
	public static TBL_TOBEOL_BUFF NewEntity()
	{
		return (TBL_TOBEOL_BUFF) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_TOKEN_PERCENT : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_TOKEN_PERCENT(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_TOKEN_PERCENT(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5426963956044515361,10649245586440477093));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public TokenProductGrade Grade
	{
		get
		{
			return (TokenProductGrade) _Grade[Index];
		}
		set
		{
			_Grade[Index] = value;
		}
	}
	public System.Int32 Percent
	{
		get
		{
			return _Percent[Index];
		}
		set
		{
			_Percent[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5320171727541407457,14704847557680593341));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_Grade;
	public static BansheeGz.BGDatabase.BGFieldEnum _Grade
	{
		get
		{
			if(_ufle12jhs77_Grade==null || _ufle12jhs77_Grade.IsDeleted) _ufle12jhs77_Grade=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4972920017842899660,14031834069290792631));
			return _ufle12jhs77_Grade;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Percent;
	public static BansheeGz.BGDatabase.BGFieldInt _Percent
	{
		get
		{
			if(_ufle12jhs77_Percent==null || _ufle12jhs77_Percent.IsDeleted) _ufle12jhs77_Percent=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4659797546387504919,10712234889062463109));
			return _ufle12jhs77_Percent;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_TOKEN_PERCENT() : base(MetaDefault)
	{
	}
	private TBL_TOKEN_PERCENT(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_TOKEN_PERCENT(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_TOKEN_PERCENT(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_TOKEN_PERCENT FindEntity(Predicate<TBL_TOKEN_PERCENT> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_TOKEN_PERCENT) entity)) as TBL_TOKEN_PERCENT;
	}
	public static List<TBL_TOKEN_PERCENT> FindEntities(Predicate<TBL_TOKEN_PERCENT> filter, List<TBL_TOKEN_PERCENT> result=null, Comparison<TBL_TOKEN_PERCENT> sort=null)
	{
		result = result ?? new List<TBL_TOKEN_PERCENT>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_TOKEN_PERCENT) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_TOKEN_PERCENT) e1, (TBL_TOKEN_PERCENT) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_TOKEN_PERCENT) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_TOKEN_PERCENT> action, Predicate<TBL_TOKEN_PERCENT> filter=null, Comparison<TBL_TOKEN_PERCENT> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_TOKEN_PERCENT) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_TOKEN_PERCENT) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_TOKEN_PERCENT)e1,(TBL_TOKEN_PERCENT)e2));
	}
	public static TBL_TOKEN_PERCENT GetEntity(BGId entityId)
	{
		return (TBL_TOKEN_PERCENT) MetaDefault.GetEntity(entityId);
	}
	public static TBL_TOKEN_PERCENT GetEntity(int index)
	{
		return (TBL_TOKEN_PERCENT) MetaDefault[index];
	}
	public static TBL_TOKEN_PERCENT GetEntity(string entityName)
	{
		return (TBL_TOKEN_PERCENT) MetaDefault.GetEntity(entityName);
	}
	public static TBL_TOKEN_PERCENT NewEntity()
	{
		return (TBL_TOKEN_PERCENT) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_SHADOW_SKILL : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_SHADOW_SKILL(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_SHADOW_SKILL(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5612424294420094530,5341232635896406191));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Single Value
	{
		get
		{
			return _Value[Index];
		}
		set
		{
			_Value[Index] = value;
		}
	}
	public System.Single IncreaseValue
	{
		get
		{
			return _IncreaseValue[Index];
		}
		set
		{
			_IncreaseValue[Index] = value;
		}
	}
	public System.Single GuitarValue
	{
		get
		{
			return _GuitarValue[Index];
		}
		set
		{
			_GuitarValue[Index] = value;
		}
	}
	public System.Single RequiredMana
	{
		get
		{
			return _RequiredMana[Index];
		}
		set
		{
			_RequiredMana[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5157679682607173069,7465564773525577628));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Value;
	public static BansheeGz.BGDatabase.BGFieldFloat _Value
	{
		get
		{
			if(_ufle12jhs77_Value==null || _ufle12jhs77_Value.IsDeleted) _ufle12jhs77_Value=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5239224228010939250,1204003741843388558));
			return _ufle12jhs77_Value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_IncreaseValue;
	public static BansheeGz.BGDatabase.BGFieldFloat _IncreaseValue
	{
		get
		{
			if(_ufle12jhs77_IncreaseValue==null || _ufle12jhs77_IncreaseValue.IsDeleted) _ufle12jhs77_IncreaseValue=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5017619572504076513,14517839191093304245));
			return _ufle12jhs77_IncreaseValue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_GuitarValue;
	public static BansheeGz.BGDatabase.BGFieldFloat _GuitarValue
	{
		get
		{
			if(_ufle12jhs77_GuitarValue==null || _ufle12jhs77_GuitarValue.IsDeleted) _ufle12jhs77_GuitarValue=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4881230545930735496,2193341642560206218));
			return _ufle12jhs77_GuitarValue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_RequiredMana;
	public static BansheeGz.BGDatabase.BGFieldFloat _RequiredMana
	{
		get
		{
			if(_ufle12jhs77_RequiredMana==null || _ufle12jhs77_RequiredMana.IsDeleted) _ufle12jhs77_RequiredMana=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5562657544730557254,14069945198392619183));
			return _ufle12jhs77_RequiredMana;
		}
	}
	private static readonly List<BGEntity> _tugjbyuhfv_reusableList = new List<BGEntity>();
	public List<TBL_SHADOW> RelatedTBL_SHADOWListUsingSkillRelation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_SHADOW._Skill.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_SHADOW>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_SHADOW) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_SHADOW_SKILL() : base(MetaDefault)
	{
	}
	private TBL_SHADOW_SKILL(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_SHADOW_SKILL(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_SHADOW_SKILL(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_SHADOW_SKILL FindEntity(Predicate<TBL_SHADOW_SKILL> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_SHADOW_SKILL) entity)) as TBL_SHADOW_SKILL;
	}
	public static List<TBL_SHADOW_SKILL> FindEntities(Predicate<TBL_SHADOW_SKILL> filter, List<TBL_SHADOW_SKILL> result=null, Comparison<TBL_SHADOW_SKILL> sort=null)
	{
		result = result ?? new List<TBL_SHADOW_SKILL>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_SHADOW_SKILL) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_SHADOW_SKILL) e1, (TBL_SHADOW_SKILL) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_SHADOW_SKILL) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_SHADOW_SKILL> action, Predicate<TBL_SHADOW_SKILL> filter=null, Comparison<TBL_SHADOW_SKILL> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_SHADOW_SKILL) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_SHADOW_SKILL) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_SHADOW_SKILL)e1,(TBL_SHADOW_SKILL)e2));
	}
	public static TBL_SHADOW_SKILL GetEntity(BGId entityId)
	{
		return (TBL_SHADOW_SKILL) MetaDefault.GetEntity(entityId);
	}
	public static TBL_SHADOW_SKILL GetEntity(int index)
	{
		return (TBL_SHADOW_SKILL) MetaDefault[index];
	}
	public static TBL_SHADOW_SKILL GetEntity(string entityName)
	{
		return (TBL_SHADOW_SKILL) MetaDefault.GetEntity(entityName);
	}
	public static TBL_SHADOW_SKILL NewEntity()
	{
		return (TBL_SHADOW_SKILL) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_PET : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_PET(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_PET(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5419392749066783304,9860536917740989330));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Single Value
	{
		get
		{
			return _Value[Index];
		}
		set
		{
			_Value[Index] = value;
		}
	}
	public System.String Description
	{
		get
		{
			return _Description[Index];
		}
		set
		{
			_Description[Index] = value;
		}
	}
	public System.String Price
	{
		get
		{
			return _Price[Index];
		}
		set
		{
			_Price[Index] = value;
		}
	}
	public System.String IAP_ID
	{
		get
		{
			return _IAP_ID[Index];
		}
		set
		{
			_IAP_ID[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5335170197504847715,18266281507328765599));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Value;
	public static BansheeGz.BGDatabase.BGFieldFloat _Value
	{
		get
		{
			if(_ufle12jhs77_Value==null || _ufle12jhs77_Value.IsDeleted) _ufle12jhs77_Value=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5133416762152435052,10321896776070050439));
			return _ufle12jhs77_Value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Description;
	public static BansheeGz.BGDatabase.BGFieldString _Description
	{
		get
		{
			if(_ufle12jhs77_Description==null || _ufle12jhs77_Description.IsDeleted) _ufle12jhs77_Description=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5515239326418588585,13030553883532032703));
			return _ufle12jhs77_Description;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_Price;
	public static BansheeGz.BGDatabase.BGFieldString _Price
	{
		get
		{
			if(_ufle12jhs77_Price==null || _ufle12jhs77_Price.IsDeleted) _ufle12jhs77_Price=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(4798101660912056589,9494861014881958534));
			return _ufle12jhs77_Price;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_IAP_ID;
	public static BansheeGz.BGDatabase.BGFieldString _IAP_ID
	{
		get
		{
			if(_ufle12jhs77_IAP_ID==null || _ufle12jhs77_IAP_ID.IsDeleted) _ufle12jhs77_IAP_ID=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(4738364394247342719,394952061480505259));
			return _ufle12jhs77_IAP_ID;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_PET() : base(MetaDefault)
	{
	}
	private TBL_PET(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_PET(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_PET(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_PET FindEntity(Predicate<TBL_PET> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_PET) entity)) as TBL_PET;
	}
	public static List<TBL_PET> FindEntities(Predicate<TBL_PET> filter, List<TBL_PET> result=null, Comparison<TBL_PET> sort=null)
	{
		result = result ?? new List<TBL_PET>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_PET) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_PET) e1, (TBL_PET) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_PET) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_PET> action, Predicate<TBL_PET> filter=null, Comparison<TBL_PET> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_PET) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_PET) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_PET)e1,(TBL_PET)e2));
	}
	public static TBL_PET GetEntity(BGId entityId)
	{
		return (TBL_PET) MetaDefault.GetEntity(entityId);
	}
	public static TBL_PET GetEntity(int index)
	{
		return (TBL_PET) MetaDefault[index];
	}
	public static TBL_PET GetEntity(string entityName)
	{
		return (TBL_PET) MetaDefault.GetEntity(entityName);
	}
	public static TBL_PET NewEntity()
	{
		return (TBL_PET) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_GACHA_REWARD : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_GACHA_REWARD(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_GACHA_REWARD(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4932120994403348160,2078496759198055084));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public RewardType ItemType
	{
		get
		{
			return (RewardType) _ItemType[Index];
		}
		set
		{
			_ItemType[Index] = value;
		}
	}
	public System.Int32 ItemIndex
	{
		get
		{
			return _ItemIndex[Index];
		}
		set
		{
			_ItemIndex[Index] = value;
		}
	}
	public System.Int32 ItemCount
	{
		get
		{
			return _ItemCount[Index];
		}
		set
		{
			_ItemCount[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5748785743521148533,14277783230950288054));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ItemType;
	public static BansheeGz.BGDatabase.BGFieldEnum _ItemType
	{
		get
		{
			if(_ufle12jhs77_ItemType==null || _ufle12jhs77_ItemType.IsDeleted) _ufle12jhs77_ItemType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5356618798934589711,13394931677004343948));
			return _ufle12jhs77_ItemType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_ItemIndex;
	public static BansheeGz.BGDatabase.BGFieldInt _ItemIndex
	{
		get
		{
			if(_ufle12jhs77_ItemIndex==null || _ufle12jhs77_ItemIndex.IsDeleted) _ufle12jhs77_ItemIndex=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5230490809797121890,14276573515135532983));
			return _ufle12jhs77_ItemIndex;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_ItemCount;
	public static BansheeGz.BGDatabase.BGFieldInt _ItemCount
	{
		get
		{
			if(_ufle12jhs77_ItemCount==null || _ufle12jhs77_ItemCount.IsDeleted) _ufle12jhs77_ItemCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5455323561166579758,5204667089847868803));
			return _ufle12jhs77_ItemCount;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_GACHA_REWARD() : base(MetaDefault)
	{
	}
	private TBL_GACHA_REWARD(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_GACHA_REWARD(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_GACHA_REWARD(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_GACHA_REWARD FindEntity(Predicate<TBL_GACHA_REWARD> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_GACHA_REWARD) entity)) as TBL_GACHA_REWARD;
	}
	public static List<TBL_GACHA_REWARD> FindEntities(Predicate<TBL_GACHA_REWARD> filter, List<TBL_GACHA_REWARD> result=null, Comparison<TBL_GACHA_REWARD> sort=null)
	{
		result = result ?? new List<TBL_GACHA_REWARD>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_GACHA_REWARD) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_GACHA_REWARD) e1, (TBL_GACHA_REWARD) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_GACHA_REWARD) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_GACHA_REWARD> action, Predicate<TBL_GACHA_REWARD> filter=null, Comparison<TBL_GACHA_REWARD> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_GACHA_REWARD) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_GACHA_REWARD) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_GACHA_REWARD)e1,(TBL_GACHA_REWARD)e2));
	}
	public static TBL_GACHA_REWARD GetEntity(BGId entityId)
	{
		return (TBL_GACHA_REWARD) MetaDefault.GetEntity(entityId);
	}
	public static TBL_GACHA_REWARD GetEntity(int index)
	{
		return (TBL_GACHA_REWARD) MetaDefault[index];
	}
	public static TBL_GACHA_REWARD GetEntity(string entityName)
	{
		return (TBL_GACHA_REWARD) MetaDefault.GetEntity(entityName);
	}
	public static TBL_GACHA_REWARD NewEntity()
	{
		return (TBL_GACHA_REWARD) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_TOBEOL_REWARD_SLOT : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_TOBEOL_REWARD_SLOT(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_TOBEOL_REWARD_SLOT(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5131183454006331699,14785510032152011184));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Int32 PRICE
	{
		get
		{
			return _PRICE[Index];
		}
		set
		{
			_PRICE[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5504555463865278184,7771470482525136283));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_PRICE;
	public static BansheeGz.BGDatabase.BGFieldInt _PRICE
	{
		get
		{
			if(_ufle12jhs77_PRICE==null || _ufle12jhs77_PRICE.IsDeleted) _ufle12jhs77_PRICE=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5286902963019237635,8365070686124015531));
			return _ufle12jhs77_PRICE;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_TOBEOL_REWARD_SLOT() : base(MetaDefault)
	{
	}
	private TBL_TOBEOL_REWARD_SLOT(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_TOBEOL_REWARD_SLOT(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_TOBEOL_REWARD_SLOT(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_TOBEOL_REWARD_SLOT FindEntity(Predicate<TBL_TOBEOL_REWARD_SLOT> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_TOBEOL_REWARD_SLOT) entity)) as TBL_TOBEOL_REWARD_SLOT;
	}
	public static List<TBL_TOBEOL_REWARD_SLOT> FindEntities(Predicate<TBL_TOBEOL_REWARD_SLOT> filter, List<TBL_TOBEOL_REWARD_SLOT> result=null, Comparison<TBL_TOBEOL_REWARD_SLOT> sort=null)
	{
		result = result ?? new List<TBL_TOBEOL_REWARD_SLOT>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_TOBEOL_REWARD_SLOT) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_TOBEOL_REWARD_SLOT) e1, (TBL_TOBEOL_REWARD_SLOT) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_TOBEOL_REWARD_SLOT) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_TOBEOL_REWARD_SLOT> action, Predicate<TBL_TOBEOL_REWARD_SLOT> filter=null, Comparison<TBL_TOBEOL_REWARD_SLOT> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_TOBEOL_REWARD_SLOT) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_TOBEOL_REWARD_SLOT) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_TOBEOL_REWARD_SLOT)e1,(TBL_TOBEOL_REWARD_SLOT)e2));
	}
	public static TBL_TOBEOL_REWARD_SLOT GetEntity(BGId entityId)
	{
		return (TBL_TOBEOL_REWARD_SLOT) MetaDefault.GetEntity(entityId);
	}
	public static TBL_TOBEOL_REWARD_SLOT GetEntity(int index)
	{
		return (TBL_TOBEOL_REWARD_SLOT) MetaDefault[index];
	}
	public static TBL_TOBEOL_REWARD_SLOT GetEntity(string entityName)
	{
		return (TBL_TOBEOL_REWARD_SLOT) MetaDefault.GetEntity(entityName);
	}
	public static TBL_TOBEOL_REWARD_SLOT NewEntity()
	{
		return (TBL_TOBEOL_REWARD_SLOT) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_SHADOW_TREE : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_SHADOW_TREE(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_SHADOW_TREE(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5748722589087145426,8712656060518236074));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public TribeType TribeType
	{
		get
		{
			return (TribeType) _TribeType[Index];
		}
		set
		{
			_TribeType[Index] = value;
		}
	}
	public StatType StatType
	{
		get
		{
			return (StatType) _StatType[Index];
		}
		set
		{
			_StatType[Index] = value;
		}
	}
	public System.Single Value
	{
		get
		{
			return _Value[Index];
		}
		set
		{
			_Value[Index] = value;
		}
	}
	public System.Single IncreasValue
	{
		get
		{
			return _IncreasValue[Index];
		}
		set
		{
			_IncreasValue[Index] = value;
		}
	}
	public System.Single Cost
	{
		get
		{
			return _Cost[Index];
		}
		set
		{
			_Cost[Index] = value;
		}
	}
	public System.Single IncreaseCost
	{
		get
		{
			return _IncreaseCost[Index];
		}
		set
		{
			_IncreaseCost[Index] = value;
		}
	}
	public TBL_SHADOW_TREE PrevShadowTree1
	{
		get
		{
			return (TBL_SHADOW_TREE) _PrevShadowTree1[Index];
		}
		set
		{
			_PrevShadowTree1[Index] = value;
		}
	}
	public System.Int32 PrevRequireLevel1
	{
		get
		{
			return _PrevRequireLevel1[Index];
		}
		set
		{
			_PrevRequireLevel1[Index] = value;
		}
	}
	public TBL_SHADOW_TREE PrevShadowTree2
	{
		get
		{
			return (TBL_SHADOW_TREE) _PrevShadowTree2[Index];
		}
		set
		{
			_PrevShadowTree2[Index] = value;
		}
	}
	public System.Int32 PrevRequireLevel2
	{
		get
		{
			return _PrevRequireLevel2[Index];
		}
		set
		{
			_PrevRequireLevel2[Index] = value;
		}
	}
	public System.Int32 MaxLevel
	{
		get
		{
			return _MaxLevel[Index];
		}
		set
		{
			_MaxLevel[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5435757156733798672,10509831245782452149));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_TribeType;
	public static BansheeGz.BGDatabase.BGFieldEnum _TribeType
	{
		get
		{
			if(_ufle12jhs77_TribeType==null || _ufle12jhs77_TribeType.IsDeleted) _ufle12jhs77_TribeType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5097751564672080526,3432655043623279753));
			return _ufle12jhs77_TribeType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_StatType;
	public static BansheeGz.BGDatabase.BGFieldEnum _StatType
	{
		get
		{
			if(_ufle12jhs77_StatType==null || _ufle12jhs77_StatType.IsDeleted) _ufle12jhs77_StatType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5002676240250791359,17976868481878501257));
			return _ufle12jhs77_StatType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Value;
	public static BansheeGz.BGDatabase.BGFieldFloat _Value
	{
		get
		{
			if(_ufle12jhs77_Value==null || _ufle12jhs77_Value.IsDeleted) _ufle12jhs77_Value=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5683404926578926357,2404908024482463416));
			return _ufle12jhs77_Value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_IncreasValue;
	public static BansheeGz.BGDatabase.BGFieldFloat _IncreasValue
	{
		get
		{
			if(_ufle12jhs77_IncreasValue==null || _ufle12jhs77_IncreasValue.IsDeleted) _ufle12jhs77_IncreasValue=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5703021698102381199,15433853070573094825));
			return _ufle12jhs77_IncreasValue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Cost;
	public static BansheeGz.BGDatabase.BGFieldFloat _Cost
	{
		get
		{
			if(_ufle12jhs77_Cost==null || _ufle12jhs77_Cost.IsDeleted) _ufle12jhs77_Cost=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5462322592969858946,260336065471647912));
			return _ufle12jhs77_Cost;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_IncreaseCost;
	public static BansheeGz.BGDatabase.BGFieldFloat _IncreaseCost
	{
		get
		{
			if(_ufle12jhs77_IncreaseCost==null || _ufle12jhs77_IncreaseCost.IsDeleted) _ufle12jhs77_IncreaseCost=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5180717458426467019,8343592733196692395));
			return _ufle12jhs77_IncreaseCost;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_PrevShadowTree1;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _PrevShadowTree1
	{
		get
		{
			if(_ufle12jhs77_PrevShadowTree1==null || _ufle12jhs77_PrevShadowTree1.IsDeleted) _ufle12jhs77_PrevShadowTree1=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5291774478726493781,4877171393426632333));
			return _ufle12jhs77_PrevShadowTree1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_PrevRequireLevel1;
	public static BansheeGz.BGDatabase.BGFieldInt _PrevRequireLevel1
	{
		get
		{
			if(_ufle12jhs77_PrevRequireLevel1==null || _ufle12jhs77_PrevRequireLevel1.IsDeleted) _ufle12jhs77_PrevRequireLevel1=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4861875779783344239,10166079466491793076));
			return _ufle12jhs77_PrevRequireLevel1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_PrevShadowTree2;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _PrevShadowTree2
	{
		get
		{
			if(_ufle12jhs77_PrevShadowTree2==null || _ufle12jhs77_PrevShadowTree2.IsDeleted) _ufle12jhs77_PrevShadowTree2=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4868409312174465351,16430440346860380596));
			return _ufle12jhs77_PrevShadowTree2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_PrevRequireLevel2;
	public static BansheeGz.BGDatabase.BGFieldInt _PrevRequireLevel2
	{
		get
		{
			if(_ufle12jhs77_PrevRequireLevel2==null || _ufle12jhs77_PrevRequireLevel2.IsDeleted) _ufle12jhs77_PrevRequireLevel2=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5686097043664293780,4254663414176440983));
			return _ufle12jhs77_PrevRequireLevel2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_MaxLevel;
	public static BansheeGz.BGDatabase.BGFieldInt _MaxLevel
	{
		get
		{
			if(_ufle12jhs77_MaxLevel==null || _ufle12jhs77_MaxLevel.IsDeleted) _ufle12jhs77_MaxLevel=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5585063907416912079,17087582411599257990));
			return _ufle12jhs77_MaxLevel;
		}
	}
	private static readonly List<BGEntity> _tugjbyuhfv_reusableList = new List<BGEntity>();
	public List<TBL_SHADOW_TREE> RelatedTBL_SHADOW_TREEListUsingPrevShadowTree1Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_SHADOW_TREE._PrevShadowTree1.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_SHADOW_TREE>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_SHADOW_TREE) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_SHADOW_TREE> RelatedTBL_SHADOW_TREEListUsingPrevShadowTree2Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_SHADOW_TREE._PrevShadowTree2.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_SHADOW_TREE>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_SHADOW_TREE) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_WithTribeType;
	public static BansheeGz.BGDatabase.BGKey _WithTribeType
	{
		get
		{
			if(_edeht3sdad33_WithTribeType==null || _edeht3sdad33_WithTribeType.IsDeleted) _edeht3sdad33_WithTribeType= MetaDefault.GetKey(new BGId(5185404251817699672,17787656763716417704));
			return _edeht3sdad33_WithTribeType;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_SHADOW_TREE() : base(MetaDefault)
	{
	}
	private TBL_SHADOW_TREE(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_SHADOW_TREE(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_SHADOW_TREE(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_SHADOW_TREE FindEntity(Predicate<TBL_SHADOW_TREE> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_SHADOW_TREE) entity)) as TBL_SHADOW_TREE;
	}
	public static List<TBL_SHADOW_TREE> FindEntities(Predicate<TBL_SHADOW_TREE> filter, List<TBL_SHADOW_TREE> result=null, Comparison<TBL_SHADOW_TREE> sort=null)
	{
		result = result ?? new List<TBL_SHADOW_TREE>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_SHADOW_TREE) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_SHADOW_TREE) e1, (TBL_SHADOW_TREE) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_SHADOW_TREE) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_SHADOW_TREE> action, Predicate<TBL_SHADOW_TREE> filter=null, Comparison<TBL_SHADOW_TREE> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_SHADOW_TREE) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_SHADOW_TREE) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_SHADOW_TREE)e1,(TBL_SHADOW_TREE)e2));
	}
	public static TBL_SHADOW_TREE GetEntity(BGId entityId)
	{
		return (TBL_SHADOW_TREE) MetaDefault.GetEntity(entityId);
	}
	public static TBL_SHADOW_TREE GetEntity(int index)
	{
		return (TBL_SHADOW_TREE) MetaDefault[index];
	}
	public static TBL_SHADOW_TREE GetEntity(string entityName)
	{
		return (TBL_SHADOW_TREE) MetaDefault.GetEntity(entityName);
	}
	public static TBL_SHADOW_TREE NewEntity()
	{
		return (TBL_SHADOW_TREE) MetaDefault.NewEntity();
	}
	public static TBL_SHADOW_TREE GetEntityByKeyWithTribeType(TribeType TribeType)
	{
		return (TBL_SHADOW_TREE) _WithTribeType.GetEntityByKey(TribeType);
	}
	public static List<TBL_SHADOW_TREE> GetEntitiesByKeyWithTribeType(TribeType TribeType)
	{
		var result = _WithTribeType.GetEntitiesByKey(TribeType);
		if(result==null || result.Count==0) return null;
		var list = new List<TBL_SHADOW_TREE>(result.Count);
		for(var i = 0 ; i < result.Count ; i++) list.Add((TBL_SHADOW_TREE) result[i]);
		return list;
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_SHADOW_EQUIPMENT : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_SHADOW_EQUIPMENT(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_SHADOW_EQUIPMENT(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5731898013660457097,14204394167956971709));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public ShadowEquipmentType ShadowEquipmentType
	{
		get
		{
			return (ShadowEquipmentType) _ShadowEquipmentType[Index];
		}
		set
		{
			_ShadowEquipmentType[Index] = value;
		}
	}
	public ShadowEquipmentGrade ShadowEquipmentGrade
	{
		get
		{
			return (ShadowEquipmentGrade) _ShadowEquipmentGrade[Index];
		}
		set
		{
			_ShadowEquipmentGrade[Index] = value;
		}
	}
	public System.Int32 TypeIndex
	{
		get
		{
			return _TypeIndex[Index];
		}
		set
		{
			_TypeIndex[Index] = value;
		}
	}
	public StatType StatType
	{
		get
		{
			return (StatType) _StatType[Index];
		}
		set
		{
			_StatType[Index] = value;
		}
	}
	public System.Single Value
	{
		get
		{
			return _Value[Index];
		}
		set
		{
			_Value[Index] = value;
		}
	}
	public StatType OptionStatType1
	{
		get
		{
			return (StatType) _OptionStatType1[Index];
		}
		set
		{
			_OptionStatType1[Index] = value;
		}
	}
	public System.Single OptionValue1
	{
		get
		{
			return _OptionValue1[Index];
		}
		set
		{
			_OptionValue1[Index] = value;
		}
	}
	public StatType OptionStatType2
	{
		get
		{
			return (StatType) _OptionStatType2[Index];
		}
		set
		{
			_OptionStatType2[Index] = value;
		}
	}
	public System.Single OptionValue2
	{
		get
		{
			return _OptionValue2[Index];
		}
		set
		{
			_OptionValue2[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5098025196421899949,14961348219986640019));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ShadowEquipmentType;
	public static BansheeGz.BGDatabase.BGFieldEnum _ShadowEquipmentType
	{
		get
		{
			if(_ufle12jhs77_ShadowEquipmentType==null || _ufle12jhs77_ShadowEquipmentType.IsDeleted) _ufle12jhs77_ShadowEquipmentType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5409386860091520242,2404410492339850141));
			return _ufle12jhs77_ShadowEquipmentType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ShadowEquipmentGrade;
	public static BansheeGz.BGDatabase.BGFieldEnum _ShadowEquipmentGrade
	{
		get
		{
			if(_ufle12jhs77_ShadowEquipmentGrade==null || _ufle12jhs77_ShadowEquipmentGrade.IsDeleted) _ufle12jhs77_ShadowEquipmentGrade=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4789203395494494355,165678818788211848));
			return _ufle12jhs77_ShadowEquipmentGrade;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_TypeIndex;
	public static BansheeGz.BGDatabase.BGFieldInt _TypeIndex
	{
		get
		{
			if(_ufle12jhs77_TypeIndex==null || _ufle12jhs77_TypeIndex.IsDeleted) _ufle12jhs77_TypeIndex=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5290326104314507035,7677908124565452674));
			return _ufle12jhs77_TypeIndex;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_StatType;
	public static BansheeGz.BGDatabase.BGFieldEnum _StatType
	{
		get
		{
			if(_ufle12jhs77_StatType==null || _ufle12jhs77_StatType.IsDeleted) _ufle12jhs77_StatType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4623439662960630149,6775325340546194590));
			return _ufle12jhs77_StatType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Value;
	public static BansheeGz.BGDatabase.BGFieldFloat _Value
	{
		get
		{
			if(_ufle12jhs77_Value==null || _ufle12jhs77_Value.IsDeleted) _ufle12jhs77_Value=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4997832573223764942,15516332814497661365));
			return _ufle12jhs77_Value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_OptionStatType1;
	public static BansheeGz.BGDatabase.BGFieldEnum _OptionStatType1
	{
		get
		{
			if(_ufle12jhs77_OptionStatType1==null || _ufle12jhs77_OptionStatType1.IsDeleted) _ufle12jhs77_OptionStatType1=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5575207096021996331,111411205399131063));
			return _ufle12jhs77_OptionStatType1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_OptionValue1;
	public static BansheeGz.BGDatabase.BGFieldFloat _OptionValue1
	{
		get
		{
			if(_ufle12jhs77_OptionValue1==null || _ufle12jhs77_OptionValue1.IsDeleted) _ufle12jhs77_OptionValue1=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5436171578495953154,12068384214332923327));
			return _ufle12jhs77_OptionValue1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_OptionStatType2;
	public static BansheeGz.BGDatabase.BGFieldEnum _OptionStatType2
	{
		get
		{
			if(_ufle12jhs77_OptionStatType2==null || _ufle12jhs77_OptionStatType2.IsDeleted) _ufle12jhs77_OptionStatType2=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5099001745259581629,13418180478866813352));
			return _ufle12jhs77_OptionStatType2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_OptionValue2;
	public static BansheeGz.BGDatabase.BGFieldFloat _OptionValue2
	{
		get
		{
			if(_ufle12jhs77_OptionValue2==null || _ufle12jhs77_OptionValue2.IsDeleted) _ufle12jhs77_OptionValue2=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5261010162764860702,12198856829844780479));
			return _ufle12jhs77_OptionValue2;
		}
	}
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_WithShadowEquipmentGrade;
	public static BansheeGz.BGDatabase.BGKey _WithShadowEquipmentGrade
	{
		get
		{
			if(_edeht3sdad33_WithShadowEquipmentGrade==null || _edeht3sdad33_WithShadowEquipmentGrade.IsDeleted) _edeht3sdad33_WithShadowEquipmentGrade= MetaDefault.GetKey(new BGId(5136741884480483419,12930069266634258594));
			return _edeht3sdad33_WithShadowEquipmentGrade;
		}
	}
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_WithShadowEquipmentType;
	public static BansheeGz.BGDatabase.BGKey _WithShadowEquipmentType
	{
		get
		{
			if(_edeht3sdad33_WithShadowEquipmentType==null || _edeht3sdad33_WithShadowEquipmentType.IsDeleted) _edeht3sdad33_WithShadowEquipmentType= MetaDefault.GetKey(new BGId(5219795816138696235,14273647179430534059));
			return _edeht3sdad33_WithShadowEquipmentType;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_SHADOW_EQUIPMENT() : base(MetaDefault)
	{
	}
	private TBL_SHADOW_EQUIPMENT(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_SHADOW_EQUIPMENT(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_SHADOW_EQUIPMENT(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_SHADOW_EQUIPMENT FindEntity(Predicate<TBL_SHADOW_EQUIPMENT> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_SHADOW_EQUIPMENT) entity)) as TBL_SHADOW_EQUIPMENT;
	}
	public static List<TBL_SHADOW_EQUIPMENT> FindEntities(Predicate<TBL_SHADOW_EQUIPMENT> filter, List<TBL_SHADOW_EQUIPMENT> result=null, Comparison<TBL_SHADOW_EQUIPMENT> sort=null)
	{
		result = result ?? new List<TBL_SHADOW_EQUIPMENT>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_SHADOW_EQUIPMENT) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_SHADOW_EQUIPMENT) e1, (TBL_SHADOW_EQUIPMENT) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_SHADOW_EQUIPMENT) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_SHADOW_EQUIPMENT> action, Predicate<TBL_SHADOW_EQUIPMENT> filter=null, Comparison<TBL_SHADOW_EQUIPMENT> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_SHADOW_EQUIPMENT) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_SHADOW_EQUIPMENT) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_SHADOW_EQUIPMENT)e1,(TBL_SHADOW_EQUIPMENT)e2));
	}
	public static TBL_SHADOW_EQUIPMENT GetEntity(BGId entityId)
	{
		return (TBL_SHADOW_EQUIPMENT) MetaDefault.GetEntity(entityId);
	}
	public static TBL_SHADOW_EQUIPMENT GetEntity(int index)
	{
		return (TBL_SHADOW_EQUIPMENT) MetaDefault[index];
	}
	public static TBL_SHADOW_EQUIPMENT GetEntity(string entityName)
	{
		return (TBL_SHADOW_EQUIPMENT) MetaDefault.GetEntity(entityName);
	}
	public static TBL_SHADOW_EQUIPMENT NewEntity()
	{
		return (TBL_SHADOW_EQUIPMENT) MetaDefault.NewEntity();
	}
	public static TBL_SHADOW_EQUIPMENT GetEntityByKeyWithShadowEquipmentGrade(ShadowEquipmentGrade ShadowEquipmentGrade)
	{
		return (TBL_SHADOW_EQUIPMENT) _WithShadowEquipmentGrade.GetEntityByKey(ShadowEquipmentGrade);
	}
	public static List<TBL_SHADOW_EQUIPMENT> GetEntitiesByKeyWithShadowEquipmentGrade(ShadowEquipmentGrade ShadowEquipmentGrade)
	{
		var result = _WithShadowEquipmentGrade.GetEntitiesByKey(ShadowEquipmentGrade);
		if(result==null || result.Count==0) return null;
		var list = new List<TBL_SHADOW_EQUIPMENT>(result.Count);
		for(var i = 0 ; i < result.Count ; i++) list.Add((TBL_SHADOW_EQUIPMENT) result[i]);
		return list;
	}
	public static TBL_SHADOW_EQUIPMENT GetEntityByKeyWithShadowEquipmentType(ShadowEquipmentType ShadowEquipmentType)
	{
		return (TBL_SHADOW_EQUIPMENT) _WithShadowEquipmentType.GetEntityByKey(ShadowEquipmentType);
	}
	public static List<TBL_SHADOW_EQUIPMENT> GetEntitiesByKeyWithShadowEquipmentType(ShadowEquipmentType ShadowEquipmentType)
	{
		var result = _WithShadowEquipmentType.GetEntitiesByKey(ShadowEquipmentType);
		if(result==null || result.Count==0) return null;
		var list = new List<TBL_SHADOW_EQUIPMENT>(result.Count);
		for(var i = 0 ; i < result.Count ; i++) list.Add((TBL_SHADOW_EQUIPMENT) result[i]);
		return list;
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_KING_AURA : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_KING_AURA(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_KING_AURA(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4715192702100794524,4972526735350398375));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Double AbsoluteDamageValue
	{
		get
		{
			return _AbsoluteDamageValue[Index];
		}
		set
		{
			_AbsoluteDamageValue[Index] = value;
		}
	}
	public System.Double AbsoluteHealthValue
	{
		get
		{
			return _AbsoluteHealthValue[Index];
		}
		set
		{
			_AbsoluteHealthValue[Index] = value;
		}
	}
	public System.Int32 RequireRebirthWorld
	{
		get
		{
			return _RequireRebirthWorld[Index];
		}
		set
		{
			_RequireRebirthWorld[Index] = value;
		}
	}
	public StatType StatType
	{
		get
		{
			return (StatType) _StatType[Index];
		}
		set
		{
			_StatType[Index] = value;
		}
	}
	public System.Single Value
	{
		get
		{
			return _Value[Index];
		}
		set
		{
			_Value[Index] = value;
		}
	}
	public System.Int32 RequireRebirthCount
	{
		get
		{
			return _RequireRebirthCount[Index];
		}
		set
		{
			_RequireRebirthCount[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5101708236683384982,6328562024689449904));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_AbsoluteDamageValue;
	public static BansheeGz.BGDatabase.BGFieldDouble _AbsoluteDamageValue
	{
		get
		{
			if(_ufle12jhs77_AbsoluteDamageValue==null || _ufle12jhs77_AbsoluteDamageValue.IsDeleted) _ufle12jhs77_AbsoluteDamageValue=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(4806966200283233254,12780092182648553601));
			return _ufle12jhs77_AbsoluteDamageValue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_AbsoluteHealthValue;
	public static BansheeGz.BGDatabase.BGFieldDouble _AbsoluteHealthValue
	{
		get
		{
			if(_ufle12jhs77_AbsoluteHealthValue==null || _ufle12jhs77_AbsoluteHealthValue.IsDeleted) _ufle12jhs77_AbsoluteHealthValue=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5614114808722415706,7369412368808344764));
			return _ufle12jhs77_AbsoluteHealthValue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RequireRebirthWorld;
	public static BansheeGz.BGDatabase.BGFieldInt _RequireRebirthWorld
	{
		get
		{
			if(_ufle12jhs77_RequireRebirthWorld==null || _ufle12jhs77_RequireRebirthWorld.IsDeleted) _ufle12jhs77_RequireRebirthWorld=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5332104057816020963,9285396119072618381));
			return _ufle12jhs77_RequireRebirthWorld;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_StatType;
	public static BansheeGz.BGDatabase.BGFieldEnum _StatType
	{
		get
		{
			if(_ufle12jhs77_StatType==null || _ufle12jhs77_StatType.IsDeleted) _ufle12jhs77_StatType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5668722930706712934,11386043041526345135));
			return _ufle12jhs77_StatType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_Value;
	public static BansheeGz.BGDatabase.BGFieldFloat _Value
	{
		get
		{
			if(_ufle12jhs77_Value==null || _ufle12jhs77_Value.IsDeleted) _ufle12jhs77_Value=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5384833518144926467,9694640174766693543));
			return _ufle12jhs77_Value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RequireRebirthCount;
	public static BansheeGz.BGDatabase.BGFieldInt _RequireRebirthCount
	{
		get
		{
			if(_ufle12jhs77_RequireRebirthCount==null || _ufle12jhs77_RequireRebirthCount.IsDeleted) _ufle12jhs77_RequireRebirthCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4676811026440678106,1107853315534957212));
			return _ufle12jhs77_RequireRebirthCount;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_KING_AURA() : base(MetaDefault)
	{
	}
	private TBL_KING_AURA(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_KING_AURA(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_KING_AURA(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_KING_AURA FindEntity(Predicate<TBL_KING_AURA> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_KING_AURA) entity)) as TBL_KING_AURA;
	}
	public static List<TBL_KING_AURA> FindEntities(Predicate<TBL_KING_AURA> filter, List<TBL_KING_AURA> result=null, Comparison<TBL_KING_AURA> sort=null)
	{
		result = result ?? new List<TBL_KING_AURA>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_KING_AURA) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_KING_AURA) e1, (TBL_KING_AURA) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_KING_AURA) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_KING_AURA> action, Predicate<TBL_KING_AURA> filter=null, Comparison<TBL_KING_AURA> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_KING_AURA) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_KING_AURA) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_KING_AURA)e1,(TBL_KING_AURA)e2));
	}
	public static TBL_KING_AURA GetEntity(BGId entityId)
	{
		return (TBL_KING_AURA) MetaDefault.GetEntity(entityId);
	}
	public static TBL_KING_AURA GetEntity(int index)
	{
		return (TBL_KING_AURA) MetaDefault[index];
	}
	public static TBL_KING_AURA GetEntity(string entityName)
	{
		return (TBL_KING_AURA) MetaDefault.GetEntity(entityName);
	}
	public static TBL_KING_AURA NewEntity()
	{
		return (TBL_KING_AURA) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_HUNTING_SHADOWEQUIPMENT : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_HUNTING_SHADOWEQUIPMENT(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_HUNTING_SHADOWEQUIPMENT(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4611864224784772268,9199433124595702955));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Double AddDamage
	{
		get
		{
			return _AddDamage[Index];
		}
		set
		{
			_AddDamage[Index] = value;
		}
	}
	public System.Double Health
	{
		get
		{
			return _Health[Index];
		}
		set
		{
			_Health[Index] = value;
		}
	}
	public ShadowEquipmentGrade ShadowEquipmentGrade1
	{
		get
		{
			return (ShadowEquipmentGrade) _ShadowEquipmentGrade1[Index];
		}
		set
		{
			_ShadowEquipmentGrade1[Index] = value;
		}
	}
	public System.Int32 Count1
	{
		get
		{
			return _Count1[Index];
		}
		set
		{
			_Count1[Index] = value;
		}
	}
	public System.Int32 MinCount1
	{
		get
		{
			return _MinCount1[Index];
		}
		set
		{
			_MinCount1[Index] = value;
		}
	}
	public System.Int32 MaxCount1
	{
		get
		{
			return _MaxCount1[Index];
		}
		set
		{
			_MaxCount1[Index] = value;
		}
	}
	public ShadowEquipmentGrade ShadowEquipmentGrade2
	{
		get
		{
			return (ShadowEquipmentGrade) _ShadowEquipmentGrade2[Index];
		}
		set
		{
			_ShadowEquipmentGrade2[Index] = value;
		}
	}
	public System.Int32 Count2
	{
		get
		{
			return _Count2[Index];
		}
		set
		{
			_Count2[Index] = value;
		}
	}
	public System.Int32 MinCount2
	{
		get
		{
			return _MinCount2[Index];
		}
		set
		{
			_MinCount2[Index] = value;
		}
	}
	public System.Int32 MaxCount2
	{
		get
		{
			return _MaxCount2[Index];
		}
		set
		{
			_MaxCount2[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5114881743941565997,5962243025253704607));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_AddDamage;
	public static BansheeGz.BGDatabase.BGFieldDouble _AddDamage
	{
		get
		{
			if(_ufle12jhs77_AddDamage==null || _ufle12jhs77_AddDamage.IsDeleted) _ufle12jhs77_AddDamage=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5317525851012971211,12279338032907799487));
			return _ufle12jhs77_AddDamage;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_Health;
	public static BansheeGz.BGDatabase.BGFieldDouble _Health
	{
		get
		{
			if(_ufle12jhs77_Health==null || _ufle12jhs77_Health.IsDeleted) _ufle12jhs77_Health=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(4660346472222022763,6573233557435461543));
			return _ufle12jhs77_Health;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ShadowEquipmentGrade1;
	public static BansheeGz.BGDatabase.BGFieldEnum _ShadowEquipmentGrade1
	{
		get
		{
			if(_ufle12jhs77_ShadowEquipmentGrade1==null || _ufle12jhs77_ShadowEquipmentGrade1.IsDeleted) _ufle12jhs77_ShadowEquipmentGrade1=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5709494040946984089,16868705988593014444));
			return _ufle12jhs77_ShadowEquipmentGrade1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Count1;
	public static BansheeGz.BGDatabase.BGFieldInt _Count1
	{
		get
		{
			if(_ufle12jhs77_Count1==null || _ufle12jhs77_Count1.IsDeleted) _ufle12jhs77_Count1=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5108247686475230166,14971468656422356608));
			return _ufle12jhs77_Count1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_MinCount1;
	public static BansheeGz.BGDatabase.BGFieldInt _MinCount1
	{
		get
		{
			if(_ufle12jhs77_MinCount1==null || _ufle12jhs77_MinCount1.IsDeleted) _ufle12jhs77_MinCount1=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5566655641505334196,17003920730387777203));
			return _ufle12jhs77_MinCount1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_MaxCount1;
	public static BansheeGz.BGDatabase.BGFieldInt _MaxCount1
	{
		get
		{
			if(_ufle12jhs77_MaxCount1==null || _ufle12jhs77_MaxCount1.IsDeleted) _ufle12jhs77_MaxCount1=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5151995057515738799,11510892153896236175));
			return _ufle12jhs77_MaxCount1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ShadowEquipmentGrade2;
	public static BansheeGz.BGDatabase.BGFieldEnum _ShadowEquipmentGrade2
	{
		get
		{
			if(_ufle12jhs77_ShadowEquipmentGrade2==null || _ufle12jhs77_ShadowEquipmentGrade2.IsDeleted) _ufle12jhs77_ShadowEquipmentGrade2=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5481784048902407899,4375705344126488481));
			return _ufle12jhs77_ShadowEquipmentGrade2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Count2;
	public static BansheeGz.BGDatabase.BGFieldInt _Count2
	{
		get
		{
			if(_ufle12jhs77_Count2==null || _ufle12jhs77_Count2.IsDeleted) _ufle12jhs77_Count2=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4723052764603658065,9245827759081975453));
			return _ufle12jhs77_Count2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_MinCount2;
	public static BansheeGz.BGDatabase.BGFieldInt _MinCount2
	{
		get
		{
			if(_ufle12jhs77_MinCount2==null || _ufle12jhs77_MinCount2.IsDeleted) _ufle12jhs77_MinCount2=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5700163763294303331,6133107748173430711));
			return _ufle12jhs77_MinCount2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_MaxCount2;
	public static BansheeGz.BGDatabase.BGFieldInt _MaxCount2
	{
		get
		{
			if(_ufle12jhs77_MaxCount2==null || _ufle12jhs77_MaxCount2.IsDeleted) _ufle12jhs77_MaxCount2=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5318523603865156291,6472294870496178098));
			return _ufle12jhs77_MaxCount2;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_HUNTING_SHADOWEQUIPMENT() : base(MetaDefault)
	{
	}
	private TBL_HUNTING_SHADOWEQUIPMENT(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_HUNTING_SHADOWEQUIPMENT(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_HUNTING_SHADOWEQUIPMENT(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_HUNTING_SHADOWEQUIPMENT FindEntity(Predicate<TBL_HUNTING_SHADOWEQUIPMENT> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_HUNTING_SHADOWEQUIPMENT) entity)) as TBL_HUNTING_SHADOWEQUIPMENT;
	}
	public static List<TBL_HUNTING_SHADOWEQUIPMENT> FindEntities(Predicate<TBL_HUNTING_SHADOWEQUIPMENT> filter, List<TBL_HUNTING_SHADOWEQUIPMENT> result=null, Comparison<TBL_HUNTING_SHADOWEQUIPMENT> sort=null)
	{
		result = result ?? new List<TBL_HUNTING_SHADOWEQUIPMENT>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_HUNTING_SHADOWEQUIPMENT) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_HUNTING_SHADOWEQUIPMENT) e1, (TBL_HUNTING_SHADOWEQUIPMENT) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_HUNTING_SHADOWEQUIPMENT) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_HUNTING_SHADOWEQUIPMENT> action, Predicate<TBL_HUNTING_SHADOWEQUIPMENT> filter=null, Comparison<TBL_HUNTING_SHADOWEQUIPMENT> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_HUNTING_SHADOWEQUIPMENT) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_HUNTING_SHADOWEQUIPMENT) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_HUNTING_SHADOWEQUIPMENT)e1,(TBL_HUNTING_SHADOWEQUIPMENT)e2));
	}
	public static TBL_HUNTING_SHADOWEQUIPMENT GetEntity(BGId entityId)
	{
		return (TBL_HUNTING_SHADOWEQUIPMENT) MetaDefault.GetEntity(entityId);
	}
	public static TBL_HUNTING_SHADOWEQUIPMENT GetEntity(int index)
	{
		return (TBL_HUNTING_SHADOWEQUIPMENT) MetaDefault[index];
	}
	public static TBL_HUNTING_SHADOWEQUIPMENT GetEntity(string entityName)
	{
		return (TBL_HUNTING_SHADOWEQUIPMENT) MetaDefault.GetEntity(entityName);
	}
	public static TBL_HUNTING_SHADOWEQUIPMENT NewEntity()
	{
		return (TBL_HUNTING_SHADOWEQUIPMENT) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_HUNTING_DAILY : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_HUNTING_DAILY(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_HUNTING_DAILY(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5223283661721114198,6201500534268974720));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Double AddDamage
	{
		get
		{
			return _AddDamage[Index];
		}
		set
		{
			_AddDamage[Index] = value;
		}
	}
	public System.Double Health
	{
		get
		{
			return _Health[Index];
		}
		set
		{
			_Health[Index] = value;
		}
	}
	public ArtifactGrade ArtifactGrade1
	{
		get
		{
			return (ArtifactGrade) _ArtifactGrade1[Index];
		}
		set
		{
			_ArtifactGrade1[Index] = value;
		}
	}
	public System.Int32 Count1
	{
		get
		{
			return _Count1[Index];
		}
		set
		{
			_Count1[Index] = value;
		}
	}
	public ArtifactGrade ArtifactGrade2
	{
		get
		{
			return (ArtifactGrade) _ArtifactGrade2[Index];
		}
		set
		{
			_ArtifactGrade2[Index] = value;
		}
	}
	public System.Int32 Count2
	{
		get
		{
			return _Count2[Index];
		}
		set
		{
			_Count2[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5415176659138032791,8358646585471071679));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_AddDamage;
	public static BansheeGz.BGDatabase.BGFieldDouble _AddDamage
	{
		get
		{
			if(_ufle12jhs77_AddDamage==null || _ufle12jhs77_AddDamage.IsDeleted) _ufle12jhs77_AddDamage=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(4791674915434010487,7196396549913644478));
			return _ufle12jhs77_AddDamage;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_Health;
	public static BansheeGz.BGDatabase.BGFieldDouble _Health
	{
		get
		{
			if(_ufle12jhs77_Health==null || _ufle12jhs77_Health.IsDeleted) _ufle12jhs77_Health=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5111042800723324934,9741775773915282346));
			return _ufle12jhs77_Health;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ArtifactGrade1;
	public static BansheeGz.BGDatabase.BGFieldEnum _ArtifactGrade1
	{
		get
		{
			if(_ufle12jhs77_ArtifactGrade1==null || _ufle12jhs77_ArtifactGrade1.IsDeleted) _ufle12jhs77_ArtifactGrade1=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5257962962758262867,16876058164038096030));
			return _ufle12jhs77_ArtifactGrade1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Count1;
	public static BansheeGz.BGDatabase.BGFieldInt _Count1
	{
		get
		{
			if(_ufle12jhs77_Count1==null || _ufle12jhs77_Count1.IsDeleted) _ufle12jhs77_Count1=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5244798347145085258,18247069028183717817));
			return _ufle12jhs77_Count1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ArtifactGrade2;
	public static BansheeGz.BGDatabase.BGFieldEnum _ArtifactGrade2
	{
		get
		{
			if(_ufle12jhs77_ArtifactGrade2==null || _ufle12jhs77_ArtifactGrade2.IsDeleted) _ufle12jhs77_ArtifactGrade2=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4739856656541635647,3351566268878879679));
			return _ufle12jhs77_ArtifactGrade2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Count2;
	public static BansheeGz.BGDatabase.BGFieldInt _Count2
	{
		get
		{
			if(_ufle12jhs77_Count2==null || _ufle12jhs77_Count2.IsDeleted) _ufle12jhs77_Count2=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5415494183588782035,6431814751180982663));
			return _ufle12jhs77_Count2;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_HUNTING_DAILY() : base(MetaDefault)
	{
	}
	private TBL_HUNTING_DAILY(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_HUNTING_DAILY(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_HUNTING_DAILY(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_HUNTING_DAILY FindEntity(Predicate<TBL_HUNTING_DAILY> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_HUNTING_DAILY) entity)) as TBL_HUNTING_DAILY;
	}
	public static List<TBL_HUNTING_DAILY> FindEntities(Predicate<TBL_HUNTING_DAILY> filter, List<TBL_HUNTING_DAILY> result=null, Comparison<TBL_HUNTING_DAILY> sort=null)
	{
		result = result ?? new List<TBL_HUNTING_DAILY>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_HUNTING_DAILY) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_HUNTING_DAILY) e1, (TBL_HUNTING_DAILY) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_HUNTING_DAILY) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_HUNTING_DAILY> action, Predicate<TBL_HUNTING_DAILY> filter=null, Comparison<TBL_HUNTING_DAILY> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_HUNTING_DAILY) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_HUNTING_DAILY) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_HUNTING_DAILY)e1,(TBL_HUNTING_DAILY)e2));
	}
	public static TBL_HUNTING_DAILY GetEntity(BGId entityId)
	{
		return (TBL_HUNTING_DAILY) MetaDefault.GetEntity(entityId);
	}
	public static TBL_HUNTING_DAILY GetEntity(int index)
	{
		return (TBL_HUNTING_DAILY) MetaDefault[index];
	}
	public static TBL_HUNTING_DAILY GetEntity(string entityName)
	{
		return (TBL_HUNTING_DAILY) MetaDefault.GetEntity(entityName);
	}
	public static TBL_HUNTING_DAILY NewEntity()
	{
		return (TBL_HUNTING_DAILY) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_DIALOGUE : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_DIALOGUE(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_DIALOGUE(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5043697588733694017,8414002707491156387));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.String DialogueID
	{
		get
		{
			return _DialogueID[Index];
		}
		set
		{
			_DialogueID[Index] = value;
		}
	}
	public System.String SpeakerID
	{
		get
		{
			return _SpeakerID[Index];
		}
		set
		{
			_SpeakerID[Index] = value;
		}
	}
	public System.String DialogueKey
	{
		get
		{
			return _DialogueKey[Index];
		}
		set
		{
			_DialogueKey[Index] = value;
		}
	}
	public System.Boolean IsRight
	{
		get
		{
			return _IsRight[Index];
		}
		set
		{
			_IsRight[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4614804896780279320,7323991054501235099));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_DialogueID;
	public static BansheeGz.BGDatabase.BGFieldString _DialogueID
	{
		get
		{
			if(_ufle12jhs77_DialogueID==null || _ufle12jhs77_DialogueID.IsDeleted) _ufle12jhs77_DialogueID=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(5018453956848792602,18377202718085812671));
			return _ufle12jhs77_DialogueID;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_SpeakerID;
	public static BansheeGz.BGDatabase.BGFieldString _SpeakerID
	{
		get
		{
			if(_ufle12jhs77_SpeakerID==null || _ufle12jhs77_SpeakerID.IsDeleted) _ufle12jhs77_SpeakerID=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(4772648623110039050,11067741201389190029));
			return _ufle12jhs77_SpeakerID;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldString _ufle12jhs77_DialogueKey;
	public static BansheeGz.BGDatabase.BGFieldString _DialogueKey
	{
		get
		{
			if(_ufle12jhs77_DialogueKey==null || _ufle12jhs77_DialogueKey.IsDeleted) _ufle12jhs77_DialogueKey=(BansheeGz.BGDatabase.BGFieldString) MetaDefault.GetField(new BGId(4884595191939783708,11102201107932585870));
			return _ufle12jhs77_DialogueKey;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldBool _ufle12jhs77_IsRight;
	public static BansheeGz.BGDatabase.BGFieldBool _IsRight
	{
		get
		{
			if(_ufle12jhs77_IsRight==null || _ufle12jhs77_IsRight.IsDeleted) _ufle12jhs77_IsRight=(BansheeGz.BGDatabase.BGFieldBool) MetaDefault.GetField(new BGId(4770274358170431119,803410287977187224));
			return _ufle12jhs77_IsRight;
		}
	}
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_WithDialogueID;
	public static BansheeGz.BGDatabase.BGKey _WithDialogueID
	{
		get
		{
			if(_edeht3sdad33_WithDialogueID==null || _edeht3sdad33_WithDialogueID.IsDeleted) _edeht3sdad33_WithDialogueID= MetaDefault.GetKey(new BGId(4698906774523736490,240153527277953674));
			return _edeht3sdad33_WithDialogueID;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_DIALOGUE() : base(MetaDefault)
	{
	}
	private TBL_DIALOGUE(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_DIALOGUE(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_DIALOGUE(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_DIALOGUE FindEntity(Predicate<TBL_DIALOGUE> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_DIALOGUE) entity)) as TBL_DIALOGUE;
	}
	public static List<TBL_DIALOGUE> FindEntities(Predicate<TBL_DIALOGUE> filter, List<TBL_DIALOGUE> result=null, Comparison<TBL_DIALOGUE> sort=null)
	{
		result = result ?? new List<TBL_DIALOGUE>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_DIALOGUE) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_DIALOGUE) e1, (TBL_DIALOGUE) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_DIALOGUE) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_DIALOGUE> action, Predicate<TBL_DIALOGUE> filter=null, Comparison<TBL_DIALOGUE> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_DIALOGUE) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_DIALOGUE) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_DIALOGUE)e1,(TBL_DIALOGUE)e2));
	}
	public static TBL_DIALOGUE GetEntity(BGId entityId)
	{
		return (TBL_DIALOGUE) MetaDefault.GetEntity(entityId);
	}
	public static TBL_DIALOGUE GetEntity(int index)
	{
		return (TBL_DIALOGUE) MetaDefault[index];
	}
	public static TBL_DIALOGUE GetEntity(string entityName)
	{
		return (TBL_DIALOGUE) MetaDefault.GetEntity(entityName);
	}
	public static TBL_DIALOGUE NewEntity()
	{
		return (TBL_DIALOGUE) MetaDefault.NewEntity();
	}
	public static TBL_DIALOGUE GetEntityByKeyWithDialogueID(System.String DialogueID)
	{
		return (TBL_DIALOGUE) _WithDialogueID.GetEntityByKey(DialogueID);
	}
	public static List<TBL_DIALOGUE> GetEntitiesByKeyWithDialogueID(System.String DialogueID)
	{
		var result = _WithDialogueID.GetEntitiesByKey(DialogueID);
		if(result==null || result.Count==0) return null;
		var list = new List<TBL_DIALOGUE>(result.Count);
		for(var i = 0 ; i < result.Count ; i++) list.Add((TBL_DIALOGUE) result[i]);
		return list;
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_KING_CLASS : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_KING_CLASS(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_KING_CLASS(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4804221493893387737,17763170906091000510));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Single HealthValue
	{
		get
		{
			return _HealthValue[Index];
		}
		set
		{
			_HealthValue[Index] = value;
		}
	}
	public System.Single DamageValue
	{
		get
		{
			return _DamageValue[Index];
		}
		set
		{
			_DamageValue[Index] = value;
		}
	}
	public TBL_KING_CLASS_MONSTER_GROUP Wave1
	{
		get
		{
			return (TBL_KING_CLASS_MONSTER_GROUP) _Wave1[Index];
		}
		set
		{
			_Wave1[Index] = value;
		}
	}
	public TBL_KING_CLASS_MONSTER_GROUP Wave2
	{
		get
		{
			return (TBL_KING_CLASS_MONSTER_GROUP) _Wave2[Index];
		}
		set
		{
			_Wave2[Index] = value;
		}
	}
	public TBL_KING_CLASS_MONSTER_GROUP Wave3
	{
		get
		{
			return (TBL_KING_CLASS_MONSTER_GROUP) _Wave3[Index];
		}
		set
		{
			_Wave3[Index] = value;
		}
	}
	public TBL_KING_CLASS_MONSTER_GROUP Wave4
	{
		get
		{
			return (TBL_KING_CLASS_MONSTER_GROUP) _Wave4[Index];
		}
		set
		{
			_Wave4[Index] = value;
		}
	}
	public TBL_KING_CLASS_MONSTER_GROUP Wave5
	{
		get
		{
			return (TBL_KING_CLASS_MONSTER_GROUP) _Wave5[Index];
		}
		set
		{
			_Wave5[Index] = value;
		}
	}
	public System.Double Wave1_HealthBuff
	{
		get
		{
			return _Wave1_HealthBuff[Index];
		}
		set
		{
			_Wave1_HealthBuff[Index] = value;
		}
	}
	public System.Double Wave2_HealthBuff
	{
		get
		{
			return _Wave2_HealthBuff[Index];
		}
		set
		{
			_Wave2_HealthBuff[Index] = value;
		}
	}
	public System.Double Wave3_HealthBuff
	{
		get
		{
			return _Wave3_HealthBuff[Index];
		}
		set
		{
			_Wave3_HealthBuff[Index] = value;
		}
	}
	public System.Double Wave4_HealthBuff
	{
		get
		{
			return _Wave4_HealthBuff[Index];
		}
		set
		{
			_Wave4_HealthBuff[Index] = value;
		}
	}
	public System.Double Wave5_HealthBuff
	{
		get
		{
			return _Wave5_HealthBuff[Index];
		}
		set
		{
			_Wave5_HealthBuff[Index] = value;
		}
	}
	public System.Double HealthFactor
	{
		get
		{
			return _HealthFactor[Index];
		}
		set
		{
			_HealthFactor[Index] = value;
		}
	}
	public System.Double Wave1_DamageBuff
	{
		get
		{
			return _Wave1_DamageBuff[Index];
		}
		set
		{
			_Wave1_DamageBuff[Index] = value;
		}
	}
	public System.Double Wave2_DamageBuff
	{
		get
		{
			return _Wave2_DamageBuff[Index];
		}
		set
		{
			_Wave2_DamageBuff[Index] = value;
		}
	}
	public System.Double Wave3_DamageBuff
	{
		get
		{
			return _Wave3_DamageBuff[Index];
		}
		set
		{
			_Wave3_DamageBuff[Index] = value;
		}
	}
	public System.Double Wave4_DamageBuff
	{
		get
		{
			return _Wave4_DamageBuff[Index];
		}
		set
		{
			_Wave4_DamageBuff[Index] = value;
		}
	}
	public System.Double Wave5_DamageBuff
	{
		get
		{
			return _Wave5_DamageBuff[Index];
		}
		set
		{
			_Wave5_DamageBuff[Index] = value;
		}
	}
	public System.Double DamageFactor
	{
		get
		{
			return _DamageFactor[Index];
		}
		set
		{
			_DamageFactor[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4656957416647620398,11582630551881240993));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_HealthValue;
	public static BansheeGz.BGDatabase.BGFieldFloat _HealthValue
	{
		get
		{
			if(_ufle12jhs77_HealthValue==null || _ufle12jhs77_HealthValue.IsDeleted) _ufle12jhs77_HealthValue=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(4755909681082676143,1662112183134938761));
			return _ufle12jhs77_HealthValue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldFloat _ufle12jhs77_DamageValue;
	public static BansheeGz.BGDatabase.BGFieldFloat _DamageValue
	{
		get
		{
			if(_ufle12jhs77_DamageValue==null || _ufle12jhs77_DamageValue.IsDeleted) _ufle12jhs77_DamageValue=(BansheeGz.BGDatabase.BGFieldFloat) MetaDefault.GetField(new BGId(5311744523902451406,15851139709947449498));
			return _ufle12jhs77_DamageValue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave1;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave1
	{
		get
		{
			if(_ufle12jhs77_Wave1==null || _ufle12jhs77_Wave1.IsDeleted) _ufle12jhs77_Wave1=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4854529085868146310,13154587687782078108));
			return _ufle12jhs77_Wave1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave2;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave2
	{
		get
		{
			if(_ufle12jhs77_Wave2==null || _ufle12jhs77_Wave2.IsDeleted) _ufle12jhs77_Wave2=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5464119586560875391,4287851251212987300));
			return _ufle12jhs77_Wave2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave3;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave3
	{
		get
		{
			if(_ufle12jhs77_Wave3==null || _ufle12jhs77_Wave3.IsDeleted) _ufle12jhs77_Wave3=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4934166268002707102,12645029820524101513));
			return _ufle12jhs77_Wave3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave4;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave4
	{
		get
		{
			if(_ufle12jhs77_Wave4==null || _ufle12jhs77_Wave4.IsDeleted) _ufle12jhs77_Wave4=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4623838703893013490,10532489830833338757));
			return _ufle12jhs77_Wave4;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave5;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave5
	{
		get
		{
			if(_ufle12jhs77_Wave5==null || _ufle12jhs77_Wave5.IsDeleted) _ufle12jhs77_Wave5=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5470546373789731622,17590603430712760492));
			return _ufle12jhs77_Wave5;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_Wave1_HealthBuff;
	public static BansheeGz.BGDatabase.BGFieldDouble _Wave1_HealthBuff
	{
		get
		{
			if(_ufle12jhs77_Wave1_HealthBuff==null || _ufle12jhs77_Wave1_HealthBuff.IsDeleted) _ufle12jhs77_Wave1_HealthBuff=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5108804974326609947,5218585707172537246));
			return _ufle12jhs77_Wave1_HealthBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_Wave2_HealthBuff;
	public static BansheeGz.BGDatabase.BGFieldDouble _Wave2_HealthBuff
	{
		get
		{
			if(_ufle12jhs77_Wave2_HealthBuff==null || _ufle12jhs77_Wave2_HealthBuff.IsDeleted) _ufle12jhs77_Wave2_HealthBuff=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5711009639946104323,2915821751582664320));
			return _ufle12jhs77_Wave2_HealthBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_Wave3_HealthBuff;
	public static BansheeGz.BGDatabase.BGFieldDouble _Wave3_HealthBuff
	{
		get
		{
			if(_ufle12jhs77_Wave3_HealthBuff==null || _ufle12jhs77_Wave3_HealthBuff.IsDeleted) _ufle12jhs77_Wave3_HealthBuff=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5034214694391856143,8480279485464483974));
			return _ufle12jhs77_Wave3_HealthBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_Wave4_HealthBuff;
	public static BansheeGz.BGDatabase.BGFieldDouble _Wave4_HealthBuff
	{
		get
		{
			if(_ufle12jhs77_Wave4_HealthBuff==null || _ufle12jhs77_Wave4_HealthBuff.IsDeleted) _ufle12jhs77_Wave4_HealthBuff=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(4827692551748336299,2928689517523053729));
			return _ufle12jhs77_Wave4_HealthBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_Wave5_HealthBuff;
	public static BansheeGz.BGDatabase.BGFieldDouble _Wave5_HealthBuff
	{
		get
		{
			if(_ufle12jhs77_Wave5_HealthBuff==null || _ufle12jhs77_Wave5_HealthBuff.IsDeleted) _ufle12jhs77_Wave5_HealthBuff=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(4862947581547674875,10247526523797423517));
			return _ufle12jhs77_Wave5_HealthBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_HealthFactor;
	public static BansheeGz.BGDatabase.BGFieldDouble _HealthFactor
	{
		get
		{
			if(_ufle12jhs77_HealthFactor==null || _ufle12jhs77_HealthFactor.IsDeleted) _ufle12jhs77_HealthFactor=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(4798803626088410534,8578441275946707072));
			return _ufle12jhs77_HealthFactor;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_Wave1_DamageBuff;
	public static BansheeGz.BGDatabase.BGFieldDouble _Wave1_DamageBuff
	{
		get
		{
			if(_ufle12jhs77_Wave1_DamageBuff==null || _ufle12jhs77_Wave1_DamageBuff.IsDeleted) _ufle12jhs77_Wave1_DamageBuff=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5621857341993628910,8666422066114452876));
			return _ufle12jhs77_Wave1_DamageBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_Wave2_DamageBuff;
	public static BansheeGz.BGDatabase.BGFieldDouble _Wave2_DamageBuff
	{
		get
		{
			if(_ufle12jhs77_Wave2_DamageBuff==null || _ufle12jhs77_Wave2_DamageBuff.IsDeleted) _ufle12jhs77_Wave2_DamageBuff=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5711537372174147400,13192143958860372629));
			return _ufle12jhs77_Wave2_DamageBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_Wave3_DamageBuff;
	public static BansheeGz.BGDatabase.BGFieldDouble _Wave3_DamageBuff
	{
		get
		{
			if(_ufle12jhs77_Wave3_DamageBuff==null || _ufle12jhs77_Wave3_DamageBuff.IsDeleted) _ufle12jhs77_Wave3_DamageBuff=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5467883825664642366,9088617136528526485));
			return _ufle12jhs77_Wave3_DamageBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_Wave4_DamageBuff;
	public static BansheeGz.BGDatabase.BGFieldDouble _Wave4_DamageBuff
	{
		get
		{
			if(_ufle12jhs77_Wave4_DamageBuff==null || _ufle12jhs77_Wave4_DamageBuff.IsDeleted) _ufle12jhs77_Wave4_DamageBuff=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5752364691937618154,14132652808033025706));
			return _ufle12jhs77_Wave4_DamageBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_Wave5_DamageBuff;
	public static BansheeGz.BGDatabase.BGFieldDouble _Wave5_DamageBuff
	{
		get
		{
			if(_ufle12jhs77_Wave5_DamageBuff==null || _ufle12jhs77_Wave5_DamageBuff.IsDeleted) _ufle12jhs77_Wave5_DamageBuff=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(4839368096193457459,7696184753217080749));
			return _ufle12jhs77_Wave5_DamageBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_DamageFactor;
	public static BansheeGz.BGDatabase.BGFieldDouble _DamageFactor
	{
		get
		{
			if(_ufle12jhs77_DamageFactor==null || _ufle12jhs77_DamageFactor.IsDeleted) _ufle12jhs77_DamageFactor=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5017837981349071495,5112705217448891838));
			return _ufle12jhs77_DamageFactor;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_KING_CLASS() : base(MetaDefault)
	{
	}
	private TBL_KING_CLASS(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_KING_CLASS(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_KING_CLASS(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_KING_CLASS FindEntity(Predicate<TBL_KING_CLASS> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_KING_CLASS) entity)) as TBL_KING_CLASS;
	}
	public static List<TBL_KING_CLASS> FindEntities(Predicate<TBL_KING_CLASS> filter, List<TBL_KING_CLASS> result=null, Comparison<TBL_KING_CLASS> sort=null)
	{
		result = result ?? new List<TBL_KING_CLASS>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_KING_CLASS) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_KING_CLASS) e1, (TBL_KING_CLASS) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_KING_CLASS) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_KING_CLASS> action, Predicate<TBL_KING_CLASS> filter=null, Comparison<TBL_KING_CLASS> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_KING_CLASS) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_KING_CLASS) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_KING_CLASS)e1,(TBL_KING_CLASS)e2));
	}
	public static TBL_KING_CLASS GetEntity(BGId entityId)
	{
		return (TBL_KING_CLASS) MetaDefault.GetEntity(entityId);
	}
	public static TBL_KING_CLASS GetEntity(int index)
	{
		return (TBL_KING_CLASS) MetaDefault[index];
	}
	public static TBL_KING_CLASS GetEntity(string entityName)
	{
		return (TBL_KING_CLASS) MetaDefault.GetEntity(entityName);
	}
	public static TBL_KING_CLASS NewEntity()
	{
		return (TBL_KING_CLASS) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_KING_CLASS_MONSTER_GROUP : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_KING_CLASS_MONSTER_GROUP(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_KING_CLASS_MONSTER_GROUP(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5267442488006960654,355012923468274075));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Boolean> Row1
	{
		get
		{
			return _Row1[Index];
		}
		set
		{
			_Row1[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Boolean> Row2
	{
		get
		{
			return _Row2[Index];
		}
		set
		{
			_Row2[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Boolean> Row3
	{
		get
		{
			return _Row3[Index];
		}
		set
		{
			_Row3[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Boolean> Row4
	{
		get
		{
			return _Row4[Index];
		}
		set
		{
			_Row4[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Boolean> Row5
	{
		get
		{
			return _Row5[Index];
		}
		set
		{
			_Row5[Index] = value;
		}
	}
	public TBL_MONSTER MonsterRow1
	{
		get
		{
			return (TBL_MONSTER) _MonsterRow1[Index];
		}
		set
		{
			_MonsterRow1[Index] = value;
		}
	}
	public TBL_MONSTER MonsterRow2
	{
		get
		{
			return (TBL_MONSTER) _MonsterRow2[Index];
		}
		set
		{
			_MonsterRow2[Index] = value;
		}
	}
	public TBL_MONSTER MonsterRow3
	{
		get
		{
			return (TBL_MONSTER) _MonsterRow3[Index];
		}
		set
		{
			_MonsterRow3[Index] = value;
		}
	}
	public TBL_MONSTER MonsterRow4
	{
		get
		{
			return (TBL_MONSTER) _MonsterRow4[Index];
		}
		set
		{
			_MonsterRow4[Index] = value;
		}
	}
	public TBL_MONSTER MonsterRow5
	{
		get
		{
			return (TBL_MONSTER) _MonsterRow5[Index];
		}
		set
		{
			_MonsterRow5[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4621649595151166422,15306255487808972173));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListBool _ufle12jhs77_Row1;
	public static BansheeGz.BGDatabase.BGFieldListBool _Row1
	{
		get
		{
			if(_ufle12jhs77_Row1==null || _ufle12jhs77_Row1.IsDeleted) _ufle12jhs77_Row1=(BansheeGz.BGDatabase.BGFieldListBool) MetaDefault.GetField(new BGId(5231801825055844416,12197670816737233796));
			return _ufle12jhs77_Row1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListBool _ufle12jhs77_Row2;
	public static BansheeGz.BGDatabase.BGFieldListBool _Row2
	{
		get
		{
			if(_ufle12jhs77_Row2==null || _ufle12jhs77_Row2.IsDeleted) _ufle12jhs77_Row2=(BansheeGz.BGDatabase.BGFieldListBool) MetaDefault.GetField(new BGId(5075281300337534478,13150731064573895601));
			return _ufle12jhs77_Row2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListBool _ufle12jhs77_Row3;
	public static BansheeGz.BGDatabase.BGFieldListBool _Row3
	{
		get
		{
			if(_ufle12jhs77_Row3==null || _ufle12jhs77_Row3.IsDeleted) _ufle12jhs77_Row3=(BansheeGz.BGDatabase.BGFieldListBool) MetaDefault.GetField(new BGId(5609878888912288957,15998023876254639505));
			return _ufle12jhs77_Row3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListBool _ufle12jhs77_Row4;
	public static BansheeGz.BGDatabase.BGFieldListBool _Row4
	{
		get
		{
			if(_ufle12jhs77_Row4==null || _ufle12jhs77_Row4.IsDeleted) _ufle12jhs77_Row4=(BansheeGz.BGDatabase.BGFieldListBool) MetaDefault.GetField(new BGId(5282007757172254628,4175151401761181075));
			return _ufle12jhs77_Row4;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListBool _ufle12jhs77_Row5;
	public static BansheeGz.BGDatabase.BGFieldListBool _Row5
	{
		get
		{
			if(_ufle12jhs77_Row5==null || _ufle12jhs77_Row5.IsDeleted) _ufle12jhs77_Row5=(BansheeGz.BGDatabase.BGFieldListBool) MetaDefault.GetField(new BGId(5426798008281097604,2661954618172081024));
			return _ufle12jhs77_Row5;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_MonsterRow1;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _MonsterRow1
	{
		get
		{
			if(_ufle12jhs77_MonsterRow1==null || _ufle12jhs77_MonsterRow1.IsDeleted) _ufle12jhs77_MonsterRow1=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5048550125823715892,6470910408377183110));
			return _ufle12jhs77_MonsterRow1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_MonsterRow2;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _MonsterRow2
	{
		get
		{
			if(_ufle12jhs77_MonsterRow2==null || _ufle12jhs77_MonsterRow2.IsDeleted) _ufle12jhs77_MonsterRow2=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5244810049278350165,2406285219357727403));
			return _ufle12jhs77_MonsterRow2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_MonsterRow3;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _MonsterRow3
	{
		get
		{
			if(_ufle12jhs77_MonsterRow3==null || _ufle12jhs77_MonsterRow3.IsDeleted) _ufle12jhs77_MonsterRow3=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4851746266835526755,5978417061208036254));
			return _ufle12jhs77_MonsterRow3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_MonsterRow4;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _MonsterRow4
	{
		get
		{
			if(_ufle12jhs77_MonsterRow4==null || _ufle12jhs77_MonsterRow4.IsDeleted) _ufle12jhs77_MonsterRow4=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4767078776846649736,818348270350095515));
			return _ufle12jhs77_MonsterRow4;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_MonsterRow5;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _MonsterRow5
	{
		get
		{
			if(_ufle12jhs77_MonsterRow5==null || _ufle12jhs77_MonsterRow5.IsDeleted) _ufle12jhs77_MonsterRow5=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4832971911113982876,13007789186822611111));
			return _ufle12jhs77_MonsterRow5;
		}
	}
	private static readonly List<BGEntity> _tugjbyuhfv_reusableList = new List<BGEntity>();
	public List<TBL_KING_CLASS> RelatedTBL_KING_CLASSListUsingWave1Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_KING_CLASS._Wave1.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_KING_CLASS>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_KING_CLASS) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_KING_CLASS> RelatedTBL_KING_CLASSListUsingWave2Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_KING_CLASS._Wave2.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_KING_CLASS>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_KING_CLASS) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_KING_CLASS> RelatedTBL_KING_CLASSListUsingWave3Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_KING_CLASS._Wave3.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_KING_CLASS>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_KING_CLASS) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_KING_CLASS> RelatedTBL_KING_CLASSListUsingWave4Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_KING_CLASS._Wave4.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_KING_CLASS>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_KING_CLASS) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	public List<TBL_KING_CLASS> RelatedTBL_KING_CLASSListUsingWave5Relation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_KING_CLASS._Wave5.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_KING_CLASS>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_KING_CLASS) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_KING_CLASS_MONSTER_GROUP() : base(MetaDefault)
	{
	}
	private TBL_KING_CLASS_MONSTER_GROUP(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_KING_CLASS_MONSTER_GROUP(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_KING_CLASS_MONSTER_GROUP(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_KING_CLASS_MONSTER_GROUP FindEntity(Predicate<TBL_KING_CLASS_MONSTER_GROUP> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_KING_CLASS_MONSTER_GROUP) entity)) as TBL_KING_CLASS_MONSTER_GROUP;
	}
	public static List<TBL_KING_CLASS_MONSTER_GROUP> FindEntities(Predicate<TBL_KING_CLASS_MONSTER_GROUP> filter, List<TBL_KING_CLASS_MONSTER_GROUP> result=null, Comparison<TBL_KING_CLASS_MONSTER_GROUP> sort=null)
	{
		result = result ?? new List<TBL_KING_CLASS_MONSTER_GROUP>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_KING_CLASS_MONSTER_GROUP) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_KING_CLASS_MONSTER_GROUP) e1, (TBL_KING_CLASS_MONSTER_GROUP) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_KING_CLASS_MONSTER_GROUP) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_KING_CLASS_MONSTER_GROUP> action, Predicate<TBL_KING_CLASS_MONSTER_GROUP> filter=null, Comparison<TBL_KING_CLASS_MONSTER_GROUP> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_KING_CLASS_MONSTER_GROUP) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_KING_CLASS_MONSTER_GROUP) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_KING_CLASS_MONSTER_GROUP)e1,(TBL_KING_CLASS_MONSTER_GROUP)e2));
	}
	public static TBL_KING_CLASS_MONSTER_GROUP GetEntity(BGId entityId)
	{
		return (TBL_KING_CLASS_MONSTER_GROUP) MetaDefault.GetEntity(entityId);
	}
	public static TBL_KING_CLASS_MONSTER_GROUP GetEntity(int index)
	{
		return (TBL_KING_CLASS_MONSTER_GROUP) MetaDefault[index];
	}
	public static TBL_KING_CLASS_MONSTER_GROUP GetEntity(string entityName)
	{
		return (TBL_KING_CLASS_MONSTER_GROUP) MetaDefault.GetEntity(entityName);
	}
	public static TBL_KING_CLASS_MONSTER_GROUP NewEntity()
	{
		return (TBL_KING_CLASS_MONSTER_GROUP) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_SHADOWGROUP : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_SHADOWGROUP(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_SHADOWGROUP(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5118679403057828896,17608740890209513089));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Int32 ShadowIndex1
	{
		get
		{
			return _ShadowIndex1[Index];
		}
		set
		{
			_ShadowIndex1[Index] = value;
		}
	}
	public System.Int32 ShadowIndex2
	{
		get
		{
			return _ShadowIndex2[Index];
		}
		set
		{
			_ShadowIndex2[Index] = value;
		}
	}
	public System.Int32 ShadowIndex3
	{
		get
		{
			return _ShadowIndex3[Index];
		}
		set
		{
			_ShadowIndex3[Index] = value;
		}
	}
	public System.Int32 ShadowIndex4
	{
		get
		{
			return _ShadowIndex4[Index];
		}
		set
		{
			_ShadowIndex4[Index] = value;
		}
	}
	public System.Int32 ShadowIndex5
	{
		get
		{
			return _ShadowIndex5[Index];
		}
		set
		{
			_ShadowIndex5[Index] = value;
		}
	}
	public System.Int32 ShadowIndex6
	{
		get
		{
			return _ShadowIndex6[Index];
		}
		set
		{
			_ShadowIndex6[Index] = value;
		}
	}
	public System.Int32 Level1_StarCount
	{
		get
		{
			return _Level1_StarCount[Index];
		}
		set
		{
			_Level1_StarCount[Index] = value;
		}
	}
	public System.Int32 Level1_Damage
	{
		get
		{
			return _Level1_Damage[Index];
		}
		set
		{
			_Level1_Damage[Index] = value;
		}
	}
	public System.Int32 Level1_Health
	{
		get
		{
			return _Level1_Health[Index];
		}
		set
		{
			_Level1_Health[Index] = value;
		}
	}
	public System.Int32 Level2_StarCount
	{
		get
		{
			return _Level2_StarCount[Index];
		}
		set
		{
			_Level2_StarCount[Index] = value;
		}
	}
	public System.Int32 Level2_Damage
	{
		get
		{
			return _Level2_Damage[Index];
		}
		set
		{
			_Level2_Damage[Index] = value;
		}
	}
	public System.Int32 Level2_Health
	{
		get
		{
			return _Level2_Health[Index];
		}
		set
		{
			_Level2_Health[Index] = value;
		}
	}
	public System.Int32 Level3_StarCount
	{
		get
		{
			return _Level3_StarCount[Index];
		}
		set
		{
			_Level3_StarCount[Index] = value;
		}
	}
	public System.Int32 Level3_Damage
	{
		get
		{
			return _Level3_Damage[Index];
		}
		set
		{
			_Level3_Damage[Index] = value;
		}
	}
	public System.Int32 Level3_Health
	{
		get
		{
			return _Level3_Health[Index];
		}
		set
		{
			_Level3_Health[Index] = value;
		}
	}
	public System.Int32 Level4_StarCount
	{
		get
		{
			return _Level4_StarCount[Index];
		}
		set
		{
			_Level4_StarCount[Index] = value;
		}
	}
	public System.Int32 Level4_Damage
	{
		get
		{
			return _Level4_Damage[Index];
		}
		set
		{
			_Level4_Damage[Index] = value;
		}
	}
	public System.Int32 Level4_Health
	{
		get
		{
			return _Level4_Health[Index];
		}
		set
		{
			_Level4_Health[Index] = value;
		}
	}
	public System.Int32 Level5_StarCount
	{
		get
		{
			return _Level5_StarCount[Index];
		}
		set
		{
			_Level5_StarCount[Index] = value;
		}
	}
	public System.Int32 Level5_Damage
	{
		get
		{
			return _Level5_Damage[Index];
		}
		set
		{
			_Level5_Damage[Index] = value;
		}
	}
	public System.Int32 Level5_Health
	{
		get
		{
			return _Level5_Health[Index];
		}
		set
		{
			_Level5_Health[Index] = value;
		}
	}
	public System.Int32 Level6_StarCount
	{
		get
		{
			return _Level6_StarCount[Index];
		}
		set
		{
			_Level6_StarCount[Index] = value;
		}
	}
	public System.Int32 Level6_Damage
	{
		get
		{
			return _Level6_Damage[Index];
		}
		set
		{
			_Level6_Damage[Index] = value;
		}
	}
	public System.Int32 Level6_Health
	{
		get
		{
			return _Level6_Health[Index];
		}
		set
		{
			_Level6_Health[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5007428931637131979,11129165098583128231));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_ShadowIndex1;
	public static BansheeGz.BGDatabase.BGFieldInt _ShadowIndex1
	{
		get
		{
			if(_ufle12jhs77_ShadowIndex1==null || _ufle12jhs77_ShadowIndex1.IsDeleted) _ufle12jhs77_ShadowIndex1=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5208288292060513211,7259912393945415103));
			return _ufle12jhs77_ShadowIndex1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_ShadowIndex2;
	public static BansheeGz.BGDatabase.BGFieldInt _ShadowIndex2
	{
		get
		{
			if(_ufle12jhs77_ShadowIndex2==null || _ufle12jhs77_ShadowIndex2.IsDeleted) _ufle12jhs77_ShadowIndex2=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4908179277540536757,12009900484396127383));
			return _ufle12jhs77_ShadowIndex2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_ShadowIndex3;
	public static BansheeGz.BGDatabase.BGFieldInt _ShadowIndex3
	{
		get
		{
			if(_ufle12jhs77_ShadowIndex3==null || _ufle12jhs77_ShadowIndex3.IsDeleted) _ufle12jhs77_ShadowIndex3=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5024173368306122241,16314673325128398488));
			return _ufle12jhs77_ShadowIndex3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_ShadowIndex4;
	public static BansheeGz.BGDatabase.BGFieldInt _ShadowIndex4
	{
		get
		{
			if(_ufle12jhs77_ShadowIndex4==null || _ufle12jhs77_ShadowIndex4.IsDeleted) _ufle12jhs77_ShadowIndex4=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4785643106100958278,2570093688704490916));
			return _ufle12jhs77_ShadowIndex4;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_ShadowIndex5;
	public static BansheeGz.BGDatabase.BGFieldInt _ShadowIndex5
	{
		get
		{
			if(_ufle12jhs77_ShadowIndex5==null || _ufle12jhs77_ShadowIndex5.IsDeleted) _ufle12jhs77_ShadowIndex5=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4829129695803831115,6183955513000153790));
			return _ufle12jhs77_ShadowIndex5;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_ShadowIndex6;
	public static BansheeGz.BGDatabase.BGFieldInt _ShadowIndex6
	{
		get
		{
			if(_ufle12jhs77_ShadowIndex6==null || _ufle12jhs77_ShadowIndex6.IsDeleted) _ufle12jhs77_ShadowIndex6=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5502710001047811312,5482861490775959739));
			return _ufle12jhs77_ShadowIndex6;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Level1_StarCount;
	public static BansheeGz.BGDatabase.BGFieldInt _Level1_StarCount
	{
		get
		{
			if(_ufle12jhs77_Level1_StarCount==null || _ufle12jhs77_Level1_StarCount.IsDeleted) _ufle12jhs77_Level1_StarCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4722625660708690208,14644043108382745477));
			return _ufle12jhs77_Level1_StarCount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Level1_Damage;
	public static BansheeGz.BGDatabase.BGFieldInt _Level1_Damage
	{
		get
		{
			if(_ufle12jhs77_Level1_Damage==null || _ufle12jhs77_Level1_Damage.IsDeleted) _ufle12jhs77_Level1_Damage=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4870609708041918609,11491618705870563499));
			return _ufle12jhs77_Level1_Damage;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Level1_Health;
	public static BansheeGz.BGDatabase.BGFieldInt _Level1_Health
	{
		get
		{
			if(_ufle12jhs77_Level1_Health==null || _ufle12jhs77_Level1_Health.IsDeleted) _ufle12jhs77_Level1_Health=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5102610951474640198,18141006604422336917));
			return _ufle12jhs77_Level1_Health;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Level2_StarCount;
	public static BansheeGz.BGDatabase.BGFieldInt _Level2_StarCount
	{
		get
		{
			if(_ufle12jhs77_Level2_StarCount==null || _ufle12jhs77_Level2_StarCount.IsDeleted) _ufle12jhs77_Level2_StarCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4720013610393692449,15312488748056744633));
			return _ufle12jhs77_Level2_StarCount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Level2_Damage;
	public static BansheeGz.BGDatabase.BGFieldInt _Level2_Damage
	{
		get
		{
			if(_ufle12jhs77_Level2_Damage==null || _ufle12jhs77_Level2_Damage.IsDeleted) _ufle12jhs77_Level2_Damage=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5622932750617117687,1007295061785470389));
			return _ufle12jhs77_Level2_Damage;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Level2_Health;
	public static BansheeGz.BGDatabase.BGFieldInt _Level2_Health
	{
		get
		{
			if(_ufle12jhs77_Level2_Health==null || _ufle12jhs77_Level2_Health.IsDeleted) _ufle12jhs77_Level2_Health=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5650309239686345014,2339967254925790105));
			return _ufle12jhs77_Level2_Health;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Level3_StarCount;
	public static BansheeGz.BGDatabase.BGFieldInt _Level3_StarCount
	{
		get
		{
			if(_ufle12jhs77_Level3_StarCount==null || _ufle12jhs77_Level3_StarCount.IsDeleted) _ufle12jhs77_Level3_StarCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5553874225308271610,969952227170031014));
			return _ufle12jhs77_Level3_StarCount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Level3_Damage;
	public static BansheeGz.BGDatabase.BGFieldInt _Level3_Damage
	{
		get
		{
			if(_ufle12jhs77_Level3_Damage==null || _ufle12jhs77_Level3_Damage.IsDeleted) _ufle12jhs77_Level3_Damage=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5016445512698524717,11378416867234476170));
			return _ufle12jhs77_Level3_Damage;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Level3_Health;
	public static BansheeGz.BGDatabase.BGFieldInt _Level3_Health
	{
		get
		{
			if(_ufle12jhs77_Level3_Health==null || _ufle12jhs77_Level3_Health.IsDeleted) _ufle12jhs77_Level3_Health=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5003050525072191861,379137337569122998));
			return _ufle12jhs77_Level3_Health;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Level4_StarCount;
	public static BansheeGz.BGDatabase.BGFieldInt _Level4_StarCount
	{
		get
		{
			if(_ufle12jhs77_Level4_StarCount==null || _ufle12jhs77_Level4_StarCount.IsDeleted) _ufle12jhs77_Level4_StarCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4651637934762431243,12829010568400670394));
			return _ufle12jhs77_Level4_StarCount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Level4_Damage;
	public static BansheeGz.BGDatabase.BGFieldInt _Level4_Damage
	{
		get
		{
			if(_ufle12jhs77_Level4_Damage==null || _ufle12jhs77_Level4_Damage.IsDeleted) _ufle12jhs77_Level4_Damage=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5447994284387085531,948902211164432293));
			return _ufle12jhs77_Level4_Damage;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Level4_Health;
	public static BansheeGz.BGDatabase.BGFieldInt _Level4_Health
	{
		get
		{
			if(_ufle12jhs77_Level4_Health==null || _ufle12jhs77_Level4_Health.IsDeleted) _ufle12jhs77_Level4_Health=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5742032694783693560,6928960792055648161));
			return _ufle12jhs77_Level4_Health;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Level5_StarCount;
	public static BansheeGz.BGDatabase.BGFieldInt _Level5_StarCount
	{
		get
		{
			if(_ufle12jhs77_Level5_StarCount==null || _ufle12jhs77_Level5_StarCount.IsDeleted) _ufle12jhs77_Level5_StarCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4973538590921760907,6515985453148784532));
			return _ufle12jhs77_Level5_StarCount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Level5_Damage;
	public static BansheeGz.BGDatabase.BGFieldInt _Level5_Damage
	{
		get
		{
			if(_ufle12jhs77_Level5_Damage==null || _ufle12jhs77_Level5_Damage.IsDeleted) _ufle12jhs77_Level5_Damage=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5367754005261966899,39495670750650015));
			return _ufle12jhs77_Level5_Damage;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Level5_Health;
	public static BansheeGz.BGDatabase.BGFieldInt _Level5_Health
	{
		get
		{
			if(_ufle12jhs77_Level5_Health==null || _ufle12jhs77_Level5_Health.IsDeleted) _ufle12jhs77_Level5_Health=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5761853467814506162,9337347094813502854));
			return _ufle12jhs77_Level5_Health;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Level6_StarCount;
	public static BansheeGz.BGDatabase.BGFieldInt _Level6_StarCount
	{
		get
		{
			if(_ufle12jhs77_Level6_StarCount==null || _ufle12jhs77_Level6_StarCount.IsDeleted) _ufle12jhs77_Level6_StarCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4905931557574466956,8624701251166282630));
			return _ufle12jhs77_Level6_StarCount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Level6_Damage;
	public static BansheeGz.BGDatabase.BGFieldInt _Level6_Damage
	{
		get
		{
			if(_ufle12jhs77_Level6_Damage==null || _ufle12jhs77_Level6_Damage.IsDeleted) _ufle12jhs77_Level6_Damage=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5000710312459272146,3708045677582146990));
			return _ufle12jhs77_Level6_Damage;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Level6_Health;
	public static BansheeGz.BGDatabase.BGFieldInt _Level6_Health
	{
		get
		{
			if(_ufle12jhs77_Level6_Health==null || _ufle12jhs77_Level6_Health.IsDeleted) _ufle12jhs77_Level6_Health=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5204336051647830390,4307127558949523875));
			return _ufle12jhs77_Level6_Health;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_SHADOWGROUP() : base(MetaDefault)
	{
	}
	private TBL_SHADOWGROUP(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_SHADOWGROUP(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_SHADOWGROUP(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_SHADOWGROUP FindEntity(Predicate<TBL_SHADOWGROUP> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_SHADOWGROUP) entity)) as TBL_SHADOWGROUP;
	}
	public static List<TBL_SHADOWGROUP> FindEntities(Predicate<TBL_SHADOWGROUP> filter, List<TBL_SHADOWGROUP> result=null, Comparison<TBL_SHADOWGROUP> sort=null)
	{
		result = result ?? new List<TBL_SHADOWGROUP>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_SHADOWGROUP) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_SHADOWGROUP) e1, (TBL_SHADOWGROUP) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_SHADOWGROUP) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_SHADOWGROUP> action, Predicate<TBL_SHADOWGROUP> filter=null, Comparison<TBL_SHADOWGROUP> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_SHADOWGROUP) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_SHADOWGROUP) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_SHADOWGROUP)e1,(TBL_SHADOWGROUP)e2));
	}
	public static TBL_SHADOWGROUP GetEntity(BGId entityId)
	{
		return (TBL_SHADOWGROUP) MetaDefault.GetEntity(entityId);
	}
	public static TBL_SHADOWGROUP GetEntity(int index)
	{
		return (TBL_SHADOWGROUP) MetaDefault[index];
	}
	public static TBL_SHADOWGROUP GetEntity(string entityName)
	{
		return (TBL_SHADOWGROUP) MetaDefault.GetEntity(entityName);
	}
	public static TBL_SHADOWGROUP NewEntity()
	{
		return (TBL_SHADOWGROUP) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_BOSS_RAID : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_BOSS_RAID(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_BOSS_RAID(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4689761449705626602,7492637751554407326));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public BossRaidType BossRaidType
	{
		get
		{
			return (BossRaidType) _BossRaidType[Index];
		}
		set
		{
			_BossRaidType[Index] = value;
		}
	}
	public TBL_MONSTER Wave1
	{
		get
		{
			return (TBL_MONSTER) _Wave1[Index];
		}
		set
		{
			_Wave1[Index] = value;
		}
	}
	public TBL_MONSTER Wave2
	{
		get
		{
			return (TBL_MONSTER) _Wave2[Index];
		}
		set
		{
			_Wave2[Index] = value;
		}
	}
	public TBL_MONSTER Wave3
	{
		get
		{
			return (TBL_MONSTER) _Wave3[Index];
		}
		set
		{
			_Wave3[Index] = value;
		}
	}
	public TBL_MONSTER Wave4
	{
		get
		{
			return (TBL_MONSTER) _Wave4[Index];
		}
		set
		{
			_Wave4[Index] = value;
		}
	}
	public TBL_MONSTER Wave5
	{
		get
		{
			return (TBL_MONSTER) _Wave5[Index];
		}
		set
		{
			_Wave5[Index] = value;
		}
	}
	public System.Double Wave1_HealthBuff
	{
		get
		{
			return _Wave1_HealthBuff[Index];
		}
		set
		{
			_Wave1_HealthBuff[Index] = value;
		}
	}
	public System.Double Wave2_HealthBuff
	{
		get
		{
			return _Wave2_HealthBuff[Index];
		}
		set
		{
			_Wave2_HealthBuff[Index] = value;
		}
	}
	public System.Double Wave3_HealthBuff
	{
		get
		{
			return _Wave3_HealthBuff[Index];
		}
		set
		{
			_Wave3_HealthBuff[Index] = value;
		}
	}
	public System.Double Wave4_HealthBuff
	{
		get
		{
			return _Wave4_HealthBuff[Index];
		}
		set
		{
			_Wave4_HealthBuff[Index] = value;
		}
	}
	public System.Double Wave5_HealthBuff
	{
		get
		{
			return _Wave5_HealthBuff[Index];
		}
		set
		{
			_Wave5_HealthBuff[Index] = value;
		}
	}
	public System.Double HealthFactor
	{
		get
		{
			return _HealthFactor[Index];
		}
		set
		{
			_HealthFactor[Index] = value;
		}
	}
	public System.Double Wave1_DamageBuff
	{
		get
		{
			return _Wave1_DamageBuff[Index];
		}
		set
		{
			_Wave1_DamageBuff[Index] = value;
		}
	}
	public System.Double Wave2_DamageBuff
	{
		get
		{
			return _Wave2_DamageBuff[Index];
		}
		set
		{
			_Wave2_DamageBuff[Index] = value;
		}
	}
	public System.Double Wave3_DamageBuff
	{
		get
		{
			return _Wave3_DamageBuff[Index];
		}
		set
		{
			_Wave3_DamageBuff[Index] = value;
		}
	}
	public System.Double Wave4_DamageBuff
	{
		get
		{
			return _Wave4_DamageBuff[Index];
		}
		set
		{
			_Wave4_DamageBuff[Index] = value;
		}
	}
	public System.Double Wave5_DamageBuff
	{
		get
		{
			return _Wave5_DamageBuff[Index];
		}
		set
		{
			_Wave5_DamageBuff[Index] = value;
		}
	}
	public System.Double DamageFactor
	{
		get
		{
			return _DamageFactor[Index];
		}
		set
		{
			_DamageFactor[Index] = value;
		}
	}
	public StatType RewardStatType1
	{
		get
		{
			return (StatType) _RewardStatType1[Index];
		}
		set
		{
			_RewardStatType1[Index] = value;
		}
	}
	public System.Double RewardStatValue1
	{
		get
		{
			return _RewardStatValue1[Index];
		}
		set
		{
			_RewardStatValue1[Index] = value;
		}
	}
	public StatType RewardStatType2
	{
		get
		{
			return (StatType) _RewardStatType2[Index];
		}
		set
		{
			_RewardStatType2[Index] = value;
		}
	}
	public System.Double RewardStatValue2
	{
		get
		{
			return _RewardStatValue2[Index];
		}
		set
		{
			_RewardStatValue2[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(5025751462090718328,16292701659597113248));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_BossRaidType;
	public static BansheeGz.BGDatabase.BGFieldEnum _BossRaidType
	{
		get
		{
			if(_ufle12jhs77_BossRaidType==null || _ufle12jhs77_BossRaidType.IsDeleted) _ufle12jhs77_BossRaidType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5431208275813142622,15904230757015597440));
			return _ufle12jhs77_BossRaidType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave1;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave1
	{
		get
		{
			if(_ufle12jhs77_Wave1==null || _ufle12jhs77_Wave1.IsDeleted) _ufle12jhs77_Wave1=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5339081608455468388,7641853882849542796));
			return _ufle12jhs77_Wave1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave2;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave2
	{
		get
		{
			if(_ufle12jhs77_Wave2==null || _ufle12jhs77_Wave2.IsDeleted) _ufle12jhs77_Wave2=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5439113468357237758,12287720338500951455));
			return _ufle12jhs77_Wave2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave3;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave3
	{
		get
		{
			if(_ufle12jhs77_Wave3==null || _ufle12jhs77_Wave3.IsDeleted) _ufle12jhs77_Wave3=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5025069786130902752,7257873253012383644));
			return _ufle12jhs77_Wave3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave4;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave4
	{
		get
		{
			if(_ufle12jhs77_Wave4==null || _ufle12jhs77_Wave4.IsDeleted) _ufle12jhs77_Wave4=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4752640417209558985,2847059233512896682));
			return _ufle12jhs77_Wave4;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_Wave5;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _Wave5
	{
		get
		{
			if(_ufle12jhs77_Wave5==null || _ufle12jhs77_Wave5.IsDeleted) _ufle12jhs77_Wave5=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(4904898692596771529,17223615193854499997));
			return _ufle12jhs77_Wave5;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_Wave1_HealthBuff;
	public static BansheeGz.BGDatabase.BGFieldDouble _Wave1_HealthBuff
	{
		get
		{
			if(_ufle12jhs77_Wave1_HealthBuff==null || _ufle12jhs77_Wave1_HealthBuff.IsDeleted) _ufle12jhs77_Wave1_HealthBuff=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5448981382384386368,1182089889640108719));
			return _ufle12jhs77_Wave1_HealthBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_Wave2_HealthBuff;
	public static BansheeGz.BGDatabase.BGFieldDouble _Wave2_HealthBuff
	{
		get
		{
			if(_ufle12jhs77_Wave2_HealthBuff==null || _ufle12jhs77_Wave2_HealthBuff.IsDeleted) _ufle12jhs77_Wave2_HealthBuff=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5684442872683954570,1283590065138584246));
			return _ufle12jhs77_Wave2_HealthBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_Wave3_HealthBuff;
	public static BansheeGz.BGDatabase.BGFieldDouble _Wave3_HealthBuff
	{
		get
		{
			if(_ufle12jhs77_Wave3_HealthBuff==null || _ufle12jhs77_Wave3_HealthBuff.IsDeleted) _ufle12jhs77_Wave3_HealthBuff=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(4742391088531885241,15599949682218499513));
			return _ufle12jhs77_Wave3_HealthBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_Wave4_HealthBuff;
	public static BansheeGz.BGDatabase.BGFieldDouble _Wave4_HealthBuff
	{
		get
		{
			if(_ufle12jhs77_Wave4_HealthBuff==null || _ufle12jhs77_Wave4_HealthBuff.IsDeleted) _ufle12jhs77_Wave4_HealthBuff=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5600723476303814728,2974552046908955033));
			return _ufle12jhs77_Wave4_HealthBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_Wave5_HealthBuff;
	public static BansheeGz.BGDatabase.BGFieldDouble _Wave5_HealthBuff
	{
		get
		{
			if(_ufle12jhs77_Wave5_HealthBuff==null || _ufle12jhs77_Wave5_HealthBuff.IsDeleted) _ufle12jhs77_Wave5_HealthBuff=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5354602259349554075,9763506599326902427));
			return _ufle12jhs77_Wave5_HealthBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_HealthFactor;
	public static BansheeGz.BGDatabase.BGFieldDouble _HealthFactor
	{
		get
		{
			if(_ufle12jhs77_HealthFactor==null || _ufle12jhs77_HealthFactor.IsDeleted) _ufle12jhs77_HealthFactor=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5453686302199728831,10858060045403827622));
			return _ufle12jhs77_HealthFactor;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_Wave1_DamageBuff;
	public static BansheeGz.BGDatabase.BGFieldDouble _Wave1_DamageBuff
	{
		get
		{
			if(_ufle12jhs77_Wave1_DamageBuff==null || _ufle12jhs77_Wave1_DamageBuff.IsDeleted) _ufle12jhs77_Wave1_DamageBuff=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5078195325254543478,2875272176984527018));
			return _ufle12jhs77_Wave1_DamageBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_Wave2_DamageBuff;
	public static BansheeGz.BGDatabase.BGFieldDouble _Wave2_DamageBuff
	{
		get
		{
			if(_ufle12jhs77_Wave2_DamageBuff==null || _ufle12jhs77_Wave2_DamageBuff.IsDeleted) _ufle12jhs77_Wave2_DamageBuff=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(4956414405710230978,5795454893004969140));
			return _ufle12jhs77_Wave2_DamageBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_Wave3_DamageBuff;
	public static BansheeGz.BGDatabase.BGFieldDouble _Wave3_DamageBuff
	{
		get
		{
			if(_ufle12jhs77_Wave3_DamageBuff==null || _ufle12jhs77_Wave3_DamageBuff.IsDeleted) _ufle12jhs77_Wave3_DamageBuff=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5481740735679369628,10087741097973541029));
			return _ufle12jhs77_Wave3_DamageBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_Wave4_DamageBuff;
	public static BansheeGz.BGDatabase.BGFieldDouble _Wave4_DamageBuff
	{
		get
		{
			if(_ufle12jhs77_Wave4_DamageBuff==null || _ufle12jhs77_Wave4_DamageBuff.IsDeleted) _ufle12jhs77_Wave4_DamageBuff=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5550525267222006597,18093586576941697419));
			return _ufle12jhs77_Wave4_DamageBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_Wave5_DamageBuff;
	public static BansheeGz.BGDatabase.BGFieldDouble _Wave5_DamageBuff
	{
		get
		{
			if(_ufle12jhs77_Wave5_DamageBuff==null || _ufle12jhs77_Wave5_DamageBuff.IsDeleted) _ufle12jhs77_Wave5_DamageBuff=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5120822577573248029,1259623296258066306));
			return _ufle12jhs77_Wave5_DamageBuff;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_DamageFactor;
	public static BansheeGz.BGDatabase.BGFieldDouble _DamageFactor
	{
		get
		{
			if(_ufle12jhs77_DamageFactor==null || _ufle12jhs77_DamageFactor.IsDeleted) _ufle12jhs77_DamageFactor=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5349401948966086713,10355304066614481812));
			return _ufle12jhs77_DamageFactor;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_RewardStatType1;
	public static BansheeGz.BGDatabase.BGFieldEnum _RewardStatType1
	{
		get
		{
			if(_ufle12jhs77_RewardStatType1==null || _ufle12jhs77_RewardStatType1.IsDeleted) _ufle12jhs77_RewardStatType1=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5439371747312246060,10228352626526755754));
			return _ufle12jhs77_RewardStatType1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_RewardStatValue1;
	public static BansheeGz.BGDatabase.BGFieldDouble _RewardStatValue1
	{
		get
		{
			if(_ufle12jhs77_RewardStatValue1==null || _ufle12jhs77_RewardStatValue1.IsDeleted) _ufle12jhs77_RewardStatValue1=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(4936766536604899840,12688089632218346122));
			return _ufle12jhs77_RewardStatValue1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_RewardStatType2;
	public static BansheeGz.BGDatabase.BGFieldEnum _RewardStatType2
	{
		get
		{
			if(_ufle12jhs77_RewardStatType2==null || _ufle12jhs77_RewardStatType2.IsDeleted) _ufle12jhs77_RewardStatType2=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5473512025316108039,7907513471856555415));
			return _ufle12jhs77_RewardStatType2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_RewardStatValue2;
	public static BansheeGz.BGDatabase.BGFieldDouble _RewardStatValue2
	{
		get
		{
			if(_ufle12jhs77_RewardStatValue2==null || _ufle12jhs77_RewardStatValue2.IsDeleted) _ufle12jhs77_RewardStatValue2=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5329583430644806699,12913740438150289805));
			return _ufle12jhs77_RewardStatValue2;
		}
	}
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_WithBossRaidType;
	public static BansheeGz.BGDatabase.BGKey _WithBossRaidType
	{
		get
		{
			if(_edeht3sdad33_WithBossRaidType==null || _edeht3sdad33_WithBossRaidType.IsDeleted) _edeht3sdad33_WithBossRaidType= MetaDefault.GetKey(new BGId(5372325018334428666,920159349126143878));
			return _edeht3sdad33_WithBossRaidType;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_BOSS_RAID() : base(MetaDefault)
	{
	}
	private TBL_BOSS_RAID(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_BOSS_RAID(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_BOSS_RAID(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_BOSS_RAID FindEntity(Predicate<TBL_BOSS_RAID> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_BOSS_RAID) entity)) as TBL_BOSS_RAID;
	}
	public static List<TBL_BOSS_RAID> FindEntities(Predicate<TBL_BOSS_RAID> filter, List<TBL_BOSS_RAID> result=null, Comparison<TBL_BOSS_RAID> sort=null)
	{
		result = result ?? new List<TBL_BOSS_RAID>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_BOSS_RAID) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_BOSS_RAID) e1, (TBL_BOSS_RAID) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_BOSS_RAID) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_BOSS_RAID> action, Predicate<TBL_BOSS_RAID> filter=null, Comparison<TBL_BOSS_RAID> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_BOSS_RAID) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_BOSS_RAID) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_BOSS_RAID)e1,(TBL_BOSS_RAID)e2));
	}
	public static TBL_BOSS_RAID GetEntity(BGId entityId)
	{
		return (TBL_BOSS_RAID) MetaDefault.GetEntity(entityId);
	}
	public static TBL_BOSS_RAID GetEntity(int index)
	{
		return (TBL_BOSS_RAID) MetaDefault[index];
	}
	public static TBL_BOSS_RAID GetEntity(string entityName)
	{
		return (TBL_BOSS_RAID) MetaDefault.GetEntity(entityName);
	}
	public static TBL_BOSS_RAID NewEntity()
	{
		return (TBL_BOSS_RAID) MetaDefault.NewEntity();
	}
	public static TBL_BOSS_RAID GetEntityByKeyWithBossRaidType(BossRaidType BossRaidType)
	{
		return (TBL_BOSS_RAID) _WithBossRaidType.GetEntityByKey(BossRaidType);
	}
	public static List<TBL_BOSS_RAID> GetEntitiesByKeyWithBossRaidType(BossRaidType BossRaidType)
	{
		var result = _WithBossRaidType.GetEntitiesByKey(BossRaidType);
		if(result==null || result.Count==0) return null;
		var list = new List<TBL_BOSS_RAID>(result.Count);
		for(var i = 0 ; i < result.Count ; i++) list.Add((TBL_BOSS_RAID) result[i]);
		return list;
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_GACHA_ARTIFACT : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_GACHA_ARTIFACT(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_GACHA_ARTIFACT(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5229620638002817633,10169981355233731470));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Int32 RequireCount
	{
		get
		{
			return _RequireCount[Index];
		}
		set
		{
			_RequireCount[Index] = value;
		}
	}
	public System.Collections.Generic.List<System.Single> Percents
	{
		get
		{
			return _Percents[Index];
		}
		set
		{
			_Percents[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4657292971804269775,10909359561233441962));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RequireCount;
	public static BansheeGz.BGDatabase.BGFieldInt _RequireCount
	{
		get
		{
			if(_ufle12jhs77_RequireCount==null || _ufle12jhs77_RequireCount.IsDeleted) _ufle12jhs77_RequireCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5252612111767686224,7657455894440210322));
			return _ufle12jhs77_RequireCount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldListFloat _ufle12jhs77_Percents;
	public static BansheeGz.BGDatabase.BGFieldListFloat _Percents
	{
		get
		{
			if(_ufle12jhs77_Percents==null || _ufle12jhs77_Percents.IsDeleted) _ufle12jhs77_Percents=(BansheeGz.BGDatabase.BGFieldListFloat) MetaDefault.GetField(new BGId(5528924591503560229,11369036187038928560));
			return _ufle12jhs77_Percents;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_GACHA_ARTIFACT() : base(MetaDefault)
	{
	}
	private TBL_GACHA_ARTIFACT(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_GACHA_ARTIFACT(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_GACHA_ARTIFACT(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_GACHA_ARTIFACT FindEntity(Predicate<TBL_GACHA_ARTIFACT> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_GACHA_ARTIFACT) entity)) as TBL_GACHA_ARTIFACT;
	}
	public static List<TBL_GACHA_ARTIFACT> FindEntities(Predicate<TBL_GACHA_ARTIFACT> filter, List<TBL_GACHA_ARTIFACT> result=null, Comparison<TBL_GACHA_ARTIFACT> sort=null)
	{
		result = result ?? new List<TBL_GACHA_ARTIFACT>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_GACHA_ARTIFACT) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_GACHA_ARTIFACT) e1, (TBL_GACHA_ARTIFACT) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_GACHA_ARTIFACT) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_GACHA_ARTIFACT> action, Predicate<TBL_GACHA_ARTIFACT> filter=null, Comparison<TBL_GACHA_ARTIFACT> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_GACHA_ARTIFACT) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_GACHA_ARTIFACT) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_GACHA_ARTIFACT)e1,(TBL_GACHA_ARTIFACT)e2));
	}
	public static TBL_GACHA_ARTIFACT GetEntity(BGId entityId)
	{
		return (TBL_GACHA_ARTIFACT) MetaDefault.GetEntity(entityId);
	}
	public static TBL_GACHA_ARTIFACT GetEntity(int index)
	{
		return (TBL_GACHA_ARTIFACT) MetaDefault[index];
	}
	public static TBL_GACHA_ARTIFACT GetEntity(string entityName)
	{
		return (TBL_GACHA_ARTIFACT) MetaDefault.GetEntity(entityName);
	}
	public static TBL_GACHA_ARTIFACT NewEntity()
	{
		return (TBL_GACHA_ARTIFACT) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_BATTLEPASS_REWARD : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_BATTLEPASS_REWARD(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_BATTLEPASS_REWARD(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(4854184321450413003,14086818308173268104));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public TBL_BATTLEPASS BattlePass
	{
		get
		{
			return (TBL_BATTLEPASS) _BattlePass[Index];
		}
		set
		{
			_BattlePass[Index] = value;
		}
	}
	public System.Int32 RequireCount
	{
		get
		{
			return _RequireCount[Index];
		}
		set
		{
			_RequireCount[Index] = value;
		}
	}
	public RewardType ADRewardType
	{
		get
		{
			return (RewardType) _ADRewardType[Index];
		}
		set
		{
			_ADRewardType[Index] = value;
		}
	}
	public System.Int32 ADRewardValue
	{
		get
		{
			return _ADRewardValue[Index];
		}
		set
		{
			_ADRewardValue[Index] = value;
		}
	}
	public System.Int32 ADRewardAmount
	{
		get
		{
			return _ADRewardAmount[Index];
		}
		set
		{
			_ADRewardAmount[Index] = value;
		}
	}
	public RewardType PremiumRewardType1
	{
		get
		{
			return (RewardType) _PremiumRewardType1[Index];
		}
		set
		{
			_PremiumRewardType1[Index] = value;
		}
	}
	public System.Int32 PremiumRewardValue1
	{
		get
		{
			return _PremiumRewardValue1[Index];
		}
		set
		{
			_PremiumRewardValue1[Index] = value;
		}
	}
	public System.Int32 PremiumRewardAmount1
	{
		get
		{
			return _PremiumRewardAmount1[Index];
		}
		set
		{
			_PremiumRewardAmount1[Index] = value;
		}
	}
	public RewardType PremiumRewardType2
	{
		get
		{
			return (RewardType) _PremiumRewardType2[Index];
		}
		set
		{
			_PremiumRewardType2[Index] = value;
		}
	}
	public System.Int32 PremiumRewardValue2
	{
		get
		{
			return _PremiumRewardValue2[Index];
		}
		set
		{
			_PremiumRewardValue2[Index] = value;
		}
	}
	public System.Int32 PremiumRewardAmount2
	{
		get
		{
			return _PremiumRewardAmount2[Index];
		}
		set
		{
			_PremiumRewardAmount2[Index] = value;
		}
	}
	public RewardType PremiumRewardType3
	{
		get
		{
			return (RewardType) _PremiumRewardType3[Index];
		}
		set
		{
			_PremiumRewardType3[Index] = value;
		}
	}
	public System.Int32 PremiumRewardValue3
	{
		get
		{
			return _PremiumRewardValue3[Index];
		}
		set
		{
			_PremiumRewardValue3[Index] = value;
		}
	}
	public System.Int32 PremiumRewardAmount3
	{
		get
		{
			return _PremiumRewardAmount3[Index];
		}
		set
		{
			_PremiumRewardAmount3[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4709082045455313706,15926643596313393042));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldRelationSingle _ufle12jhs77_BattlePass;
	public static BansheeGz.BGDatabase.BGFieldRelationSingle _BattlePass
	{
		get
		{
			if(_ufle12jhs77_BattlePass==null || _ufle12jhs77_BattlePass.IsDeleted) _ufle12jhs77_BattlePass=(BansheeGz.BGDatabase.BGFieldRelationSingle) MetaDefault.GetField(new BGId(5143487624248872699,1977039224195184040));
			return _ufle12jhs77_BattlePass;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_RequireCount;
	public static BansheeGz.BGDatabase.BGFieldInt _RequireCount
	{
		get
		{
			if(_ufle12jhs77_RequireCount==null || _ufle12jhs77_RequireCount.IsDeleted) _ufle12jhs77_RequireCount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4878373637131392376,10311902818555210171));
			return _ufle12jhs77_RequireCount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_ADRewardType;
	public static BansheeGz.BGDatabase.BGFieldEnum _ADRewardType
	{
		get
		{
			if(_ufle12jhs77_ADRewardType==null || _ufle12jhs77_ADRewardType.IsDeleted) _ufle12jhs77_ADRewardType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5700929351415362599,2537727327005870752));
			return _ufle12jhs77_ADRewardType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_ADRewardValue;
	public static BansheeGz.BGDatabase.BGFieldInt _ADRewardValue
	{
		get
		{
			if(_ufle12jhs77_ADRewardValue==null || _ufle12jhs77_ADRewardValue.IsDeleted) _ufle12jhs77_ADRewardValue=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4958062539344180875,17960848255795955121));
			return _ufle12jhs77_ADRewardValue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_ADRewardAmount;
	public static BansheeGz.BGDatabase.BGFieldInt _ADRewardAmount
	{
		get
		{
			if(_ufle12jhs77_ADRewardAmount==null || _ufle12jhs77_ADRewardAmount.IsDeleted) _ufle12jhs77_ADRewardAmount=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5171369944928296372,10880984787381134747));
			return _ufle12jhs77_ADRewardAmount;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_PremiumRewardType1;
	public static BansheeGz.BGDatabase.BGFieldEnum _PremiumRewardType1
	{
		get
		{
			if(_ufle12jhs77_PremiumRewardType1==null || _ufle12jhs77_PremiumRewardType1.IsDeleted) _ufle12jhs77_PremiumRewardType1=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5188867822249364139,11581478381541633441));
			return _ufle12jhs77_PremiumRewardType1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_PremiumRewardValue1;
	public static BansheeGz.BGDatabase.BGFieldInt _PremiumRewardValue1
	{
		get
		{
			if(_ufle12jhs77_PremiumRewardValue1==null || _ufle12jhs77_PremiumRewardValue1.IsDeleted) _ufle12jhs77_PremiumRewardValue1=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5380213498646625370,1550164744688947859));
			return _ufle12jhs77_PremiumRewardValue1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_PremiumRewardAmount1;
	public static BansheeGz.BGDatabase.BGFieldInt _PremiumRewardAmount1
	{
		get
		{
			if(_ufle12jhs77_PremiumRewardAmount1==null || _ufle12jhs77_PremiumRewardAmount1.IsDeleted) _ufle12jhs77_PremiumRewardAmount1=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5007717156743696741,5540883249839083413));
			return _ufle12jhs77_PremiumRewardAmount1;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_PremiumRewardType2;
	public static BansheeGz.BGDatabase.BGFieldEnum _PremiumRewardType2
	{
		get
		{
			if(_ufle12jhs77_PremiumRewardType2==null || _ufle12jhs77_PremiumRewardType2.IsDeleted) _ufle12jhs77_PremiumRewardType2=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4997987490755475013,2845096782479134909));
			return _ufle12jhs77_PremiumRewardType2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_PremiumRewardValue2;
	public static BansheeGz.BGDatabase.BGFieldInt _PremiumRewardValue2
	{
		get
		{
			if(_ufle12jhs77_PremiumRewardValue2==null || _ufle12jhs77_PremiumRewardValue2.IsDeleted) _ufle12jhs77_PremiumRewardValue2=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4732880475056696560,5508916340527965348));
			return _ufle12jhs77_PremiumRewardValue2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_PremiumRewardAmount2;
	public static BansheeGz.BGDatabase.BGFieldInt _PremiumRewardAmount2
	{
		get
		{
			if(_ufle12jhs77_PremiumRewardAmount2==null || _ufle12jhs77_PremiumRewardAmount2.IsDeleted) _ufle12jhs77_PremiumRewardAmount2=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4750031492771994024,7774223682076772238));
			return _ufle12jhs77_PremiumRewardAmount2;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_PremiumRewardType3;
	public static BansheeGz.BGDatabase.BGFieldEnum _PremiumRewardType3
	{
		get
		{
			if(_ufle12jhs77_PremiumRewardType3==null || _ufle12jhs77_PremiumRewardType3.IsDeleted) _ufle12jhs77_PremiumRewardType3=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(5141181996727108678,8938259528770591151));
			return _ufle12jhs77_PremiumRewardType3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_PremiumRewardValue3;
	public static BansheeGz.BGDatabase.BGFieldInt _PremiumRewardValue3
	{
		get
		{
			if(_ufle12jhs77_PremiumRewardValue3==null || _ufle12jhs77_PremiumRewardValue3.IsDeleted) _ufle12jhs77_PremiumRewardValue3=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5190373104920545800,12624704645939399854));
			return _ufle12jhs77_PremiumRewardValue3;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_PremiumRewardAmount3;
	public static BansheeGz.BGDatabase.BGFieldInt _PremiumRewardAmount3
	{
		get
		{
			if(_ufle12jhs77_PremiumRewardAmount3==null || _ufle12jhs77_PremiumRewardAmount3.IsDeleted) _ufle12jhs77_PremiumRewardAmount3=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4913847269396104166,8663433858051616446));
			return _ufle12jhs77_PremiumRewardAmount3;
		}
	}
	private static BansheeGz.BGDatabase.BGKey _edeht3sdad33_WithBattlePass;
	public static BansheeGz.BGDatabase.BGKey _WithBattlePass
	{
		get
		{
			if(_edeht3sdad33_WithBattlePass==null || _edeht3sdad33_WithBattlePass.IsDeleted) _edeht3sdad33_WithBattlePass= MetaDefault.GetKey(new BGId(5222090477709777090,3643119350348297637));
			return _edeht3sdad33_WithBattlePass;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_BATTLEPASS_REWARD() : base(MetaDefault)
	{
	}
	private TBL_BATTLEPASS_REWARD(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_BATTLEPASS_REWARD(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_BATTLEPASS_REWARD(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_BATTLEPASS_REWARD FindEntity(Predicate<TBL_BATTLEPASS_REWARD> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_BATTLEPASS_REWARD) entity)) as TBL_BATTLEPASS_REWARD;
	}
	public static List<TBL_BATTLEPASS_REWARD> FindEntities(Predicate<TBL_BATTLEPASS_REWARD> filter, List<TBL_BATTLEPASS_REWARD> result=null, Comparison<TBL_BATTLEPASS_REWARD> sort=null)
	{
		result = result ?? new List<TBL_BATTLEPASS_REWARD>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_BATTLEPASS_REWARD) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_BATTLEPASS_REWARD) e1, (TBL_BATTLEPASS_REWARD) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_BATTLEPASS_REWARD) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_BATTLEPASS_REWARD> action, Predicate<TBL_BATTLEPASS_REWARD> filter=null, Comparison<TBL_BATTLEPASS_REWARD> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_BATTLEPASS_REWARD) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_BATTLEPASS_REWARD) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_BATTLEPASS_REWARD)e1,(TBL_BATTLEPASS_REWARD)e2));
	}
	public static TBL_BATTLEPASS_REWARD GetEntity(BGId entityId)
	{
		return (TBL_BATTLEPASS_REWARD) MetaDefault.GetEntity(entityId);
	}
	public static TBL_BATTLEPASS_REWARD GetEntity(int index)
	{
		return (TBL_BATTLEPASS_REWARD) MetaDefault[index];
	}
	public static TBL_BATTLEPASS_REWARD GetEntity(string entityName)
	{
		return (TBL_BATTLEPASS_REWARD) MetaDefault.GetEntity(entityName);
	}
	public static TBL_BATTLEPASS_REWARD NewEntity()
	{
		return (TBL_BATTLEPASS_REWARD) MetaDefault.NewEntity();
	}
	public static TBL_BATTLEPASS_REWARD GetEntityByKeyWithBattlePass(TBL_BATTLEPASS BattlePass)
	{
		return (TBL_BATTLEPASS_REWARD) _WithBattlePass.GetEntityByKey(BattlePass);
	}
	public static List<TBL_BATTLEPASS_REWARD> GetEntitiesByKeyWithBattlePass(TBL_BATTLEPASS BattlePass)
	{
		var result = _WithBattlePass.GetEntitiesByKey(BattlePass);
		if(result==null || result.Count==0) return null;
		var list = new List<TBL_BATTLEPASS_REWARD>(result.Count);
		for(var i = 0 ; i < result.Count ; i++) list.Add((TBL_BATTLEPASS_REWARD) result[i]);
		return list;
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_BATTLEPASS : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_BATTLEPASS(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_BATTLEPASS(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5573978610377063787,12849956931881922736));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4644394710669917188,5512602695002582205));
			return _ufle12jhs77_name;
		}
	}
	private static readonly List<BGEntity> _tugjbyuhfv_reusableList = new List<BGEntity>();
	public List<TBL_BATTLEPASS_REWARD> RelatedTBL_BATTLEPASS_REWARDListUsingBattlePassRelation
	{
		get
		{
			var _private_related_list = Alias_rifegrt_TBL_BATTLEPASS_REWARD._BattlePass.GetRelatedIn(Id, _tugjbyuhfv_reusableList);
			if (_private_related_list.Count == 0) return null;
			var _private_result_list = new List<TBL_BATTLEPASS_REWARD>(_private_related_list.Count);
			for (var i = 0; i < _private_related_list.Count; i++) _private_result_list.Add((TBL_BATTLEPASS_REWARD) _private_related_list[i]);
			_tugjbyuhfv_reusableList.Clear();
			return _private_result_list;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_BATTLEPASS() : base(MetaDefault)
	{
	}
	private TBL_BATTLEPASS(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_BATTLEPASS(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_BATTLEPASS(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_BATTLEPASS FindEntity(Predicate<TBL_BATTLEPASS> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_BATTLEPASS) entity)) as TBL_BATTLEPASS;
	}
	public static List<TBL_BATTLEPASS> FindEntities(Predicate<TBL_BATTLEPASS> filter, List<TBL_BATTLEPASS> result=null, Comparison<TBL_BATTLEPASS> sort=null)
	{
		result = result ?? new List<TBL_BATTLEPASS>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_BATTLEPASS) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_BATTLEPASS) e1, (TBL_BATTLEPASS) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_BATTLEPASS) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_BATTLEPASS> action, Predicate<TBL_BATTLEPASS> filter=null, Comparison<TBL_BATTLEPASS> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_BATTLEPASS) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_BATTLEPASS) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_BATTLEPASS)e1,(TBL_BATTLEPASS)e2));
	}
	public static TBL_BATTLEPASS GetEntity(BGId entityId)
	{
		return (TBL_BATTLEPASS) MetaDefault.GetEntity(entityId);
	}
	public static TBL_BATTLEPASS GetEntity(int index)
	{
		return (TBL_BATTLEPASS) MetaDefault[index];
	}
	public static TBL_BATTLEPASS GetEntity(string entityName)
	{
		return (TBL_BATTLEPASS) MetaDefault.GetEntity(entityName);
	}
	public static TBL_BATTLEPASS NewEntity()
	{
		return (TBL_BATTLEPASS) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_HUNTING_EXP : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_HUNTING_EXP(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_HUNTING_EXP(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5229123387089258139,5959290548239571104));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public System.Int32 AddDamage
	{
		get
		{
			return _AddDamage[Index];
		}
		set
		{
			_AddDamage[Index] = value;
		}
	}
	public System.Double Health
	{
		get
		{
			return _Health[Index];
		}
		set
		{
			_Health[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4879461486217655363,5447111313687724175));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_AddDamage;
	public static BansheeGz.BGDatabase.BGFieldInt _AddDamage
	{
		get
		{
			if(_ufle12jhs77_AddDamage==null || _ufle12jhs77_AddDamage.IsDeleted) _ufle12jhs77_AddDamage=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5025666602756955995,13343488266594018737));
			return _ufle12jhs77_AddDamage;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_Health;
	public static BansheeGz.BGDatabase.BGFieldDouble _Health
	{
		get
		{
			if(_ufle12jhs77_Health==null || _ufle12jhs77_Health.IsDeleted) _ufle12jhs77_Health=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(4880299147687581129,6165341153236263816));
			return _ufle12jhs77_Health;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_HUNTING_EXP() : base(MetaDefault)
	{
	}
	private TBL_HUNTING_EXP(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_HUNTING_EXP(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_HUNTING_EXP(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_HUNTING_EXP FindEntity(Predicate<TBL_HUNTING_EXP> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_HUNTING_EXP) entity)) as TBL_HUNTING_EXP;
	}
	public static List<TBL_HUNTING_EXP> FindEntities(Predicate<TBL_HUNTING_EXP> filter, List<TBL_HUNTING_EXP> result=null, Comparison<TBL_HUNTING_EXP> sort=null)
	{
		result = result ?? new List<TBL_HUNTING_EXP>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_HUNTING_EXP) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_HUNTING_EXP) e1, (TBL_HUNTING_EXP) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_HUNTING_EXP) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_HUNTING_EXP> action, Predicate<TBL_HUNTING_EXP> filter=null, Comparison<TBL_HUNTING_EXP> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_HUNTING_EXP) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_HUNTING_EXP) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_HUNTING_EXP)e1,(TBL_HUNTING_EXP)e2));
	}
	public static TBL_HUNTING_EXP GetEntity(BGId entityId)
	{
		return (TBL_HUNTING_EXP) MetaDefault.GetEntity(entityId);
	}
	public static TBL_HUNTING_EXP GetEntity(int index)
	{
		return (TBL_HUNTING_EXP) MetaDefault[index];
	}
	public static TBL_HUNTING_EXP GetEntity(string entityName)
	{
		return (TBL_HUNTING_EXP) MetaDefault.GetEntity(entityName);
	}
	public static TBL_HUNTING_EXP NewEntity()
	{
		return (TBL_HUNTING_EXP) MetaDefault.NewEntity();
	}
}

//=============================================================
//||                   Generated by BansheeGz Code Generator ||
//=============================================================

public partial class TBL_UPGRADE_KINGDARK : BGEntity
{

	//=============================================================
	//||                   Generated by BansheeGz Code Generator ||
	//=============================================================

	public class Factory : BGEntity.EntityFactory
	{
		public BGEntity NewEntity(BGMetaEntity meta)
		{
			return new TBL_UPGRADE_KINGDARK(meta);
		}
		public BGEntity NewEntity(BGMetaEntity meta, BGId id)
		{
			return new TBL_UPGRADE_KINGDARK(meta, id);
		}
	}
	private static BansheeGz.BGDatabase.BGMetaRow _metaDefault;
	public static BansheeGz.BGDatabase.BGMetaRow MetaDefault
	{
		get
		{
			if(_metaDefault==null || _metaDefault.IsDeleted) _metaDefault=BGRepo.I.GetMeta<BansheeGz.BGDatabase.BGMetaRow>(new BGId(5164733334750703097,17433289439500288156));
			return _metaDefault;
		}
	}
	public static BansheeGz.BGDatabase.BGRepoEvents Events
	{
		get
		{
			return BGRepo.I.Events;
		}
	}
	private static readonly List<BGEntity> _find_Entities_Result = new List<BGEntity>();
	public static int CountEntities
	{
		get
		{
			return MetaDefault.CountEntities;
		}
	}
	public System.String name
	{
		get
		{
			return _name[Index];
		}
		set
		{
			_name[Index] = value;
		}
	}
	public StatType StatType
	{
		get
		{
			return (StatType) _StatType[Index];
		}
		set
		{
			_StatType[Index] = value;
		}
	}
	public System.Double Value
	{
		get
		{
			return _Value[Index];
		}
		set
		{
			_Value[Index] = value;
		}
	}
	public System.Double IncreaseValue
	{
		get
		{
			return _IncreaseValue[Index];
		}
		set
		{
			_IncreaseValue[Index] = value;
		}
	}
	public System.Int32 Price
	{
		get
		{
			return _Price[Index];
		}
		set
		{
			_Price[Index] = value;
		}
	}
	public System.Int32 MaxLevel
	{
		get
		{
			return _MaxLevel[Index];
		}
		set
		{
			_MaxLevel[Index] = value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEntityName _ufle12jhs77_name;
	public static BansheeGz.BGDatabase.BGFieldEntityName _name
	{
		get
		{
			if(_ufle12jhs77_name==null || _ufle12jhs77_name.IsDeleted) _ufle12jhs77_name=(BansheeGz.BGDatabase.BGFieldEntityName) MetaDefault.GetField(new BGId(4860252936954603186,4721275725346520989));
			return _ufle12jhs77_name;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldEnum _ufle12jhs77_StatType;
	public static BansheeGz.BGDatabase.BGFieldEnum _StatType
	{
		get
		{
			if(_ufle12jhs77_StatType==null || _ufle12jhs77_StatType.IsDeleted) _ufle12jhs77_StatType=(BansheeGz.BGDatabase.BGFieldEnum) MetaDefault.GetField(new BGId(4906398730460202484,12364960366415669694));
			return _ufle12jhs77_StatType;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_Value;
	public static BansheeGz.BGDatabase.BGFieldDouble _Value
	{
		get
		{
			if(_ufle12jhs77_Value==null || _ufle12jhs77_Value.IsDeleted) _ufle12jhs77_Value=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5554393662031903078,4809200722705770884));
			return _ufle12jhs77_Value;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldDouble _ufle12jhs77_IncreaseValue;
	public static BansheeGz.BGDatabase.BGFieldDouble _IncreaseValue
	{
		get
		{
			if(_ufle12jhs77_IncreaseValue==null || _ufle12jhs77_IncreaseValue.IsDeleted) _ufle12jhs77_IncreaseValue=(BansheeGz.BGDatabase.BGFieldDouble) MetaDefault.GetField(new BGId(5141400286033940642,2345672062321477519));
			return _ufle12jhs77_IncreaseValue;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_Price;
	public static BansheeGz.BGDatabase.BGFieldInt _Price
	{
		get
		{
			if(_ufle12jhs77_Price==null || _ufle12jhs77_Price.IsDeleted) _ufle12jhs77_Price=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(4745946767988915499,5963815669996545192));
			return _ufle12jhs77_Price;
		}
	}
	private static BansheeGz.BGDatabase.BGFieldInt _ufle12jhs77_MaxLevel;
	public static BansheeGz.BGDatabase.BGFieldInt _MaxLevel
	{
		get
		{
			if(_ufle12jhs77_MaxLevel==null || _ufle12jhs77_MaxLevel.IsDeleted) _ufle12jhs77_MaxLevel=(BansheeGz.BGDatabase.BGFieldInt) MetaDefault.GetField(new BGId(5251841740816334108,16207574415420741009));
			return _ufle12jhs77_MaxLevel;
		}
	}
	private static readonly TBL_KING.Factory _factory0_PFS = new TBL_KING.Factory();
	private static readonly TBL_MONSTER.Factory _factory1_PFS = new TBL_MONSTER.Factory();
	private static readonly TBL_SKILL.Factory _factory2_PFS = new TBL_SKILL.Factory();
	private static readonly TBL_STAGE.Factory _factory3_PFS = new TBL_STAGE.Factory();
	private static readonly TBL_MONSTER_GROUP.Factory _factory4_PFS = new TBL_MONSTER_GROUP.Factory();
	private static readonly TBL_UPGRADE_KING.Factory _factory5_PFS = new TBL_UPGRADE_KING.Factory();
	private static readonly TBL_SHADOW.Factory _factory6_PFS = new TBL_SHADOW.Factory();
	private static readonly TBL_ARTIFACT.Factory _factory7_PFS = new TBL_ARTIFACT.Factory();
	private static readonly TBL_QUEST.Factory _factory8_PFS = new TBL_QUEST.Factory();
	private static readonly TBL_ACHIEVEMENT.Factory _factory9_PFS = new TBL_ACHIEVEMENT.Factory();
	private static readonly TBL_PLAYER_LEVEL.Factory _factory10_PFS = new TBL_PLAYER_LEVEL.Factory();
	private static readonly TBL_MASTERY.Factory _factory11_PFS = new TBL_MASTERY.Factory();
	private static readonly TBL_GACHA_SKILL.Factory _factory12_PFS = new TBL_GACHA_SKILL.Factory();
	private static readonly TBL_TOBEOL_UPGRADE.Factory _factory13_PFS = new TBL_TOBEOL_UPGRADE.Factory();
	private static readonly TBL_TOBEOL_LEVEL.Factory _factory14_PFS = new TBL_TOBEOL_LEVEL.Factory();
	private static readonly SYSTEM_VALUE.Factory _factory15_PFS = new SYSTEM_VALUE.Factory();
	private static readonly TBL_DUNGEON1_MONSTER_GROUP.Factory _factory16_PFS = new TBL_DUNGEON1_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON1.Factory _factory17_PFS = new TBL_DUNGEON1.Factory();
	private static readonly TBL_DUNGEON.Factory _factory18_PFS = new TBL_DUNGEON.Factory();
	private static readonly TBL_LOCK.Factory _factory19_PFS = new TBL_LOCK.Factory();
	private static readonly TBL_SHOP.Factory _factory20_PFS = new TBL_SHOP.Factory();
	private static readonly TBL_WORLD.Factory _factory21_PFS = new TBL_WORLD.Factory();
	private static readonly TBL_DUNGEON2.Factory _factory22_PFS = new TBL_DUNGEON2.Factory();
	private static readonly TBL_DUNGEON3.Factory _factory23_PFS = new TBL_DUNGEON3.Factory();
	private static readonly TBL_DUNGEON4.Factory _factory24_PFS = new TBL_DUNGEON4.Factory();
	private static readonly TBL_DUNGEON2_MONSTER_GROUP.Factory _factory25_PFS = new TBL_DUNGEON2_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON3_MONSTER_GROUP.Factory _factory26_PFS = new TBL_DUNGEON3_MONSTER_GROUP.Factory();
	private static readonly TBL_DUNGEON4_MONSTER_GROUP.Factory _factory27_PFS = new TBL_DUNGEON4_MONSTER_GROUP.Factory();
	private static readonly TBL_SKILL_GRADE.Factory _factory28_PFS = new TBL_SKILL_GRADE.Factory();
	private static readonly TBL_SHADOW_GRADE.Factory _factory29_PFS = new TBL_SHADOW_GRADE.Factory();
	private static readonly TBL_SHADOW_PASSIVE.Factory _factory30_PFS = new TBL_SHADOW_PASSIVE.Factory();
	private static readonly TBL_GUIDE.Factory _factory31_PFS = new TBL_GUIDE.Factory();
	private static readonly TBL_SHADOW_PROMOTION.Factory _factory32_PFS = new TBL_SHADOW_PROMOTION.Factory();
	private static readonly TBL_GACHA_SHADOW.Factory _factory33_PFS = new TBL_GACHA_SHADOW.Factory();
	private static readonly TBL_DAILY_REWARD.Factory _factory34_PFS = new TBL_DAILY_REWARD.Factory();
	private static readonly TBL_PACKAGE.Factory _factory35_PFS = new TBL_PACKAGE.Factory();
	private static readonly TBL_TOKEN_ITEM.Factory _factory36_PFS = new TBL_TOKEN_ITEM.Factory();
	private static readonly TBL_TOBEOL_BUFF.Factory _factory37_PFS = new TBL_TOBEOL_BUFF.Factory();
	private static readonly TBL_TOKEN_PERCENT.Factory _factory38_PFS = new TBL_TOKEN_PERCENT.Factory();
	private static readonly TBL_SHADOW_SKILL.Factory _factory39_PFS = new TBL_SHADOW_SKILL.Factory();
	private static readonly TBL_PET.Factory _factory40_PFS = new TBL_PET.Factory();
	private static readonly TBL_GACHA_REWARD.Factory _factory41_PFS = new TBL_GACHA_REWARD.Factory();
	private static readonly TBL_TOBEOL_REWARD_SLOT.Factory _factory42_PFS = new TBL_TOBEOL_REWARD_SLOT.Factory();
	private static readonly TBL_SHADOW_TREE.Factory _factory43_PFS = new TBL_SHADOW_TREE.Factory();
	private static readonly TBL_SHADOW_EQUIPMENT.Factory _factory44_PFS = new TBL_SHADOW_EQUIPMENT.Factory();
	private static readonly TBL_KING_AURA.Factory _factory45_PFS = new TBL_KING_AURA.Factory();
	private static readonly TBL_HUNTING_SHADOWEQUIPMENT.Factory _factory46_PFS = new TBL_HUNTING_SHADOWEQUIPMENT.Factory();
	private static readonly TBL_HUNTING_DAILY.Factory _factory47_PFS = new TBL_HUNTING_DAILY.Factory();
	private static readonly TBL_DIALOGUE.Factory _factory48_PFS = new TBL_DIALOGUE.Factory();
	private static readonly TBL_KING_CLASS.Factory _factory49_PFS = new TBL_KING_CLASS.Factory();
	private static readonly TBL_KING_CLASS_MONSTER_GROUP.Factory _factory50_PFS = new TBL_KING_CLASS_MONSTER_GROUP.Factory();
	private static readonly TBL_SHADOWGROUP.Factory _factory51_PFS = new TBL_SHADOWGROUP.Factory();
	private static readonly TBL_BOSS_RAID.Factory _factory52_PFS = new TBL_BOSS_RAID.Factory();
	private static readonly TBL_GACHA_ARTIFACT.Factory _factory53_PFS = new TBL_GACHA_ARTIFACT.Factory();
	private static readonly TBL_BATTLEPASS_REWARD.Factory _factory54_PFS = new TBL_BATTLEPASS_REWARD.Factory();
	private static readonly TBL_BATTLEPASS.Factory _factory55_PFS = new TBL_BATTLEPASS.Factory();
	private static readonly TBL_HUNTING_EXP.Factory _factory56_PFS = new TBL_HUNTING_EXP.Factory();
	private static readonly TBL_UPGRADE_KINGDARK.Factory _factory57_PFS = new TBL_UPGRADE_KINGDARK.Factory();
	private TBL_UPGRADE_KINGDARK() : base(MetaDefault)
	{
	}
	private TBL_UPGRADE_KINGDARK(BGId id) : base(MetaDefault, id)
	{
	}
	private TBL_UPGRADE_KINGDARK(BGMetaEntity meta) : base(meta)
	{
	}
	private TBL_UPGRADE_KINGDARK(BGMetaEntity meta, BGId id) : base(meta, id)
	{
	}
	public static TBL_UPGRADE_KINGDARK FindEntity(Predicate<TBL_UPGRADE_KINGDARK> filter)
	{
		return MetaDefault.FindEntity(entity => filter==null || filter((TBL_UPGRADE_KINGDARK) entity)) as TBL_UPGRADE_KINGDARK;
	}
	public static List<TBL_UPGRADE_KINGDARK> FindEntities(Predicate<TBL_UPGRADE_KINGDARK> filter, List<TBL_UPGRADE_KINGDARK> result=null, Comparison<TBL_UPGRADE_KINGDARK> sort=null)
	{
		result = result ?? new List<TBL_UPGRADE_KINGDARK>();
		_find_Entities_Result.Clear();
		MetaDefault.FindEntities(filter == null ? (Predicate<BGEntity>) null: e => filter((TBL_UPGRADE_KINGDARK) e), _find_Entities_Result, sort == null ? (Comparison<BGEntity>) null : (e1, e2) => sort((TBL_UPGRADE_KINGDARK) e1, (TBL_UPGRADE_KINGDARK) e2));
		if (_find_Entities_Result.Count != 0)
		{
			for (var i = 0; i < _find_Entities_Result.Count; i++) result.Add((TBL_UPGRADE_KINGDARK) _find_Entities_Result[i]);
			_find_Entities_Result.Clear();
		}
		return result;
	}
	public static void ForEachEntity(Action<TBL_UPGRADE_KINGDARK> action, Predicate<TBL_UPGRADE_KINGDARK> filter=null, Comparison<TBL_UPGRADE_KINGDARK> sort=null)
	{
		MetaDefault.ForEachEntity(entity => action((TBL_UPGRADE_KINGDARK) entity), filter == null ? null : (Predicate<BGEntity>) (entity => filter((TBL_UPGRADE_KINGDARK) entity)), sort==null?(Comparison<BGEntity>) null:(e1,e2) => sort((TBL_UPGRADE_KINGDARK)e1,(TBL_UPGRADE_KINGDARK)e2));
	}
	public static TBL_UPGRADE_KINGDARK GetEntity(BGId entityId)
	{
		return (TBL_UPGRADE_KINGDARK) MetaDefault.GetEntity(entityId);
	}
	public static TBL_UPGRADE_KINGDARK GetEntity(int index)
	{
		return (TBL_UPGRADE_KINGDARK) MetaDefault[index];
	}
	public static TBL_UPGRADE_KINGDARK GetEntity(string entityName)
	{
		return (TBL_UPGRADE_KINGDARK) MetaDefault.GetEntity(entityName);
	}
	public static TBL_UPGRADE_KINGDARK NewEntity()
	{
		return (TBL_UPGRADE_KINGDARK) MetaDefault.NewEntity();
	}
}
#pragma warning restore 414
